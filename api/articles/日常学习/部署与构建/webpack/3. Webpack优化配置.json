{"title":"三、Webpack优化配置","slug":"日常学习/部署与构建/webpack/3. Webpack优化配置","date":"2021-01-01T09:13:58.000Z","updated":"2022-02-21T07:18:57.065Z","comments":true,"path":"api/articles/日常学习/部署与构建/webpack/3. Webpack优化配置.json","excerpt":null,"covers":null,"content":"<h2 id=\"性能优化\"><a class=\"markdownIt-Anchor\" href=\"#性能优化\"></a> 性能优化</h2>\n<p>性能优化包含开发环境优化和生产环境优化。</p>\n<ol>\n<li>开发环境\n<ul>\n<li>优化打包构建速度</li>\n<li><strong>优化代码调试</strong></li>\n</ul>\n</li>\n<li>生产环境\n<ul>\n<li>优化打包构建速度</li>\n<li><strong>优化代码运行的性能</strong></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"开发环境\"><a class=\"markdownIt-Anchor\" href=\"#开发环境\"></a> 开发环境</h2>\n<h3 id=\"hmr\"><a class=\"markdownIt-Anchor\" href=\"#hmr\"></a> HMR</h3>\n<p>即热更新：一个模块发生变化，只会重新打包这一个模块。</p>\n<p>在<code>devServer</code>中开启</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    contentBase<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n          open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 开启HMR功能</span>\n            <span class=\"token comment\">// 当修改了webpack配置，新配置要想生效，必须重新webpack服务</span>\n            hot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>\n<p>样式文件</p>\n<p>样式文件可以使用热更新，因为<code>style-loader</code>内部实现了</p>\n</li>\n<li>\n<p>js文件</p>\n<p>默认不使用HMR功能，需要手动修改支持HMR。且只能处理<strong>非入口</strong>文件。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 一旦 module.hot 为true，说明开启了HMR功能。 --> 让HMR功能代码生效</span>\n  module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./print.js'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 方法会监听 print.js 文件的变化，一旦发生变化，其他模块不会重新打包构建。</span>\n    <span class=\"token comment\">// 会执行后面的回调函数</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>HTML文件</p>\n<p>默认不支持，需要修改webpack中entry入口</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./src/js/index.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/index.html'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h3 id=\"source-map\"><a class=\"markdownIt-Anchor\" href=\"#source-map\"></a> source-map</h3>\n<p>source-map是一种<strong>提供源代码到构建后代码映射</strong>技术。开启source-map只需要在devServer中开启<code>devtool</code>即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    contentBase<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n    open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    hot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>关于<code>devtool</code>的选项</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">位置</th>\n<th style=\"text-align:center\">特点</th>\n<th style=\"text-align:center\">错误原因及位置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>inline-source-map</code></td>\n<td style=\"text-align:center\">内联</td>\n<td style=\"text-align:center\">只生成一个内联source-map</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>hidden-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">错误代码错误原因，但是没有错误位置</td>\n<td style=\"text-align:center\">不能追踪源代码错误，只能提示到构建后代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>eval-source-map</code></td>\n<td style=\"text-align:center\">内联</td>\n<td style=\"text-align:center\">每一个文件都生成对应的source-map，都在eval</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>nosources-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">错误代码准确信息, 但是没有任何源代码信息</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>cheap-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">只能精确的行</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>cheap-module-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">module会将loader的source map加入</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>内联和外部的区别：外部生成了文件，内联没有；内联速度比外部快</p>\n</blockquote>\n<p>开发环境与生产环境下source-map的选择：</p>\n<ul>\n<li>\n<p>开发环境：速度快，调试更友好</p>\n<ul>\n<li>速度快\n<ul>\n<li><code>eval-cheap-souce-map</code></li>\n<li><code>eval-source-map</code></li>\n</ul>\n</li>\n<li>调试友好\n<ul>\n<li><code>souce-map</code></li>\n<li><code>cheap-module-souce-map</code></li>\n<li><code>cheap-souce-map</code></li>\n</ul>\n</li>\n</ul>\n<p>因此开发环境下可以选择：<code>eval-source-map</code>或者<code>eval-cheap-module-souce-map</code></p>\n</li>\n<li>\n<p>生产环境</p>\n<ul>\n<li>\n<p>不隐藏源代码（便于调试）</p>\n<ul>\n<li><code>source-map</code></li>\n<li><code>cheap-module-souce-map</code></li>\n</ul>\n</li>\n<li>\n<p>因此源代码</p>\n<ul>\n<li>\n<p><code>nosources-source-map</code></p>\n<p>全部隐藏</p>\n</li>\n<li>\n<p><code>hidden-source-map</code></p>\n<p>只隐藏源代码，会提示构建后代码错误信息</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"oneof\"><a class=\"markdownIt-Anchor\" href=\"#oneof\"></a> oneOf</h3>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 其他loader</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      oneOf<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// loader配置</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>只需要将loader放入到<code>oneOf</code>数组中即可，使用<code>oneOf</code>后不能有两个loader处理同一类型的文件，因此需要将相同的loader提取到外边</p>\n<h3 id=\"缓存\"><a class=\"markdownIt-Anchor\" href=\"#缓存\"></a> 缓存</h3>\n<ol>\n<li>\n<p>babel缓存</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n    exclude<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n        options<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">[</span>\n              <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#123;</span>\n                useBuiltIns<span class=\"token operator\">:</span> <span class=\"token string\">'usage'</span><span class=\"token punctuation\">,</span>\n                corejs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> version<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                  chrome<span class=\"token operator\">:</span> <span class=\"token string\">'60'</span><span class=\"token punctuation\">,</span>\n                  firefox<span class=\"token operator\">:</span> <span class=\"token string\">'50'</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 开启babel缓存</span>\n            <span class=\"token comment\">// 第二次构建时，会读取之前的缓存</span>\n            cacheDirectory<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>文件资源缓存</p>\n<ul>\n<li>\n<p><code>hash</code></p>\n<p>和整个项⽬目的构建相关，只要项⽬目⽂文件有修改，整个项⽬目构建的 hash 值就会更更改</p>\n</li>\n<li>\n<p><code>chunkhash</code></p>\n<p>和 webpack 打包的 chunk 有关，不不同的 entry 会⽣生成不不同的 chunkhash 值</p>\n</li>\n<li>\n<p><code>contenthash</code></p>\n<p>根据⽂文件内容来定义 hash ，⽂文件内容不不变，则 contenthash 不不变</p>\n</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>一般情况下js文件使用<code>chunkhash</code>，css文件和图片使用<code>contenthash</code>，图片文件使用<code>hash</code></p>\n</blockquote>\n<h2 id=\"生产环境\"><a class=\"markdownIt-Anchor\" href=\"#生产环境\"></a> 生产环境</h2>\n<h3 id=\"去除无用代码\"><a class=\"markdownIt-Anchor\" href=\"#去除无用代码\"></a> 去除无用代码</h3>\n<p>可以按需加载需要使用的代码，减少代码体积。</p>\n<ol>\n<li>使用ES6模块化</li>\n<li>开启<code>production</code>环境</li>\n</ol>\n<p>此方法可能会将css资源忽略掉，因此可以在package.json中进行配置。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"sideEffects\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"*.css\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"*.less\"</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"代码分割\"><a class=\"markdownIt-Anchor\" href=\"#代码分割\"></a> 代码分割</h3>\n<p>即按需加载，生成多个js文件。</p>\n<ol>\n<li>\n<p>根据入口文件进行分割</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 单入口</span>\n  <span class=\"token comment\">// entry: './src/js/index.js',</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 多入口：有一个入口，最终输出就有一个bundle</span>\n    index<span class=\"token operator\">:</span> <span class=\"token string\">'./src/js/index.js'</span><span class=\"token punctuation\">,</span>\n    test<span class=\"token operator\">:</span> <span class=\"token string\">'./src/js/test.js'</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>分割node_moudle模块</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">/*\n    1. 可以将node_modules中代码单独打包一个chunk最终输出\n    2. 自动分析多入口chunk中，有没有公共的文件。如果有会打包成单独一个chunk\n  */</span>\n  optimization<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    splitChunks<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      chunks<span class=\"token operator\">:</span> <span class=\"token string\">'all'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>通过JS代码使某个文件被单独打包</p>\n<blockquote>\n<p>此时webpack的入口可以设置单入口。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/*\n  通过js代码，让某个文件被单独打包成一个chunk\n  import动态导入语法：能将某个文件单独打包\n*/</span>\n<span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* webpackChunkName: 'test' */</span><span class=\"token string\">'./test'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> mul<span class=\"token punctuation\">,</span> count <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 文件加载成功~</span>\n    <span class=\"token comment\">// eslint-disable-next-line</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// eslint-disable-next-line</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'文件加载失败~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"懒加载和预加载\"><a class=\"markdownIt-Anchor\" href=\"#懒加载和预加载\"></a> 懒加载和预加载</h3>\n<p>只需要在触发某个条件时才引入外部文件。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 懒加载~：当文件需要使用时才加载~</span>\n  <span class=\"token comment\">// 预加载 prefetch：会在使用之前，提前加载js文件 </span>\n  <span class=\"token comment\">// 正常加载可以认为是并行加载（同一时间加载多个文件）  </span>\n  <span class=\"token comment\">// 预加载 prefetch：等其他资源加载完毕，浏览器空闲了，再偷偷加载资源</span>\n  <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* webpackChunkName: 'test', webpackPrefetch: true */</span><span class=\"token string\">'./test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> mul <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"pwa\"><a class=\"markdownIt-Anchor\" href=\"#pwa\"></a> PWA</h3>\n<p>渐进式网络开发应用程序(离线可访问)</p>\n<p>在webpack中使用pwa需要安装插件<code>workbox-webpack-plugin</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> workbox-webpack-plugin -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改webpack配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">WorkboxWebpackPlugin<span class=\"token punctuation\">.</span>GenerateSW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/*\n      1. 帮助serviceworker快速启动\n      2. 删除旧的 serviceworker\n      生成一个 serviceworker 配置文件~\n    */</span>\n    clientsClaim<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    skipWaiting<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在入口文件配置serviceworker</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// code</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'serviceWorker'</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'load'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    navigator<span class=\"token punctuation\">.</span>serviceWorker\n      <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/service-worker.js'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sw注册成功了~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sw注册失败了~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>如果发生eslint错误，则可以在package.json中进行修改。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"eslintConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"airbnb-base\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token property\">\"browser\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h3 id=\"多进程打包\"><a class=\"markdownIt-Anchor\" href=\"#多进程打包\"></a> 多进程打包</h3>\n<p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> thread-loader -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>一般多进程对babel-loader进行。只需要将<code>thread-loader</code>放在其他loader前即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n    exclude<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'thread-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 进程为2</span>\n            workers<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">&#123;</span>\n                  useBuiltIns<span class=\"token operator\">:</span> <span class=\"token string\">'usage'</span><span class=\"token punctuation\">,</span>\n                  corejs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> version<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                  targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    chrome<span class=\"token operator\">:</span> <span class=\"token string\">'60'</span><span class=\"token punctuation\">,</span>\n                    firefox<span class=\"token operator\">:</span> <span class=\"token string\">'50'</span>\n                  <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 开启babel缓存</span>\n            <span class=\"token comment\">// 第二次构建时，会读取之前的缓存</span>\n            cacheDirectory<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>多进程不一定会使打包时间变短，需合理使用。因为进程启动也需要消耗时间。</p>\n</blockquote>\n<h3 id=\"使用cdn\"><a class=\"markdownIt-Anchor\" href=\"#使用cdn\"></a> 使用CDN</h3>\n<p>在webpack中配置字段<code>externals</code>即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">externals<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 忽略的库名  -- npm 包名</span>\n  jquery<span class=\"token operator\">:</span> <span class=\"token string\">'JQuery'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>忽略后需在html手动引入CDN链接。</p>\n</blockquote>\n<h3 id=\"dll\"><a class=\"markdownIt-Anchor\" href=\"#dll\"></a> dll</h3>\n<p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> add-asset-html-webpack-plugin -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在<code>webpack.config.js</code>同目录建立一个<code>webpack-dll.js</code>文件。写入如下内容：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @description:\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-02 15:30:59\n * @LastEditTime: 2021-01-02 15:31:00\n * @LastEditors: 小康\n */</span>\n<span class=\"token comment\">// 使用dll技术，对某些第三方库进行单独打包</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> resolve <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 最终要打包生成的文件名：[要打包的库]</span>\n    jquery<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 打包的库向外暴露出去的内容的名字</span>\n    library<span class=\"token operator\">:</span> <span class=\"token string\">'[name]_[hash]'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DllPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 打包生成manifest.json提供映射关系</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'[name]_[hash]'</span><span class=\"token punctuation\">,</span>\n      path<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll/manifest.json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'production'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在<code>webpack.config.js</code>中使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> AddAssetHtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'add-asset-html-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// 告诉webpack哪些库不参与打包，同时使用时引入的昵称也需要改</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DllReferencePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      manifest<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll/manifest.json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 将某个文件打包输出 并在HTML中自动引入</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">AddAssetHtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      filepath<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll/jquery.js'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"性能优化\"><a class=\"markdownIt-Anchor\" href=\"#性能优化\"></a> 性能优化</h2>\n<p>性能优化包含开发环境优化和生产环境优化。</p>\n<ol>\n<li>开发环境\n<ul>\n<li>优化打包构建速度</li>\n<li><strong>优化代码调试</strong></li>\n</ul>\n</li>\n<li>生产环境\n<ul>\n<li>优化打包构建速度</li>\n<li><strong>优化代码运行的性能</strong></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"开发环境\"><a class=\"markdownIt-Anchor\" href=\"#开发环境\"></a> 开发环境</h2>\n<h3 id=\"hmr\"><a class=\"markdownIt-Anchor\" href=\"#hmr\"></a> HMR</h3>\n<p>即热更新：一个模块发生变化，只会重新打包这一个模块。</p>\n<p>在<code>devServer</code>中开启</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    contentBase<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n          open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 开启HMR功能</span>\n            <span class=\"token comment\">// 当修改了webpack配置，新配置要想生效，必须重新webpack服务</span>\n            hot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>\n<p>样式文件</p>\n<p>样式文件可以使用热更新，因为<code>style-loader</code>内部实现了</p>\n</li>\n<li>\n<p>js文件</p>\n<p>默认不使用HMR功能，需要手动修改支持HMR。且只能处理<strong>非入口</strong>文件。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 一旦 module.hot 为true，说明开启了HMR功能。 --> 让HMR功能代码生效</span>\n  module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./print.js'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 方法会监听 print.js 文件的变化，一旦发生变化，其他模块不会重新打包构建。</span>\n    <span class=\"token comment\">// 会执行后面的回调函数</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>HTML文件</p>\n<p>默认不支持，需要修改webpack中entry入口</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./src/js/index.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/index.html'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h3 id=\"source-map\"><a class=\"markdownIt-Anchor\" href=\"#source-map\"></a> source-map</h3>\n<p>source-map是一种<strong>提供源代码到构建后代码映射</strong>技术。开启source-map只需要在devServer中开启<code>devtool</code>即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    contentBase<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n    open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    hot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>关于<code>devtool</code>的选项</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">位置</th>\n<th style=\"text-align:center\">特点</th>\n<th style=\"text-align:center\">错误原因及位置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>inline-source-map</code></td>\n<td style=\"text-align:center\">内联</td>\n<td style=\"text-align:center\">只生成一个内联source-map</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>hidden-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">错误代码错误原因，但是没有错误位置</td>\n<td style=\"text-align:center\">不能追踪源代码错误，只能提示到构建后代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>eval-source-map</code></td>\n<td style=\"text-align:center\">内联</td>\n<td style=\"text-align:center\">每一个文件都生成对应的source-map，都在eval</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>nosources-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">错误代码准确信息, 但是没有任何源代码信息</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>cheap-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">只能精确的行</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>cheap-module-source-map</code></td>\n<td style=\"text-align:center\">外部</td>\n<td style=\"text-align:center\">module会将loader的source map加入</td>\n<td style=\"text-align:center\">错误代码准确信息 <br /> 源代码的错误位置</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>内联和外部的区别：外部生成了文件，内联没有；内联速度比外部快</p>\n</blockquote>\n<p>开发环境与生产环境下source-map的选择：</p>\n<ul>\n<li>\n<p>开发环境：速度快，调试更友好</p>\n<ul>\n<li>速度快\n<ul>\n<li><code>eval-cheap-souce-map</code></li>\n<li><code>eval-source-map</code></li>\n</ul>\n</li>\n<li>调试友好\n<ul>\n<li><code>souce-map</code></li>\n<li><code>cheap-module-souce-map</code></li>\n<li><code>cheap-souce-map</code></li>\n</ul>\n</li>\n</ul>\n<p>因此开发环境下可以选择：<code>eval-source-map</code>或者<code>eval-cheap-module-souce-map</code></p>\n</li>\n<li>\n<p>生产环境</p>\n<ul>\n<li>\n<p>不隐藏源代码（便于调试）</p>\n<ul>\n<li><code>source-map</code></li>\n<li><code>cheap-module-souce-map</code></li>\n</ul>\n</li>\n<li>\n<p>因此源代码</p>\n<ul>\n<li>\n<p><code>nosources-source-map</code></p>\n<p>全部隐藏</p>\n</li>\n<li>\n<p><code>hidden-source-map</code></p>\n<p>只隐藏源代码，会提示构建后代码错误信息</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"oneof\"><a class=\"markdownIt-Anchor\" href=\"#oneof\"></a> oneOf</h3>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 其他loader</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      oneOf<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// loader配置</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>只需要将loader放入到<code>oneOf</code>数组中即可，使用<code>oneOf</code>后不能有两个loader处理同一类型的文件，因此需要将相同的loader提取到外边</p>\n<h3 id=\"缓存\"><a class=\"markdownIt-Anchor\" href=\"#缓存\"></a> 缓存</h3>\n<ol>\n<li>\n<p>babel缓存</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n    exclude<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n        options<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">[</span>\n              <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#123;</span>\n                useBuiltIns<span class=\"token operator\">:</span> <span class=\"token string\">'usage'</span><span class=\"token punctuation\">,</span>\n                corejs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> version<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                  chrome<span class=\"token operator\">:</span> <span class=\"token string\">'60'</span><span class=\"token punctuation\">,</span>\n                  firefox<span class=\"token operator\">:</span> <span class=\"token string\">'50'</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 开启babel缓存</span>\n            <span class=\"token comment\">// 第二次构建时，会读取之前的缓存</span>\n            cacheDirectory<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>文件资源缓存</p>\n<ul>\n<li>\n<p><code>hash</code></p>\n<p>和整个项⽬目的构建相关，只要项⽬目⽂文件有修改，整个项⽬目构建的 hash 值就会更更改</p>\n</li>\n<li>\n<p><code>chunkhash</code></p>\n<p>和 webpack 打包的 chunk 有关，不不同的 entry 会⽣生成不不同的 chunkhash 值</p>\n</li>\n<li>\n<p><code>contenthash</code></p>\n<p>根据⽂文件内容来定义 hash ，⽂文件内容不不变，则 contenthash 不不变</p>\n</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>一般情况下js文件使用<code>chunkhash</code>，css文件和图片使用<code>contenthash</code>，图片文件使用<code>hash</code></p>\n</blockquote>\n<h2 id=\"生产环境\"><a class=\"markdownIt-Anchor\" href=\"#生产环境\"></a> 生产环境</h2>\n<h3 id=\"去除无用代码\"><a class=\"markdownIt-Anchor\" href=\"#去除无用代码\"></a> 去除无用代码</h3>\n<p>可以按需加载需要使用的代码，减少代码体积。</p>\n<ol>\n<li>使用ES6模块化</li>\n<li>开启<code>production</code>环境</li>\n</ol>\n<p>此方法可能会将css资源忽略掉，因此可以在package.json中进行配置。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"sideEffects\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"*.css\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"*.less\"</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"代码分割\"><a class=\"markdownIt-Anchor\" href=\"#代码分割\"></a> 代码分割</h3>\n<p>即按需加载，生成多个js文件。</p>\n<ol>\n<li>\n<p>根据入口文件进行分割</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 单入口</span>\n  <span class=\"token comment\">// entry: './src/js/index.js',</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 多入口：有一个入口，最终输出就有一个bundle</span>\n    index<span class=\"token operator\">:</span> <span class=\"token string\">'./src/js/index.js'</span><span class=\"token punctuation\">,</span>\n    test<span class=\"token operator\">:</span> <span class=\"token string\">'./src/js/test.js'</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>分割node_moudle模块</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">/*\n    1. 可以将node_modules中代码单独打包一个chunk最终输出\n    2. 自动分析多入口chunk中，有没有公共的文件。如果有会打包成单独一个chunk\n  */</span>\n  optimization<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    splitChunks<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      chunks<span class=\"token operator\">:</span> <span class=\"token string\">'all'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>通过JS代码使某个文件被单独打包</p>\n<blockquote>\n<p>此时webpack的入口可以设置单入口。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/*\n  通过js代码，让某个文件被单独打包成一个chunk\n  import动态导入语法：能将某个文件单独打包\n*/</span>\n<span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* webpackChunkName: 'test' */</span><span class=\"token string\">'./test'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> mul<span class=\"token punctuation\">,</span> count <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 文件加载成功~</span>\n    <span class=\"token comment\">// eslint-disable-next-line</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// eslint-disable-next-line</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'文件加载失败~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"懒加载和预加载\"><a class=\"markdownIt-Anchor\" href=\"#懒加载和预加载\"></a> 懒加载和预加载</h3>\n<p>只需要在触发某个条件时才引入外部文件。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 懒加载~：当文件需要使用时才加载~</span>\n  <span class=\"token comment\">// 预加载 prefetch：会在使用之前，提前加载js文件 </span>\n  <span class=\"token comment\">// 正常加载可以认为是并行加载（同一时间加载多个文件）  </span>\n  <span class=\"token comment\">// 预加载 prefetch：等其他资源加载完毕，浏览器空闲了，再偷偷加载资源</span>\n  <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* webpackChunkName: 'test', webpackPrefetch: true */</span><span class=\"token string\">'./test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> mul <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"pwa\"><a class=\"markdownIt-Anchor\" href=\"#pwa\"></a> PWA</h3>\n<p>渐进式网络开发应用程序(离线可访问)</p>\n<p>在webpack中使用pwa需要安装插件<code>workbox-webpack-plugin</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> workbox-webpack-plugin -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改webpack配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">WorkboxWebpackPlugin<span class=\"token punctuation\">.</span>GenerateSW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/*\n      1. 帮助serviceworker快速启动\n      2. 删除旧的 serviceworker\n      生成一个 serviceworker 配置文件~\n    */</span>\n    clientsClaim<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    skipWaiting<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在入口文件配置serviceworker</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// code</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'serviceWorker'</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'load'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    navigator<span class=\"token punctuation\">.</span>serviceWorker\n      <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/service-worker.js'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sw注册成功了~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sw注册失败了~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>如果发生eslint错误，则可以在package.json中进行修改。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"eslintConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"airbnb-base\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token property\">\"browser\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h3 id=\"多进程打包\"><a class=\"markdownIt-Anchor\" href=\"#多进程打包\"></a> 多进程打包</h3>\n<p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> thread-loader -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>一般多进程对babel-loader进行。只需要将<code>thread-loader</code>放在其他loader前即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n    exclude<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'thread-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 进程为2</span>\n            workers<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">&#123;</span>\n                  useBuiltIns<span class=\"token operator\">:</span> <span class=\"token string\">'usage'</span><span class=\"token punctuation\">,</span>\n                  corejs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> version<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                  targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    chrome<span class=\"token operator\">:</span> <span class=\"token string\">'60'</span><span class=\"token punctuation\">,</span>\n                    firefox<span class=\"token operator\">:</span> <span class=\"token string\">'50'</span>\n                  <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 开启babel缓存</span>\n            <span class=\"token comment\">// 第二次构建时，会读取之前的缓存</span>\n            cacheDirectory<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>多进程不一定会使打包时间变短，需合理使用。因为进程启动也需要消耗时间。</p>\n</blockquote>\n<h3 id=\"使用cdn\"><a class=\"markdownIt-Anchor\" href=\"#使用cdn\"></a> 使用CDN</h3>\n<p>在webpack中配置字段<code>externals</code>即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">externals<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 忽略的库名  -- npm 包名</span>\n  jquery<span class=\"token operator\">:</span> <span class=\"token string\">'JQuery'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>忽略后需在html手动引入CDN链接。</p>\n</blockquote>\n<h3 id=\"dll\"><a class=\"markdownIt-Anchor\" href=\"#dll\"></a> dll</h3>\n<p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> add-asset-html-webpack-plugin -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在<code>webpack.config.js</code>同目录建立一个<code>webpack-dll.js</code>文件。写入如下内容：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @description:\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-02 15:30:59\n * @LastEditTime: 2021-01-02 15:31:00\n * @LastEditors: 小康\n */</span>\n<span class=\"token comment\">// 使用dll技术，对某些第三方库进行单独打包</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> resolve <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 最终要打包生成的文件名：[要打包的库]</span>\n    jquery<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 打包的库向外暴露出去的内容的名字</span>\n    library<span class=\"token operator\">:</span> <span class=\"token string\">'[name]_[hash]'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DllPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 打包生成manifest.json提供映射关系</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'[name]_[hash]'</span><span class=\"token punctuation\">,</span>\n      path<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll/manifest.json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'production'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在<code>webpack.config.js</code>中使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> AddAssetHtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'add-asset-html-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// 告诉webpack哪些库不参与打包，同时使用时引入的昵称也需要改</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DllReferencePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      manifest<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll/manifest.json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 将某个文件打包输出 并在HTML中自动引入</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">AddAssetHtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      filepath<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dll/jquery.js'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"大前端","path":"api/categories/大前端.json"},{"name":"前端自动化","path":"api/categories/前端自动化.json"}],"tags":[{"name":"webpack","path":"api/tags/webpack.json"}]}