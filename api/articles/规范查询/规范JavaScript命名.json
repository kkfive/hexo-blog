{"title":"规范JavaScript命名","slug":"规范查询/规范JavaScript命名","date":"2020-06-25T06:37:58.000Z","updated":"2022-02-21T04:45:27.408Z","comments":true,"path":"api/articles/规范查询/规范JavaScript命名.json","excerpt":null,"covers":null,"content":"<h2 id=\"驼峰命名法\"><a class=\"markdownIt-Anchor\" href=\"#驼峰命名法\"></a> 驼峰命名法</h2>\n<p>驼峰命名法按照第一个字母是否大写分为：</p>\n<ol>\n<li>\n<p><strong>Pascal Case 大驼峰式命名法</strong>：首字母大写</p>\n<p><code>StudentInfo</code>、<code>UserInfo</code>、<code>ProductInfo</code></p>\n</li>\n<li>\n<p><strong>Camel Case 小驼峰式命名法</strong>：首字母小写</p>\n<p><code>studentInfo</code>、<code>userInfo</code>、<code>productInfo</code></p>\n</li>\n</ol>\n<h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\"></a> 变量</h2>\n<ul>\n<li>\n<p>命名方法：小驼峰式命名法</p>\n</li>\n<li>\n<p>命名规范：前缀应当是名词。(函数的名字前缀为动词，以此区分变量和函数)</p>\n</li>\n<li>\n<p>命名建议：尽量在变量名字中体现所属类型，如:length、count等表示数字类型；而包含name、title表示为字符串类型。</p>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 好的命名方式</span>\n<span class=\"token keyword\">var</span> maxCount <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> tableTitle <span class=\"token operator\">=</span> <span class=\"token string\">'LoginTable'</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">// 不好的命名方式</span>\n<span class=\"token keyword\">var</span> setCount <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> getTitle <span class=\"token operator\">=</span> <span class=\"token string\">'LoginTable'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\"></a> 函数</h2>\n<ul>\n<li>\n<p>命名方法：小驼峰式命名法</p>\n</li>\n<li>\n<p>命名规范：前缀应当为动词。</p>\n</li>\n<li>\n<p>命名建议：可使用常见动词约定</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">动词</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>can</code></td>\n<td style=\"text-align:center\">判断是否可执行某个动作(权限)</td>\n<td style=\"text-align:center\">函数返回一个布尔值。true：可执行；false：不可执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>has</code></td>\n<td style=\"text-align:center\">判断是否含有某个值</td>\n<td style=\"text-align:center\">函数返回一个布尔值。true：含有此值；false：不含有此值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>is</code></td>\n<td style=\"text-align:center\">判断是否为某个值</td>\n<td style=\"text-align:center\">函数返回一个布尔值。true：为某个值；false：不为某个值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>get</code></td>\n<td style=\"text-align:center\">获取某个值</td>\n<td style=\"text-align:center\">函数返回一个非布尔值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>set</code></td>\n<td style=\"text-align:center\">设置某个值</td>\n<td style=\"text-align:center\">无返回值、返回是否设置成功或者返回链式对象</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>load</code></td>\n<td style=\"text-align:center\">加载某些数据</td>\n<td style=\"text-align:center\">无返回值或者返回是否加载完成的结果</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 是否可阅读</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">canRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token comment\">// 获取名称</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"常量\"><a class=\"markdownIt-Anchor\" href=\"#常量\"></a> 常量</h2>\n<ul>\n<li>\n<p>命名方法：名称全部大写。</p>\n</li>\n<li>\n<p>命名规范：使用大写字母和下划线来组合命名，下划线用以分割单词。</p>\n</li>\n<li>\n<p>命名建议：无</p>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token constant\">MAX_COUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.baidu.com'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"构造函数\"><a class=\"markdownIt-Anchor\" href=\"#构造函数\"></a> 构造函数</h2>\n<ul>\n<li>\n<p>命名方法：大驼峰式命名法，首字母大写。</p>\n</li>\n<li>\n<p>命名规范：前缀为名称。</p>\n</li>\n<li>\n<p>命名建议：无。</p>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">var</span> st <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"类的成员\"><a class=\"markdownIt-Anchor\" href=\"#类的成员\"></a> 类的成员</h2>\n<p>① 公共属性和方法：跟变量和函数的命名一样。</p>\n<p>② 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> _name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 私有成员</span>\n \n    <span class=\"token comment\">// 公共方法</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n    <span class=\"token comment\">// 公共方式</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        _name <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">var</span> st <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nst<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jerry'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => jerry：输出_name私有变量的值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"参考文档\"><a class=\"markdownIt-Anchor\" href=\"#参考文档\"></a> 参考文档</h2>\n<ol>\n<li><a href=\"https://www.cnblogs.com/polk6/p/4660195.html\">JavaScript开发规范</a></li>\n</ol>\n","more":"<h2 id=\"驼峰命名法\"><a class=\"markdownIt-Anchor\" href=\"#驼峰命名法\"></a> 驼峰命名法</h2>\n<p>驼峰命名法按照第一个字母是否大写分为：</p>\n<ol>\n<li>\n<p><strong>Pascal Case 大驼峰式命名法</strong>：首字母大写</p>\n<p><code>StudentInfo</code>、<code>UserInfo</code>、<code>ProductInfo</code></p>\n</li>\n<li>\n<p><strong>Camel Case 小驼峰式命名法</strong>：首字母小写</p>\n<p><code>studentInfo</code>、<code>userInfo</code>、<code>productInfo</code></p>\n</li>\n</ol>\n<h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\"></a> 变量</h2>\n<ul>\n<li>\n<p>命名方法：小驼峰式命名法</p>\n</li>\n<li>\n<p>命名规范：前缀应当是名词。(函数的名字前缀为动词，以此区分变量和函数)</p>\n</li>\n<li>\n<p>命名建议：尽量在变量名字中体现所属类型，如:length、count等表示数字类型；而包含name、title表示为字符串类型。</p>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 好的命名方式</span>\n<span class=\"token keyword\">var</span> maxCount <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> tableTitle <span class=\"token operator\">=</span> <span class=\"token string\">'LoginTable'</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">// 不好的命名方式</span>\n<span class=\"token keyword\">var</span> setCount <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> getTitle <span class=\"token operator\">=</span> <span class=\"token string\">'LoginTable'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\"></a> 函数</h2>\n<ul>\n<li>\n<p>命名方法：小驼峰式命名法</p>\n</li>\n<li>\n<p>命名规范：前缀应当为动词。</p>\n</li>\n<li>\n<p>命名建议：可使用常见动词约定</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">动词</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>can</code></td>\n<td style=\"text-align:center\">判断是否可执行某个动作(权限)</td>\n<td style=\"text-align:center\">函数返回一个布尔值。true：可执行；false：不可执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>has</code></td>\n<td style=\"text-align:center\">判断是否含有某个值</td>\n<td style=\"text-align:center\">函数返回一个布尔值。true：含有此值；false：不含有此值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>is</code></td>\n<td style=\"text-align:center\">判断是否为某个值</td>\n<td style=\"text-align:center\">函数返回一个布尔值。true：为某个值；false：不为某个值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>get</code></td>\n<td style=\"text-align:center\">获取某个值</td>\n<td style=\"text-align:center\">函数返回一个非布尔值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>set</code></td>\n<td style=\"text-align:center\">设置某个值</td>\n<td style=\"text-align:center\">无返回值、返回是否设置成功或者返回链式对象</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>load</code></td>\n<td style=\"text-align:center\">加载某些数据</td>\n<td style=\"text-align:center\">无返回值或者返回是否加载完成的结果</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 是否可阅读</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">canRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token comment\">// 获取名称</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"常量\"><a class=\"markdownIt-Anchor\" href=\"#常量\"></a> 常量</h2>\n<ul>\n<li>\n<p>命名方法：名称全部大写。</p>\n</li>\n<li>\n<p>命名规范：使用大写字母和下划线来组合命名，下划线用以分割单词。</p>\n</li>\n<li>\n<p>命名建议：无</p>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token constant\">MAX_COUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.baidu.com'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"构造函数\"><a class=\"markdownIt-Anchor\" href=\"#构造函数\"></a> 构造函数</h2>\n<ul>\n<li>\n<p>命名方法：大驼峰式命名法，首字母大写。</p>\n</li>\n<li>\n<p>命名规范：前缀为名称。</p>\n</li>\n<li>\n<p>命名建议：无。</p>\n</li>\n<li>\n<p>示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">var</span> st <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"类的成员\"><a class=\"markdownIt-Anchor\" href=\"#类的成员\"></a> 类的成员</h2>\n<p>① 公共属性和方法：跟变量和函数的命名一样。</p>\n<p>② 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> _name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 私有成员</span>\n \n    <span class=\"token comment\">// 公共方法</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n    <span class=\"token comment\">// 公共方式</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        _name <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">var</span> st <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nst<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jerry'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => jerry：输出_name私有变量的值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"参考文档\"><a class=\"markdownIt-Anchor\" href=\"#参考文档\"></a> 参考文档</h2>\n<ol>\n<li><a href=\"https://www.cnblogs.com/polk6/p/4660195.html\">JavaScript开发规范</a></li>\n</ol>\n","categories":[{"name":"大前端","path":"api/categories/大前端.json"},{"name":"编码规范","path":"api/categories/编码规范.json"}],"tags":[{"name":"大前端","path":"api/tags/大前端.json"},{"name":"命名","path":"api/tags/命名.json"},{"name":"笔记","path":"api/tags/笔记.json"}]}