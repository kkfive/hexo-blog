{"title":"一、玩转Git三剑客-Git基础","slug":"日常学习/Git/玩转git三剑客/1. Git基础","date":"2020-08-15T07:31:00.000Z","updated":"2022-02-21T06:22:27.464Z","comments":true,"path":"api/articles/日常学习/Git/玩转git三剑客/1. Git基础.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/08/15/09db40e99ce4f.png","https://files.alexhchu.com/2020/08/15/6b98b1a4cbffa.png","https://files.alexhchu.com/2020/08/15/b9f9dbf6af6dc.png","https://files.alexhchu.com/2020/08/15/d441e0617508a.png","https://files.alexhchu.com/2020/08/15/97ae735f41052.png","https://files.alexhchu.com/2020/08/15/6e4c2fe93d10f.png","https://files.alexhchu.com/2020/08/15/22af7f0b3840e.png","https://files.alexhchu.com/2020/08/15/97ebef4cdbf60.png"],"content":"<h2 id=\"git的优点\"><a class=\"markdownIt-Anchor\" href=\"#git的优点\"></a> Git的优点</h2>\n<ul>\n<li>最优的存储能力</li>\n<li>非凡的性能</li>\n<li>开源</li>\n<li>很容易做备份</li>\n<li>支持离线操作</li>\n<li>很容易定制工作流程</li>\n</ul>\n<h2 id=\"git的安装\"><a class=\"markdownIt-Anchor\" href=\"#git的安装\"></a> git的安装</h2>\n<p>参考官方<a href=\"https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git\">安装git</a></p>\n<p>在终端输入<code>git --version</code>可以看到git的版本信息，以此代表安装成功。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/09db40e99ce4f.png\" alt=\"image-20200815192211214\" /></p>\n<h2 id=\"使用git之前要做的最小配置\"><a class=\"markdownIt-Anchor\" href=\"#使用git之前要做的最小配置\"></a> 使用git之前要做的最小配置</h2>\n<p>配置user.name和user.email</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"Your Name\"</span>\n<span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"config的三个作用域\"><a class=\"markdownIt-Anchor\" href=\"#config的三个作用域\"></a> config的三个作用域</h3>\n<p>缺省等同于<code>local</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --local <span class=\"token comment\">## local只对某个仓库有效</span>\n<span class=\"token function\">git</span> config --global <span class=\"token comment\">## global对当前用户所有仓库有效</span>\n<span class=\"token function\">git</span> config --system <span class=\"token comment\">## system对系统所有登录的用户有效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>显示config的配置，加<code>--list</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --list --local <span class=\"token comment\">## local只对某个仓库有效</span>\n<span class=\"token function\">git</span> config --list --global <span class=\"token comment\">## global对当前用户所有仓库有效</span>\n<span class=\"token function\">git</span> config --list --system <span class=\"token comment\">## system对系统所有登录的用户有效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"创建第一个仓库并配置local用户信息\"><a class=\"markdownIt-Anchor\" href=\"#创建第一个仓库并配置local用户信息\"></a> 创建第一个仓库并配置local用户信息</h2>\n<ol>\n<li>\n<p>把已有的项目代码纳入git管理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> 项目代码所在的文件夹\n<span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>新建的项目直接用Git管理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> 某个文件夹\n<span class=\"token function\">git</span> init your_project <span class=\"token comment\">#会在当前路径创建和项目同名的文件夹</span>\n<span class=\"token builtin class-name\">cd</span> your_project<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>进入git项目目录，配置local用户信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --local user.name <span class=\"token string\">\"Your Name\"</span>\n<span class=\"token function\">git</span> config --local user.email <span class=\"token string\">\"email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果在一个仓库中存在local用户与全局用户，那么local用户的优先级高于全局用户信息。</p>\n<h2 id=\"工作区和暂存区\"><a class=\"markdownIt-Anchor\" href=\"#工作区和暂存区\"></a> 工作区和暂存区</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/6b98b1a4cbffa.png\" alt=\"image-20200815194431376\" /></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> filename <span class=\"token comment\">#将文件添加到暂存区</span>\n<span class=\"token function\">git</span> commit -m<span class=\"token string\">'message'</span> <span class=\"token comment\">#为提交添加信息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>通过<code>git add -u</code>命令可以将纳入git管理的文件所有更新文件进行添加。</p>\n<h2 id=\"给文件重命名的简便方法\"><a class=\"markdownIt-Anchor\" href=\"#给文件重命名的简便方法\"></a> 给文件重命名的简便方法</h2>\n<p>通过<code>git mv oldName newName</code>即可快速变更文件名，并且会自动添加到暂存区，直接通过commit即可提交。</p>\n<h2 id=\"查看git-log\"><a class=\"markdownIt-Anchor\" href=\"#查看git-log\"></a> 查看git log</h2>\n<ol>\n<li>\n<p>只看变更列表</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log --oneline<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/b9f9dbf6af6dc.png\" alt=\"image-20200815200223087\" /></p>\n</li>\n<li>\n<p>之查看最近的几次commit</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log -n2 --oneline <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/d441e0617508a.png\" alt=\"image-20200815200354009\" /></p>\n<blockquote>\n<p>n2表示所有分支最近两个。</p>\n</blockquote>\n</li>\n<li>\n<p>只看当前分支的历史</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/97ae735f41052.png\" alt=\"image-20200815200617994\" /></p>\n</li>\n<li>\n<p>查看全部分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log --all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/6e4c2fe93d10f.png\" alt=\"image-20200815200635898\" /></p>\n</li>\n<li>\n<p>图形化展示</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log --all graph<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/22af7f0b3840e.png\" alt=\"image-20200815200740005\" /></p>\n</li>\n</ol>\n<h3 id=\"通过gitk查看版本历史\"><a class=\"markdownIt-Anchor\" href=\"#通过gitk查看版本历史\"></a> 通过gitk查看版本历史</h3>\n<p>在项目目录输入<code>gitk</code>即可。</p>\n<h2 id=\"探秘git\"><a class=\"markdownIt-Anchor\" href=\"#探秘git\"></a> 探秘<code>.git</code></h2>\n<ul>\n<li>\n<p><code>config</code>文件</p>\n<p>配置文件，存放一些配置信息。</p>\n</li>\n<li>\n<p><code>HEAD</code>文件</p>\n<p>引用文件，引用当前分支</p>\n</li>\n<li>\n<p><code>refs</code>文件夹</p>\n<ul>\n<li>\n<p><code>heads</code>分支文件夹，</p>\n<p>存放各个分支，其中内容表示commit的哈希值。</p>\n</li>\n<li>\n<p><code>tags</code>标签或里程碑</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>objects</code>文件夹</p>\n<p>文件夹的名称与该文件夹内文件名拼成一个哈希值，表示一个树。</p>\n<p>其内容为文件变动信息。</p>\n</li>\n</ul>\n<h2 id=\"commit-tree和blob三个对象之间的关系\"><a class=\"markdownIt-Anchor\" href=\"#commit-tree和blob三个对象之间的关系\"></a> commit、tree和blob三个对象之间的关系</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/97ebef4cdbf60.png\" alt=\"image-20200815205429989\" /></p>\n<p>一个commit对应一颗树，树里边包含树（文件夹）。树中的文件为blob，文件夹则为另一个树，在这个文件夹中同理。叶子节点到文件。</p>\n<blockquote>\n<p>git的设计，只要文件内容相同，就是一个东西。</p>\n</blockquote>\n<h2 id=\"分离头指针情况下的注意事项\"><a class=\"markdownIt-Anchor\" href=\"#分离头指针情况下的注意事项\"></a> 分离头指针情况下的注意事项</h2>\n<p>分离头指针指的是没有基于某个分支来做修改。</p>\n<ol>\n<li>\n<p>好处</p>\n<p>用于测试，如果测试结果不佳，则可以直接丢弃。</p>\n</li>\n<li>\n<p>坏处</p>\n<p>如果不跟分支挂钩，当切换分支时，如果不为刚才修改的commit创建分支，那么基于commit分支修改的内容会当作垃圾清理。</p>\n</li>\n</ol>\n<h2 id=\"进一步理解head和branch\"><a class=\"markdownIt-Anchor\" href=\"#进一步理解head和branch\"></a> 进一步理解HEAD和branch</h2>\n<p>head不仅可以指代新分支的最后一次提交，也可以指代具体commit。当作分支切换时，head会指向这个切换的分支。分支（commit）最后也要落脚于commit。</p>\n<p>HEAD可以指代当前分支。例如比较每次commit的差异：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#比较当前commit与上一次commit的差异</span>\n<span class=\"token comment\">#两种写法都可以</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD^\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#比较当前commit与上次commit的差异</span>\n<span class=\"token comment\">#两种写法都可以</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD^^\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD~2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"git的优点\"><a class=\"markdownIt-Anchor\" href=\"#git的优点\"></a> Git的优点</h2>\n<ul>\n<li>最优的存储能力</li>\n<li>非凡的性能</li>\n<li>开源</li>\n<li>很容易做备份</li>\n<li>支持离线操作</li>\n<li>很容易定制工作流程</li>\n</ul>\n<h2 id=\"git的安装\"><a class=\"markdownIt-Anchor\" href=\"#git的安装\"></a> git的安装</h2>\n<p>参考官方<a href=\"https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git\">安装git</a></p>\n<p>在终端输入<code>git --version</code>可以看到git的版本信息，以此代表安装成功。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/09db40e99ce4f.png\" alt=\"image-20200815192211214\" /></p>\n<h2 id=\"使用git之前要做的最小配置\"><a class=\"markdownIt-Anchor\" href=\"#使用git之前要做的最小配置\"></a> 使用git之前要做的最小配置</h2>\n<p>配置user.name和user.email</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"Your Name\"</span>\n<span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"config的三个作用域\"><a class=\"markdownIt-Anchor\" href=\"#config的三个作用域\"></a> config的三个作用域</h3>\n<p>缺省等同于<code>local</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --local <span class=\"token comment\">## local只对某个仓库有效</span>\n<span class=\"token function\">git</span> config --global <span class=\"token comment\">## global对当前用户所有仓库有效</span>\n<span class=\"token function\">git</span> config --system <span class=\"token comment\">## system对系统所有登录的用户有效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>显示config的配置，加<code>--list</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --list --local <span class=\"token comment\">## local只对某个仓库有效</span>\n<span class=\"token function\">git</span> config --list --global <span class=\"token comment\">## global对当前用户所有仓库有效</span>\n<span class=\"token function\">git</span> config --list --system <span class=\"token comment\">## system对系统所有登录的用户有效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"创建第一个仓库并配置local用户信息\"><a class=\"markdownIt-Anchor\" href=\"#创建第一个仓库并配置local用户信息\"></a> 创建第一个仓库并配置local用户信息</h2>\n<ol>\n<li>\n<p>把已有的项目代码纳入git管理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> 项目代码所在的文件夹\n<span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>新建的项目直接用Git管理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> 某个文件夹\n<span class=\"token function\">git</span> init your_project <span class=\"token comment\">#会在当前路径创建和项目同名的文件夹</span>\n<span class=\"token builtin class-name\">cd</span> your_project<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>进入git项目目录，配置local用户信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --local user.name <span class=\"token string\">\"Your Name\"</span>\n<span class=\"token function\">git</span> config --local user.email <span class=\"token string\">\"email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果在一个仓库中存在local用户与全局用户，那么local用户的优先级高于全局用户信息。</p>\n<h2 id=\"工作区和暂存区\"><a class=\"markdownIt-Anchor\" href=\"#工作区和暂存区\"></a> 工作区和暂存区</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/6b98b1a4cbffa.png\" alt=\"image-20200815194431376\" /></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> filename <span class=\"token comment\">#将文件添加到暂存区</span>\n<span class=\"token function\">git</span> commit -m<span class=\"token string\">'message'</span> <span class=\"token comment\">#为提交添加信息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>通过<code>git add -u</code>命令可以将纳入git管理的文件所有更新文件进行添加。</p>\n<h2 id=\"给文件重命名的简便方法\"><a class=\"markdownIt-Anchor\" href=\"#给文件重命名的简便方法\"></a> 给文件重命名的简便方法</h2>\n<p>通过<code>git mv oldName newName</code>即可快速变更文件名，并且会自动添加到暂存区，直接通过commit即可提交。</p>\n<h2 id=\"查看git-log\"><a class=\"markdownIt-Anchor\" href=\"#查看git-log\"></a> 查看git log</h2>\n<ol>\n<li>\n<p>只看变更列表</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log --oneline<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/b9f9dbf6af6dc.png\" alt=\"image-20200815200223087\" /></p>\n</li>\n<li>\n<p>之查看最近的几次commit</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log -n2 --oneline <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/d441e0617508a.png\" alt=\"image-20200815200354009\" /></p>\n<blockquote>\n<p>n2表示所有分支最近两个。</p>\n</blockquote>\n</li>\n<li>\n<p>只看当前分支的历史</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/97ae735f41052.png\" alt=\"image-20200815200617994\" /></p>\n</li>\n<li>\n<p>查看全部分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log --all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/6e4c2fe93d10f.png\" alt=\"image-20200815200635898\" /></p>\n</li>\n<li>\n<p>图形化展示</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log --all graph<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/22af7f0b3840e.png\" alt=\"image-20200815200740005\" /></p>\n</li>\n</ol>\n<h3 id=\"通过gitk查看版本历史\"><a class=\"markdownIt-Anchor\" href=\"#通过gitk查看版本历史\"></a> 通过gitk查看版本历史</h3>\n<p>在项目目录输入<code>gitk</code>即可。</p>\n<h2 id=\"探秘git\"><a class=\"markdownIt-Anchor\" href=\"#探秘git\"></a> 探秘<code>.git</code></h2>\n<ul>\n<li>\n<p><code>config</code>文件</p>\n<p>配置文件，存放一些配置信息。</p>\n</li>\n<li>\n<p><code>HEAD</code>文件</p>\n<p>引用文件，引用当前分支</p>\n</li>\n<li>\n<p><code>refs</code>文件夹</p>\n<ul>\n<li>\n<p><code>heads</code>分支文件夹，</p>\n<p>存放各个分支，其中内容表示commit的哈希值。</p>\n</li>\n<li>\n<p><code>tags</code>标签或里程碑</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>objects</code>文件夹</p>\n<p>文件夹的名称与该文件夹内文件名拼成一个哈希值，表示一个树。</p>\n<p>其内容为文件变动信息。</p>\n</li>\n</ul>\n<h2 id=\"commit-tree和blob三个对象之间的关系\"><a class=\"markdownIt-Anchor\" href=\"#commit-tree和blob三个对象之间的关系\"></a> commit、tree和blob三个对象之间的关系</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/97ebef4cdbf60.png\" alt=\"image-20200815205429989\" /></p>\n<p>一个commit对应一颗树，树里边包含树（文件夹）。树中的文件为blob，文件夹则为另一个树，在这个文件夹中同理。叶子节点到文件。</p>\n<blockquote>\n<p>git的设计，只要文件内容相同，就是一个东西。</p>\n</blockquote>\n<h2 id=\"分离头指针情况下的注意事项\"><a class=\"markdownIt-Anchor\" href=\"#分离头指针情况下的注意事项\"></a> 分离头指针情况下的注意事项</h2>\n<p>分离头指针指的是没有基于某个分支来做修改。</p>\n<ol>\n<li>\n<p>好处</p>\n<p>用于测试，如果测试结果不佳，则可以直接丢弃。</p>\n</li>\n<li>\n<p>坏处</p>\n<p>如果不跟分支挂钩，当切换分支时，如果不为刚才修改的commit创建分支，那么基于commit分支修改的内容会当作垃圾清理。</p>\n</li>\n</ol>\n<h2 id=\"进一步理解head和branch\"><a class=\"markdownIt-Anchor\" href=\"#进一步理解head和branch\"></a> 进一步理解HEAD和branch</h2>\n<p>head不仅可以指代新分支的最后一次提交，也可以指代具体commit。当作分支切换时，head会指向这个切换的分支。分支（commit）最后也要落脚于commit。</p>\n<p>HEAD可以指代当前分支。例如比较每次commit的差异：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#比较当前commit与上一次commit的差异</span>\n<span class=\"token comment\">#两种写法都可以</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD^\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#比较当前commit与上次commit的差异</span>\n<span class=\"token comment\">#两种写法都可以</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD^^\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD HEAD~2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"Git","path":"api/categories/Git.json"},{"name":"玩转Git三剑客","path":"api/categories/玩转Git三剑客.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}