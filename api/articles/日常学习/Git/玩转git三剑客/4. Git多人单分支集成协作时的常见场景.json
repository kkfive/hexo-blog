{"title":"四、玩转Git三剑客-Git多人单分支集成协作时的常见场景","slug":"日常学习/Git/玩转git三剑客/4. Git多人单分支集成协作时的常见场景","date":"2020-08-16T07:04:00.000Z","updated":"2022-02-21T06:11:10.020Z","comments":true,"path":"api/articles/日常学习/Git/玩转git三剑客/4. Git多人单分支集成协作时的常见场景.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/08/16/46e60c2a66ef8.png","https://files.alexhchu.com/2020/08/16/3beb447644005.png","https://files.alexhchu.com/2020/08/16/3fdd62ebeeeca.png","https://files.alexhchu.com/2020/08/16/d26c5337b3f57.png","https://files.alexhchu.com/2020/08/16/8e38b38f6590d.png","https://files.alexhchu.com/2020/08/16/ae0a37b820a96.png","https://files.alexhchu.com/2020/08/16/0a492e55f1e52.png","https://files.alexhchu.com/2020/08/16/294efc0b8737d.png","https://files.alexhchu.com/2020/08/16/351f94ae08d12.png","https://files.alexhchu.com/2020/08/16/6f3133c58ff15.png","https://files.alexhchu.com/2020/08/16/fbbb9ae40cccc.png","https://files.alexhchu.com/2020/08/16/ccdccb9682458.png","https://files.alexhchu.com/2020/08/16/0252351e05986.png","https://files.alexhchu.com/2020/08/16/dfe36a527b15c.png","https://files.alexhchu.com/2020/08/16/bf85c4ce0c3cf.png"],"content":"<h2 id=\"不同人修改了不同文件如何处理\"><a class=\"markdownIt-Anchor\" href=\"#不同人修改了不同文件如何处理\"></a> 不同人修改了不同文件如何处理</h2>\n<p>首先在GitHub创建新的分支<code>test</code>，然后本地clone下仓库。通过设置本地<code>local</code>的name属性和email属性模拟两个人操作。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:sviptzk/test1.git\n<span class=\"token builtin class-name\">cd</span> .<span class=\"token punctuation\">\\</span>test1<span class=\"token punctuation\">\\</span>\n<span class=\"token function\">git</span> config --add --local user.name <span class=\"token string\">'gos967'</span>\n<span class=\"token function\">git</span> config --add --local user.email <span class=\"token string\">'gos967@163.com'</span>\n<span class=\"token comment\">#基于远端的test分支创建本地分支</span>\n<span class=\"token function\">git</span> branch -va\n<span class=\"token function\">git</span> checkout -b <span class=\"token builtin class-name\">test</span> origin/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/46e60c2a66ef8.png\" alt=\"image-20200816152439420\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/3beb447644005.png\" alt=\"image-20200816152516922\" /></p>\n<p>我们编辑README文件后，添加并push到远端。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/3fdd62ebeeeca.png\" alt=\"image-20200816152852562\" /></p>\n<p>接下来回到以前的仓库，拉取远端的分支。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 拉取远端分支</span>\n<span class=\"token function\">git</span> fetch github<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/d26c5337b3f57.png\" alt=\"image-20200816153332304\" /></p>\n<p>基于远端test分支创建本地分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -b <span class=\"token builtin class-name\">test</span> github/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/8e38b38f6590d.png\" alt=\"image-20200816153502728\" /></p>\n<p>接下来编辑文件，并添加到暂存区，但是不会push。此时切换回刚才的账号，并修改了readme。然后生成commit并push。完成后再次切换回另一个账号。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/ae0a37b820a96.png\" alt=\"image-20200816154022162\" /></p>\n<p>此时再次将修改<code>c.js</code>文件的用户进行push操作，会遇到问题。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/0a492e55f1e52.png\" alt=\"image-20200816154313249\" /></p>\n<p>接下来拉取远端分支，并进行合并。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> fetch github\n<span class=\"token function\">git</span> merge github/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/294efc0b8737d.png\" alt=\"image-20200816154502627\" /></p>\n<p>接下来就可以通过<code>git push</code>进行提交了。</p>\n<h2 id=\"不同人修改了同文件的不同区域\"><a class=\"markdownIt-Anchor\" href=\"#不同人修改了同文件的不同区域\"></a> 不同人修改了同文件的不同区域</h2>\n<ol>\n<li>\n<p>开发之前对远端进行一个同步</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>提交一个账号的变更，并切换回另一个账号。尝试push</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/351f94ae08d12.png\" alt=\"image-20200816155411987\" /></p>\n<p>可以通过<code>git pull</code>或者<code>git fetch</code>然后合并分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> fetch\n<span class=\"token function\">git</span> merge origin/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时再通过push即可上传成功</p>\n</li>\n</ol>\n<h2 id=\"不同人修改了同文件的同一区域\"><a class=\"markdownIt-Anchor\" href=\"#不同人修改了同文件的同一区域\"></a> 不同人修改了同文件的同一区域</h2>\n<p>模拟两个账户同时修改了同一个文件的同一个区域，并且其中一个提交。然后另一个没有提交的账号做出如下操作。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 拉取远端最新更新</span>\n<span class=\"token function\">git</span> pull <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>但是由于修改了同一个区域，因此不能自动合并。需要人为合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/6f3133c58ff15.png\" alt=\"image-20200816161227531\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/fbbb9ae40cccc.png\" alt=\"image-20200816161358858\" /></p>\n<p>将以上文件进行处理后，再次添加并且commit即可。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/ccdccb9682458.png\" alt=\"image-20200816161436432\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/0252351e05986.png\" alt=\"image-20200816161511969\" /></p>\n<h2 id=\"同时变更了文件名和文件内容\"><a class=\"markdownIt-Anchor\" href=\"#同时变更了文件名和文件内容\"></a> 同时变更了文件名和文件内容</h2>\n<p>假如变更文件名的小伙伴先一步push了自己代码，而刚做完修改的小伙伴可以通过<code>git pull</code>命令进行拉取，这个命令会自动处理变更文件名操作。</p>\n<h2 id=\"同一文件改成了不同的文件名\"><a class=\"markdownIt-Anchor\" href=\"#同一文件改成了不同的文件名\"></a> 同一文件改成了不同的文件名</h2>\n<p>这种情况下，通过<code>git pull</code>命令进行拉取则不会自动处理，而是遇到冲突。会出现两个不同名但内容相同的文件。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/dfe36a527b15c.png\" alt=\"image-20200816163347533\" /></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 通过status查看需要添加、删除的文件</span>\n<span class=\"token function\">git</span> status\n<span class=\"token comment\"># 添加需要保留的文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> r1.js\n<span class=\"token comment\"># 删除不需要的文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> rr.js\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> r2.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/bf85c4ce0c3cf.png\" alt=\"image-20200816163607927\" /></p>\n<p>接下来便可以通过<code>git commit -am 'change file name'</code>进行提交新的commit，然后push即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit -am <span class=\"token string\">'change file name'</span>\n<span class=\"token function\">git</span> push<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"不同人修改了不同文件如何处理\"><a class=\"markdownIt-Anchor\" href=\"#不同人修改了不同文件如何处理\"></a> 不同人修改了不同文件如何处理</h2>\n<p>首先在GitHub创建新的分支<code>test</code>，然后本地clone下仓库。通过设置本地<code>local</code>的name属性和email属性模拟两个人操作。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:sviptzk/test1.git\n<span class=\"token builtin class-name\">cd</span> .<span class=\"token punctuation\">\\</span>test1<span class=\"token punctuation\">\\</span>\n<span class=\"token function\">git</span> config --add --local user.name <span class=\"token string\">'gos967'</span>\n<span class=\"token function\">git</span> config --add --local user.email <span class=\"token string\">'gos967@163.com'</span>\n<span class=\"token comment\">#基于远端的test分支创建本地分支</span>\n<span class=\"token function\">git</span> branch -va\n<span class=\"token function\">git</span> checkout -b <span class=\"token builtin class-name\">test</span> origin/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/46e60c2a66ef8.png\" alt=\"image-20200816152439420\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/3beb447644005.png\" alt=\"image-20200816152516922\" /></p>\n<p>我们编辑README文件后，添加并push到远端。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/3fdd62ebeeeca.png\" alt=\"image-20200816152852562\" /></p>\n<p>接下来回到以前的仓库，拉取远端的分支。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 拉取远端分支</span>\n<span class=\"token function\">git</span> fetch github<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/d26c5337b3f57.png\" alt=\"image-20200816153332304\" /></p>\n<p>基于远端test分支创建本地分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -b <span class=\"token builtin class-name\">test</span> github/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/8e38b38f6590d.png\" alt=\"image-20200816153502728\" /></p>\n<p>接下来编辑文件，并添加到暂存区，但是不会push。此时切换回刚才的账号，并修改了readme。然后生成commit并push。完成后再次切换回另一个账号。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/ae0a37b820a96.png\" alt=\"image-20200816154022162\" /></p>\n<p>此时再次将修改<code>c.js</code>文件的用户进行push操作，会遇到问题。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/0a492e55f1e52.png\" alt=\"image-20200816154313249\" /></p>\n<p>接下来拉取远端分支，并进行合并。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> fetch github\n<span class=\"token function\">git</span> merge github/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/294efc0b8737d.png\" alt=\"image-20200816154502627\" /></p>\n<p>接下来就可以通过<code>git push</code>进行提交了。</p>\n<h2 id=\"不同人修改了同文件的不同区域\"><a class=\"markdownIt-Anchor\" href=\"#不同人修改了同文件的不同区域\"></a> 不同人修改了同文件的不同区域</h2>\n<ol>\n<li>\n<p>开发之前对远端进行一个同步</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>提交一个账号的变更，并切换回另一个账号。尝试push</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/351f94ae08d12.png\" alt=\"image-20200816155411987\" /></p>\n<p>可以通过<code>git pull</code>或者<code>git fetch</code>然后合并分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> fetch\n<span class=\"token function\">git</span> merge origin/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时再通过push即可上传成功</p>\n</li>\n</ol>\n<h2 id=\"不同人修改了同文件的同一区域\"><a class=\"markdownIt-Anchor\" href=\"#不同人修改了同文件的同一区域\"></a> 不同人修改了同文件的同一区域</h2>\n<p>模拟两个账户同时修改了同一个文件的同一个区域，并且其中一个提交。然后另一个没有提交的账号做出如下操作。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 拉取远端最新更新</span>\n<span class=\"token function\">git</span> pull <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>但是由于修改了同一个区域，因此不能自动合并。需要人为合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/6f3133c58ff15.png\" alt=\"image-20200816161227531\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/fbbb9ae40cccc.png\" alt=\"image-20200816161358858\" /></p>\n<p>将以上文件进行处理后，再次添加并且commit即可。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/ccdccb9682458.png\" alt=\"image-20200816161436432\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/0252351e05986.png\" alt=\"image-20200816161511969\" /></p>\n<h2 id=\"同时变更了文件名和文件内容\"><a class=\"markdownIt-Anchor\" href=\"#同时变更了文件名和文件内容\"></a> 同时变更了文件名和文件内容</h2>\n<p>假如变更文件名的小伙伴先一步push了自己代码，而刚做完修改的小伙伴可以通过<code>git pull</code>命令进行拉取，这个命令会自动处理变更文件名操作。</p>\n<h2 id=\"同一文件改成了不同的文件名\"><a class=\"markdownIt-Anchor\" href=\"#同一文件改成了不同的文件名\"></a> 同一文件改成了不同的文件名</h2>\n<p>这种情况下，通过<code>git pull</code>命令进行拉取则不会自动处理，而是遇到冲突。会出现两个不同名但内容相同的文件。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/dfe36a527b15c.png\" alt=\"image-20200816163347533\" /></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 通过status查看需要添加、删除的文件</span>\n<span class=\"token function\">git</span> status\n<span class=\"token comment\"># 添加需要保留的文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> r1.js\n<span class=\"token comment\"># 删除不需要的文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> rr.js\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> r2.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/16/bf85c4ce0c3cf.png\" alt=\"image-20200816163607927\" /></p>\n<p>接下来便可以通过<code>git commit -am 'change file name'</code>进行提交新的commit，然后push即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit -am <span class=\"token string\">'change file name'</span>\n<span class=\"token function\">git</span> push<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n","categories":[{"name":"Git","path":"api/categories/Git.json"},{"name":"玩转Git三剑客","path":"api/categories/玩转Git三剑客.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}