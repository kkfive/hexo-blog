{"title":"七、玩转Git三剑客-使用GitHub进行团队协作","slug":"日常学习/Git/玩转git三剑客/7. 使用GitHub进行团队协作","date":"2020-08-19T10:15:00.000Z","updated":"2022-02-21T04:45:27.388Z","comments":true,"path":"api/articles/日常学习/Git/玩转git三剑客/7. 使用GitHub进行团队协作.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/08/19/57c37e5f544e9.png","https://files.alexhchu.com/2020/08/19/ef6703e50c99e.png","https://files.alexhchu.com/2020/08/19/9b77c5bc99761.png","https://files.alexhchu.com/2020/08/19/5af19de4cd8e1.png","https://files.alexhchu.com/2020/08/19/8ef302741e2ba.png","https://files.alexhchu.com/2020/08/19/d72486870c66b.png","https://files.alexhchu.com/2020/08/19/069c668b5ecc5.png","https://files.alexhchu.com/2020/08/19/88e9f4a929a90.png","https://files.alexhchu.com/2020/08/19/0f04e94b543e4.png","https://files.alexhchu.com/2020/08/19/b1633bb3bb70e.png","https://files.alexhchu.com/2020/08/19/3c85984fe2cca.png","https://files.alexhchu.com/2020/08/19/fff1f4a4bf4ca.png","https://files.alexhchu.com/2020/08/19/2993e1b3ea9e4.png","https://files.alexhchu.com/2020/08/19/ab050d05fbfc8.png","https://files.alexhchu.com/2020/08/19/7769f309dd5cb.png","https://files.alexhchu.com/2020/08/19/1cc26356c4bc1.png","https://files.alexhchu.com/2020/08/20/a8c9254769f65.png","https://files.alexhchu.com/2020/08/20/f0c96502a760e.png","https://files.alexhchu.com/2020/08/20/67bc688e7d5e2.png","https://files.alexhchu.com/2020/08/20/ddaddd67eeade.png","https://files.alexhchu.com/2020/08/20/11524f3e4ad04.png","https://files.alexhchu.com/2020/08/20/572ea5ae18411.png","https://files.alexhchu.com/2020/08/20/3108664566ae3.png","https://files.alexhchu.com/2020/08/20/c26c226cae323.png","https://files.alexhchu.com/2020/08/20/9476a83302066.png","https://files.alexhchu.com/2020/08/20/63dab09cb67b0.png","https://files.alexhchu.com/2020/08/20/91fb77276a4f4.png","https://files.alexhchu.com/2020/08/20/5cc253b9fc9fd.png","https://files.alexhchu.com/2020/08/20/0f6095ce9aaaa.png","https://files.alexhchu.com/2020/08/20/ff49cc3fe598e.png","https://files.alexhchu.com/2020/08/20/df60715abc1ec.png"],"content":"<h2 id=\"创建团队的项目\"><a class=\"markdownIt-Anchor\" href=\"#创建团队的项目\"></a> 创建团队的项目</h2>\n<p>通过<a href=\"https://github.com/organizations/plan\">新建组织</a>这个页面即可新建一个组织。</p>\n<h2 id=\"怎么选择适合自己团队的工作流\"><a class=\"markdownIt-Anchor\" href=\"#怎么选择适合自己团队的工作流\"></a> 怎么选择适合自己团队的工作流</h2>\n<h3 id=\"主干开发\"><a class=\"markdownIt-Anchor\" href=\"#主干开发\"></a> 主干开发</h3>\n<ol>\n<li>开发团队系统开发团队系统设计和开发能力强。有一套有效的特性切换的实施机制，保证上线后无需修改代码就能够修改系统行为。需要快速迭代，想获得CI/CD所有好处。设计和开发能力强。有一套有效的特性切换的实施机制，保证上线后无需修改代码就能够修改系统行为。需要快速迭代，想获得CI/CD所有好处。</li>\n<li>组件开发的团队，成员能力强，人员少，沟通顺畅。用户升级组件成本低的环境。</li>\n</ol>\n<h3 id=\"git-flow\"><a class=\"markdownIt-Anchor\" href=\"#git-flow\"></a> Git Flow</h3>\n<p>不具备主干开发能力。有预定的发布周期。需要执行严格的发布流程。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/57c37e5f544e9.png\" alt=\"image-20200819212553537\" /></p>\n<h3 id=\"github-flow\"><a class=\"markdownIt-Anchor\" href=\"#github-flow\"></a> Github Flow</h3>\n<p>不具备主千开发能力。随时集成随时发布：分支集成时经过代码评审和自动化测试，就可以立即发布的应用。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/ef6703e50c99e.png\" alt=\"image-20200819212956858\" /></p>\n<h3 id=\"gitlab-flow带生产分支\"><a class=\"markdownIt-Anchor\" href=\"#gitlab-flow带生产分支\"></a> GitLab Flow（带生产分支）</h3>\n<p>不具备主干开发能力。无法控制准确的发布时间，但又要求不停地集成。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/9b77c5bc99761.png\" alt=\"image-20200819213049897\" /></p>\n<h3 id=\"gitlab-flow带环境分支\"><a class=\"markdownIt-Anchor\" href=\"#gitlab-flow带环境分支\"></a> GitLab Flow（带环境分支）</h3>\n<p>不具备主干开发能力。需要逐个通过各个测试环境的验证才能发布。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/5af19de4cd8e1.png\" alt=\"image-20200819213141624\" /></p>\n<h3 id=\"gitlab-flow带发布分支\"><a class=\"markdownIt-Anchor\" href=\"#gitlab-flow带发布分支\"></a> GitLab Flow（带发布分支）</h3>\n<p>不具备主干开发能力。需要对外发布和维护不同版本。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/8ef302741e2ba.png\" alt=\"image-20200819213327705\" /></p>\n<h2 id=\"如何挑选合适的分支集成策略\"><a class=\"markdownIt-Anchor\" href=\"#如何挑选合适的分支集成策略\"></a> 如何挑选合适的分支集成策略</h2>\n<p>在项目设置处可以选择允许通过那种方式合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/d72486870c66b.png\" alt=\"image-20200819215932108\" /></p>\n<p>例如如下项目，通过三种方式进行合并的结果。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/069c668b5ecc5.png\" alt=\"image-20200819215349627\" /></p>\n<ol>\n<li>\n<p>Create a merge commit</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/88e9f4a929a90.png\" alt=\"image-20200819220321723\" /></p>\n<p>只要git能够解决即创建一个merge。</p>\n</li>\n<li>\n<p>Squash and merge</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/0f04e94b543e4.png\" alt=\"image-20200819215316322\" /></p>\n<p>把三个蓝色的commit合并成一个，然后合并到黑色分支。</p>\n</li>\n<li>\n<p>Rebase and merge</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/b1633bb3bb70e.png\" alt=\"image-20200819215617849\" /></p>\n<p>相当于把蓝色的三个commit移动到黑色后边。</p>\n</li>\n</ol>\n<h2 id=\"启用issue跟踪需求和任务\"><a class=\"markdownIt-Anchor\" href=\"#启用issue跟踪需求和任务\"></a> 启用issue跟踪需求和任务</h2>\n<p>可以通过设置进行开启，默认是开启的。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/3c85984fe2cca.png\" alt=\"image-20200819220709026\" /></p>\n<p>也可以建立模板。</p>\n<h2 id=\"如何用project管理issue\"><a class=\"markdownIt-Anchor\" href=\"#如何用project管理issue\"></a> 如何用project管理issue</h2>\n<ol>\n<li>\n<p>创建project</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/fff1f4a4bf4ca.png\" alt=\"image-20200819221421668\" /></p>\n</li>\n<li>\n<p>将issue关联project</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/2993e1b3ea9e4.png\" alt=\"image-20200819221410429\" /></p>\n</li>\n</ol>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/ab050d05fbfc8.png\" alt=\"image-20200819221455996\" /></p>\n<h2 id=\"项目内部实施code-review\"><a class=\"markdownIt-Anchor\" href=\"#项目内部实施code-review\"></a> 项目内部实施code review</h2>\n<p>为了保证集成分支代码质量，不允许不经过code review就集成到master分支。</p>\n<ol>\n<li>\n<p>添加规则</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/7769f309dd5cb.png\" alt=\"image-20200819221757599\" /></p>\n</li>\n<li>\n<p>创建规则</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/1cc26356c4bc1.png\" alt=\"image-20200819221918969\" /></p>\n</li>\n</ol>\n<h2 id=\"团队协作时如何做多分支的集成\"><a class=\"markdownIt-Anchor\" href=\"#团队协作时如何做多分支的集成\"></a> 团队协作时如何做多分支的集成</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/a8c9254769f65.png\" alt=\"image-20200820074704156\" /></p>\n<h3 id=\"create-a-merge-commit\"><a class=\"markdownIt-Anchor\" href=\"#create-a-merge-commit\"></a> Create a merge commit</h3>\n<ol>\n<li>\n<p>黑色分支首先与蓝色分支进行合并</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/f0c96502a760e.png\" alt=\"image-20200820075222155\" /></p>\n</li>\n<li>\n<p>接下来黑色分支与绿色分支进行合并</p>\n<p>如果出现冲突，则需要人工解决。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/67bc688e7d5e2.png\" alt=\"image-20200820075439259\" /></p>\n<p>解决完冲突进行合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/ddaddd67eeade.png\" alt=\"image-20200820075532797\" /></p>\n</li>\n</ol>\n<h3 id=\"squash-and-merge\"><a class=\"markdownIt-Anchor\" href=\"#squash-and-merge\"></a> Squash and merge</h3>\n<ol>\n<li>\n<p>黑色分支首先与蓝色分支进行合并</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/11524f3e4ad04.png\" alt=\"image-20200820084143093\" /></p>\n<p>会将蓝色分支的三次commit进行合并，然后加入到黑色分支。</p>\n</li>\n<li>\n<p>接下来黑色分支与绿色分支进行合并</p>\n<p>同样的需要处理冲突。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/572ea5ae18411.png\" alt=\"image-20200820084334038\" /></p>\n<p>接下来进行合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/3108664566ae3.png\" alt=\"image-20200820084355958\" /></p>\n</li>\n</ol>\n<h3 id=\"rebase-and-merge\"><a class=\"markdownIt-Anchor\" href=\"#rebase-and-merge\"></a> Rebase and merge</h3>\n<ol>\n<li>\n<p>黑色分支首先与蓝色分支进行合并</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/c26c226cae323.png\" alt=\"image-20200820084707454\" /></p>\n<p>也就是将蓝色分支的三个commit直接移动到黑色主分支的后边。</p>\n</li>\n<li>\n<p>接下来黑色分支与绿色分支进行合并</p>\n<p>同样的需要处理冲突。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/9476a83302066.png\" alt=\"image-20200820084813421\" /></p>\n<p>此时变不能进行合并了。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/63dab09cb67b0.png\" alt=\"image-20200820084835884\" /></p>\n</li>\n<li>\n<p>如果一定要用此方式则需要处理</p>\n<ul>\n<li>\n<p>将绿色分支回退到到s处（远端本地都回退）</p>\n</li>\n<li>\n<p>将绿色分支基于黑色分支进行变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase origin/master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来处理冲突（如果存在），重新添加文件并执行命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase --continue<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>循环执行这一步，直到处理完所有冲突。</p>\n</li>\n<li>\n<p>接下来强制将绿色分支推送。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/91fb77276a4f4.png\" alt=\"image-20200820085824629\" /></p>\n</li>\n<li>\n<p>进行pull request 进行合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/5cc253b9fc9fd.png\" alt=\"image-20200820090020461\" /></p>\n<p>GitHub会将蓝色四个commit移动到黑色分支后。</p>\n</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>快速处理繁琐的过程。参考：<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-Rerere\">Rerere</a></p>\n</blockquote>\n<ol>\n<li>\n<p>将<code>Rerere</code>全局配置打开</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global rerere.enabled <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换到绿色分支与master进行合并</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> merge master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果出现冲突，则处理冲突。如果出现<code>Recorded preimage</code>字眼则表示成功。</p>\n</li>\n<li>\n<p>添加文件并生成commit</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -am<span class=\"token string\">\"temp\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>回退版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset --hard HEAD~1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>绿色分支基于master分支做变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来反复执行<code>git rebase --continue</code>即可。</p>\n</li>\n</ol>\n<h2 id=\"如何保证集成的质量\"><a class=\"markdownIt-Anchor\" href=\"#如何保证集成的质量\"></a> 如何保证集成的质量</h2>\n<p>可以通过设置进行对分支进行保护。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/0f6095ce9aaaa.png\" alt=\"image-20200820092733923\" /></p>\n<p>可以在<code>marketplace</code>进行安装检查代码的插件。</p>\n<h2 id=\"怎么给项目增加详细的指导文档\"><a class=\"markdownIt-Anchor\" href=\"#怎么给项目增加详细的指导文档\"></a> 怎么给项目增加详细的指导文档</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/ff49cc3fe598e.png\" alt=\"image-20200820100132196\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/df60715abc1ec.png\" alt=\"image-20200820100255987\" /></p>\n<p>Wiki可以通过markdown进行编写。</p>\n","more":"<h2 id=\"创建团队的项目\"><a class=\"markdownIt-Anchor\" href=\"#创建团队的项目\"></a> 创建团队的项目</h2>\n<p>通过<a href=\"https://github.com/organizations/plan\">新建组织</a>这个页面即可新建一个组织。</p>\n<h2 id=\"怎么选择适合自己团队的工作流\"><a class=\"markdownIt-Anchor\" href=\"#怎么选择适合自己团队的工作流\"></a> 怎么选择适合自己团队的工作流</h2>\n<h3 id=\"主干开发\"><a class=\"markdownIt-Anchor\" href=\"#主干开发\"></a> 主干开发</h3>\n<ol>\n<li>开发团队系统开发团队系统设计和开发能力强。有一套有效的特性切换的实施机制，保证上线后无需修改代码就能够修改系统行为。需要快速迭代，想获得CI/CD所有好处。设计和开发能力强。有一套有效的特性切换的实施机制，保证上线后无需修改代码就能够修改系统行为。需要快速迭代，想获得CI/CD所有好处。</li>\n<li>组件开发的团队，成员能力强，人员少，沟通顺畅。用户升级组件成本低的环境。</li>\n</ol>\n<h3 id=\"git-flow\"><a class=\"markdownIt-Anchor\" href=\"#git-flow\"></a> Git Flow</h3>\n<p>不具备主干开发能力。有预定的发布周期。需要执行严格的发布流程。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/57c37e5f544e9.png\" alt=\"image-20200819212553537\" /></p>\n<h3 id=\"github-flow\"><a class=\"markdownIt-Anchor\" href=\"#github-flow\"></a> Github Flow</h3>\n<p>不具备主千开发能力。随时集成随时发布：分支集成时经过代码评审和自动化测试，就可以立即发布的应用。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/ef6703e50c99e.png\" alt=\"image-20200819212956858\" /></p>\n<h3 id=\"gitlab-flow带生产分支\"><a class=\"markdownIt-Anchor\" href=\"#gitlab-flow带生产分支\"></a> GitLab Flow（带生产分支）</h3>\n<p>不具备主干开发能力。无法控制准确的发布时间，但又要求不停地集成。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/9b77c5bc99761.png\" alt=\"image-20200819213049897\" /></p>\n<h3 id=\"gitlab-flow带环境分支\"><a class=\"markdownIt-Anchor\" href=\"#gitlab-flow带环境分支\"></a> GitLab Flow（带环境分支）</h3>\n<p>不具备主干开发能力。需要逐个通过各个测试环境的验证才能发布。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/5af19de4cd8e1.png\" alt=\"image-20200819213141624\" /></p>\n<h3 id=\"gitlab-flow带发布分支\"><a class=\"markdownIt-Anchor\" href=\"#gitlab-flow带发布分支\"></a> GitLab Flow（带发布分支）</h3>\n<p>不具备主干开发能力。需要对外发布和维护不同版本。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/8ef302741e2ba.png\" alt=\"image-20200819213327705\" /></p>\n<h2 id=\"如何挑选合适的分支集成策略\"><a class=\"markdownIt-Anchor\" href=\"#如何挑选合适的分支集成策略\"></a> 如何挑选合适的分支集成策略</h2>\n<p>在项目设置处可以选择允许通过那种方式合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/d72486870c66b.png\" alt=\"image-20200819215932108\" /></p>\n<p>例如如下项目，通过三种方式进行合并的结果。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/069c668b5ecc5.png\" alt=\"image-20200819215349627\" /></p>\n<ol>\n<li>\n<p>Create a merge commit</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/88e9f4a929a90.png\" alt=\"image-20200819220321723\" /></p>\n<p>只要git能够解决即创建一个merge。</p>\n</li>\n<li>\n<p>Squash and merge</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/0f04e94b543e4.png\" alt=\"image-20200819215316322\" /></p>\n<p>把三个蓝色的commit合并成一个，然后合并到黑色分支。</p>\n</li>\n<li>\n<p>Rebase and merge</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/b1633bb3bb70e.png\" alt=\"image-20200819215617849\" /></p>\n<p>相当于把蓝色的三个commit移动到黑色后边。</p>\n</li>\n</ol>\n<h2 id=\"启用issue跟踪需求和任务\"><a class=\"markdownIt-Anchor\" href=\"#启用issue跟踪需求和任务\"></a> 启用issue跟踪需求和任务</h2>\n<p>可以通过设置进行开启，默认是开启的。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/3c85984fe2cca.png\" alt=\"image-20200819220709026\" /></p>\n<p>也可以建立模板。</p>\n<h2 id=\"如何用project管理issue\"><a class=\"markdownIt-Anchor\" href=\"#如何用project管理issue\"></a> 如何用project管理issue</h2>\n<ol>\n<li>\n<p>创建project</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/fff1f4a4bf4ca.png\" alt=\"image-20200819221421668\" /></p>\n</li>\n<li>\n<p>将issue关联project</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/2993e1b3ea9e4.png\" alt=\"image-20200819221410429\" /></p>\n</li>\n</ol>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/ab050d05fbfc8.png\" alt=\"image-20200819221455996\" /></p>\n<h2 id=\"项目内部实施code-review\"><a class=\"markdownIt-Anchor\" href=\"#项目内部实施code-review\"></a> 项目内部实施code review</h2>\n<p>为了保证集成分支代码质量，不允许不经过code review就集成到master分支。</p>\n<ol>\n<li>\n<p>添加规则</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/7769f309dd5cb.png\" alt=\"image-20200819221757599\" /></p>\n</li>\n<li>\n<p>创建规则</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/19/1cc26356c4bc1.png\" alt=\"image-20200819221918969\" /></p>\n</li>\n</ol>\n<h2 id=\"团队协作时如何做多分支的集成\"><a class=\"markdownIt-Anchor\" href=\"#团队协作时如何做多分支的集成\"></a> 团队协作时如何做多分支的集成</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/a8c9254769f65.png\" alt=\"image-20200820074704156\" /></p>\n<h3 id=\"create-a-merge-commit\"><a class=\"markdownIt-Anchor\" href=\"#create-a-merge-commit\"></a> Create a merge commit</h3>\n<ol>\n<li>\n<p>黑色分支首先与蓝色分支进行合并</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/f0c96502a760e.png\" alt=\"image-20200820075222155\" /></p>\n</li>\n<li>\n<p>接下来黑色分支与绿色分支进行合并</p>\n<p>如果出现冲突，则需要人工解决。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/67bc688e7d5e2.png\" alt=\"image-20200820075439259\" /></p>\n<p>解决完冲突进行合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/ddaddd67eeade.png\" alt=\"image-20200820075532797\" /></p>\n</li>\n</ol>\n<h3 id=\"squash-and-merge\"><a class=\"markdownIt-Anchor\" href=\"#squash-and-merge\"></a> Squash and merge</h3>\n<ol>\n<li>\n<p>黑色分支首先与蓝色分支进行合并</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/11524f3e4ad04.png\" alt=\"image-20200820084143093\" /></p>\n<p>会将蓝色分支的三次commit进行合并，然后加入到黑色分支。</p>\n</li>\n<li>\n<p>接下来黑色分支与绿色分支进行合并</p>\n<p>同样的需要处理冲突。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/572ea5ae18411.png\" alt=\"image-20200820084334038\" /></p>\n<p>接下来进行合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/3108664566ae3.png\" alt=\"image-20200820084355958\" /></p>\n</li>\n</ol>\n<h3 id=\"rebase-and-merge\"><a class=\"markdownIt-Anchor\" href=\"#rebase-and-merge\"></a> Rebase and merge</h3>\n<ol>\n<li>\n<p>黑色分支首先与蓝色分支进行合并</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/c26c226cae323.png\" alt=\"image-20200820084707454\" /></p>\n<p>也就是将蓝色分支的三个commit直接移动到黑色主分支的后边。</p>\n</li>\n<li>\n<p>接下来黑色分支与绿色分支进行合并</p>\n<p>同样的需要处理冲突。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/9476a83302066.png\" alt=\"image-20200820084813421\" /></p>\n<p>此时变不能进行合并了。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/63dab09cb67b0.png\" alt=\"image-20200820084835884\" /></p>\n</li>\n<li>\n<p>如果一定要用此方式则需要处理</p>\n<ul>\n<li>\n<p>将绿色分支回退到到s处（远端本地都回退）</p>\n</li>\n<li>\n<p>将绿色分支基于黑色分支进行变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase origin/master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来处理冲突（如果存在），重新添加文件并执行命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase --continue<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>循环执行这一步，直到处理完所有冲突。</p>\n</li>\n<li>\n<p>接下来强制将绿色分支推送。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/91fb77276a4f4.png\" alt=\"image-20200820085824629\" /></p>\n</li>\n<li>\n<p>进行pull request 进行合并。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/5cc253b9fc9fd.png\" alt=\"image-20200820090020461\" /></p>\n<p>GitHub会将蓝色四个commit移动到黑色分支后。</p>\n</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>快速处理繁琐的过程。参考：<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-Rerere\">Rerere</a></p>\n</blockquote>\n<ol>\n<li>\n<p>将<code>Rerere</code>全局配置打开</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global rerere.enabled <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>切换到绿色分支与master进行合并</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> merge master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果出现冲突，则处理冲突。如果出现<code>Recorded preimage</code>字眼则表示成功。</p>\n</li>\n<li>\n<p>添加文件并生成commit</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -am<span class=\"token string\">\"temp\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>回退版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset --hard HEAD~1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>绿色分支基于master分支做变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来反复执行<code>git rebase --continue</code>即可。</p>\n</li>\n</ol>\n<h2 id=\"如何保证集成的质量\"><a class=\"markdownIt-Anchor\" href=\"#如何保证集成的质量\"></a> 如何保证集成的质量</h2>\n<p>可以通过设置进行对分支进行保护。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/0f6095ce9aaaa.png\" alt=\"image-20200820092733923\" /></p>\n<p>可以在<code>marketplace</code>进行安装检查代码的插件。</p>\n<h2 id=\"怎么给项目增加详细的指导文档\"><a class=\"markdownIt-Anchor\" href=\"#怎么给项目增加详细的指导文档\"></a> 怎么给项目增加详细的指导文档</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/ff49cc3fe598e.png\" alt=\"image-20200820100132196\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/20/df60715abc1ec.png\" alt=\"image-20200820100255987\" /></p>\n<p>Wiki可以通过markdown进行编写。</p>\n","categories":[{"name":"Git","path":"api/categories/Git.json"},{"name":"玩转Git三剑客","path":"api/categories/玩转Git三剑客.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}