{"title":"如何为评论系统快速添加表情","slug":"Hexo相关/评论相关/如何为评论系统快速添加表情","date":"2021-01-17T05:04:25.000Z","updated":"2022-02-21T13:24:30.856Z","comments":true,"path":"api/articles/Hexo相关/评论相关/如何为评论系统快速添加表情.json","excerpt":null,"covers":["https://rmt.ladydaily.com/fetch/tzk/storage/20210117130542.png","https://rmt.ladydaily.com/fetch/tzk/storage/20210117134014.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20210117140111.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20210117140431.png?w=1280&amp;fmt=jpg"],"content":"<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117130542.png\" alt=\"image-20210117130542428\" /></p>\n<h2 id=\"项目特点\"><a class=\"markdownIt-Anchor\" href=\"#项目特点\"></a> 项目特点</h2>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>即使预览图片</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>一键复制图片链接、img标签、markdown格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>提供Twikoo格式的表情格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>提供Valine格式的表情格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>提供Waline格式的表情格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>表情存放在多个位置，不仅仅在GitHub</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>包含大多数表情包，且支持用户自己添加</p>\n</div>\n<p>项目地址： <a class=\"btn-beautify red larger\" href=\"https://emotion.xiaokang.me/#/\" \n  title=\"表情速查\"><i class=\"far fa-hand-point-right\"></i><span>表情速查</span></a></p>\n<h2 id=\"适配twikoo\"><a class=\"markdownIt-Anchor\" href=\"#适配twikoo\"></a> 适配Twikoo</h2>\n<p>Twikoo的表情使用<code>OwO</code>，表情的配置为一个json文件。例如：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"Heo\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heo-亲亲\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/Heo/亲亲.png'>\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>json文件对格式要求很严格，例如键与值都需要使用<strong>双引号</strong>进行包裹，如果是最后一项那么结尾不能包含逗号。。。。</p>\n</blockquote>\n<p>当你适配Twikoo评论时，请注意每种表情的末尾是否需要添加逗号。例如我想添加<code>biliTV</code>和<code>阿鲁</code>两种表情到我的<code>OwO.json</code>。那么我应该复制下来的内容如下：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"bilibili_tv_gif\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bilibili_tv_gif-doge\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/bilibili_tv_gif/doge.gif'>\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"阿鲁\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"aru-1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/aru/1.png'>\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>以上代码仅仅是一个示例。具体请自己喜欢的表情包进行添加。</p>\n</blockquote>\n<p>最后附上作者的<a href=\"https://cdn.jsdelivr.net/gh/tzki/tzki.github.io/owo.json\">OwO.json</a>供各位博主参考。</p>\n<h2 id=\"valine-waline\"><a class=\"markdownIt-Anchor\" href=\"#valine-waline\"></a> Valine、Waline</h2>\n<p>这种评论添加表情的方式是一个对象格式，且不支持表情分类。格式如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"图片名\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"图片链接\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>可能部分主题（例如butterfly）会将添加表情的方式修改为创建<code>valine.json</code>文件，这样的情况就相当于编辑JSON文件了。</p>\n</blockquote>\n<p>因此对于这种评论添加<code>biliTV</code>和<code>阿鲁</code>两种表情格式是这样的。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"哔哩-doge\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://7.dusays.com/2021/01/15/3de5568861758.gif\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"阿鲁-1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://7.dusays.com/2021/01/15/3c76dffbc08a5.png\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>如果键名重复，则会导致后边的覆盖前边的。</p>\n</blockquote>\n<h2 id=\"如何快速生成对应的格式\"><a class=\"markdownIt-Anchor\" href=\"#如何快速生成对应的格式\"></a> 如何快速生成对应的格式</h2>\n<ol>\n<li>\n<p>进入<a href=\"https://emotion.xiaokang.me/\">表情速查</a></p>\n</li>\n<li>\n<p>选择你要查看的表情分类后即可看到该分类下的表情包预览以及各种评论的表情包格式</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117134014.png?w=1280&amp;fmt=jpg\" alt=\"image-20210117134014386\" /></p>\n</li>\n</ol>\n<h2 id=\"如何添加表情包\"><a class=\"markdownIt-Anchor\" href=\"#如何添加表情包\"></a> 如何添加表情包</h2>\n<p>此项目所使用的<a href=\"https://github.com/Dreamy-TZK/iemotion-pic\">表情包仓库</a>，如果想要添加自己的表情包可以任选下方所述方法其中一种即可。</p>\n<ol>\n<li>\n<p>通过提交Pull Request：将表情包放入此仓库<code>img</code>目录下即可，注意按照格式。</p>\n<blockquote>\n<p>适合提交图片的用户</p>\n</blockquote>\n</li>\n<li>\n<p>通过提交Pull Request：将你的表情包JSON文件放入仓库<code>user_json</code>目录下即可，注意按照格式</p>\n<blockquote>\n<p>适合自己存储表情包的用户</p>\n</blockquote>\n</li>\n<li>\n<p>直接将表情包发送给作者</p>\n<blockquote>\n<p>适合懒人</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"快速生成json\"><a class=\"markdownIt-Anchor\" href=\"#快速生成json\"></a> 快速生成JSON</h3>\n<blockquote>\n<p>注意，这里的JSON不是指的评论系统所需要的JSON，而是指你向表情速查提供表情包的JSON。</p>\n</blockquote>\n<p>表情速查需要的JSON格式如下：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"表情包的分类名\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"power\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"你的版权链接\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"common\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"这个表情的名称（不可重复）\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"该表情的地址\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>你可以通过自己写脚本生成该格式的JSON文件，也可以使用作者提供的几个脚本生成。</p>\n<ol>\n<li>\n<p>TXT文件</p>\n<p>根据TXT文件生成JSON脚本，txt文件格式：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">表情包名|表情包地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>创建一个文件夹，名为<code>user_text</code>，将以下脚本保存为<code>js</code>文件，并与<code>user_text</code>文件夹放在同一级目录。<code>user_text</code>存放你的txt文本。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @description: 根据用户的txt文本生成json文件，生成的name字段为文件名\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-14 20:26:31\n * @LastEditTime: 2021-01-14 20:26:31\n * @LastEditors: 小康\n */</span>\n<span class=\"token keyword\">const</span> fse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">generateJsonByText</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileBasePath<span class=\"token punctuation\">,</span> fileName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileBasePath <span class=\"token operator\">+</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> contentList <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    common<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    all<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n  contentList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> imageObj <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span>\n    obj<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> imageObj<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> imageObj<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/r'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> flag <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">pathExists</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text_temp/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text_temp/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">writeJSON</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./user_text_temp/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> fileList <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text/'</span><span class=\"token punctuation\">)</span>\n  fileList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">generateJsonByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text/'</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>通过命令<code>npm i</code>安装脚本后，即可运行。</p>\n</blockquote>\n</li>\n<li>\n<p>本地图片文件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/*\n * @description: 通过图片生成json\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-16 09:25:29\n * @LastEditTime: 2021-01-16 09:25:34\n * @LastEditors: 小康\n */</span>\n\n<span class=\"token keyword\">const</span> fse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 图片地址前缀修饰</span>\n<span class=\"token keyword\">const</span> imgPrefix <span class=\"token operator\">=</span> <span class=\"token string\">'https://twikoo-magic.oss-cn-hangzhou.aliyuncs.com/'</span>\n<span class=\"token comment\">// 版权</span>\n<span class=\"token keyword\">const</span> power <span class=\"token operator\">=</span> <span class=\"token string\">'https://noionion.top/'</span>\n\n<span class=\"token comment\">/**\n * 获取文件列表\n * @author 小康\n * @param &#123;string&#125; 图片目录的父级目录\n * @returns &#123;Object&#125; 所有图片对象\n * &#123;\n *    图片目录名:[’图片名‘]\n * &#125;\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 图片目录列表</span>\n  <span class=\"token keyword\">const</span> picDirs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> picDirs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    obj<span class=\"token punctuation\">[</span>picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> obj\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 入口函数</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> fileObj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> category <span class=\"token keyword\">in</span> fileObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> category<span class=\"token punctuation\">,</span>\n      power<span class=\"token punctuation\">,</span>\n      common<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      all<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fileObj<span class=\"token punctuation\">[</span>category<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      obj<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> fileObj<span class=\"token punctuation\">[</span>category<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>imgPrefix<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>category<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fileObj<span class=\"token punctuation\">[</span>category<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    fse<span class=\"token punctuation\">.</span><span class=\"token function\">writeJson</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_json_temp/'</span> <span class=\"token operator\">+</span> category <span class=\"token operator\">+</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'生成完毕'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_img'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ol>\n<li>\n<p>创建文件夹<code>user_img</code>、<code>user_json_temp</code>和js文件，并写入上述脚本。</p>\n</li>\n<li>\n<p>将你的表情放入<code>user_img</code>。注意存放位置。</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117140111.png?w=1280&amp;fmt=jpg\" alt=\"image-20210117140111027\" /></p>\n</li>\n<li>\n<p>运行命令<code>npm i</code>后运行脚本即可。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li>\n<p>上传去不图床</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @description: 将图片上传到图床并生成JSON\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-14 21:13:20\n * @LastEditTime: 2021-01-14 21:13:20\n * @LastEditors: 小康\n */</span>\n\n<span class=\"token keyword\">const</span> axios <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'axios'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> FormData <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form-data'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 图床TOKEN</span>\n<span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token comment\">// 上传后json输出位置</span>\n<span class=\"token keyword\">const</span> outpath <span class=\"token operator\">=</span> <span class=\"token string\">'user_json_temp'</span>\n<span class=\"token comment\">// 上传地址</span>\n<span class=\"token comment\">// const url = 'https://pic.alexhchu.com/api/upload'</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://7bu.top/api/upload'</span>\n<span class=\"token comment\">/**\n * 获取文件列表\n * @author 小康\n * @param &#123;string&#125; 图片目录的父级目录\n * @returns &#123;Object&#125; 所有图片对象\n * &#123;\n *    图片目录名:[’图片名‘]\n * &#125;\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 图片目录列表</span>\n  <span class=\"token keyword\">const</span> picDirs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> picDirs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    obj<span class=\"token punctuation\">[</span>picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> obj\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**\n * 将图片上传到图床\n * @author 小康\n * @param &#123;object&#125; 图片对象\n * @returns &#123;any&#125;\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">uploadImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath<span class=\"token punctuation\">,</span> imgObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> item <span class=\"token keyword\">in</span> imgObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> item<span class=\"token punctuation\">,</span>\n      power<span class=\"token operator\">:</span> <span class=\"token string\">'https://emotion.xiaokang.me/'</span><span class=\"token punctuation\">,</span>\n      common<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      all<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imgObj<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> imgObj<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      obj<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> imgObj<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>url\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 保存json文件</span>\n    <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">writeJson</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>outpath<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 入口函数</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">imgPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> imgObj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span>imgPath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">uploadImg</span><span class=\"token punctuation\">(</span>imgPath<span class=\"token punctuation\">,</span> imgObj<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./upload_img'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">imgPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> localFile <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createReadStream</span><span class=\"token punctuation\">(</span>imgPath<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> formData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> localFile<span class=\"token punctuation\">)</span>\n  formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> headers <span class=\"token operator\">=</span> formData<span class=\"token punctuation\">.</span><span class=\"token function\">getHeaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//获取headers</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//获取form-data长度</span>\n    formData<span class=\"token punctuation\">.</span><span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">//设置长度，important!!!</span>\n      headers<span class=\"token punctuation\">[</span><span class=\"token string\">'content-length'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> length\n      headers<span class=\"token punctuation\">[</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> token\n\n      <span class=\"token keyword\">await</span> axios\n        <span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> formData<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> headers <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>imgPath<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">上传成功=></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// obj = res.data.data</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ol>\n<li>\n<p>创建<code>upload_img</code>、<code>user_json_temp</code>和js脚本并写入上述代码。</p>\n</li>\n<li>\n<p>修改脚本中的TOKEN为你自己的TOKEN</p>\n</li>\n<li>\n<p>将你的图片放入<code>upload_img</code>文件夹下。注意格式</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117140431.png?w=1280&amp;fmt=jpg\" alt=\"image-20210117140431887\" /></p>\n</li>\n<li>\n<p>运行<code>npm i</code>命令，然后运行脚本即可。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\"></a> 最后</h2>\n<p>如果遇到问题，请在下方留言。</p>\n","more":"<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117130542.png\" alt=\"image-20210117130542428\" /></p>\n<h2 id=\"项目特点\"><a class=\"markdownIt-Anchor\" href=\"#项目特点\"></a> 项目特点</h2>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>即使预览图片</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>一键复制图片链接、img标签、markdown格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>提供Twikoo格式的表情格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>提供Valine格式的表情格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>提供Waline格式的表情格式</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>表情存放在多个位置，不仅仅在GitHub</p>\n</div>\n<div class=\"checkbox green checked\">\n  <input type=\"checkbox\" checked />\n  <p>包含大多数表情包，且支持用户自己添加</p>\n</div>\n<p>项目地址： <a class=\"btn-beautify red larger\" href=\"https://emotion.xiaokang.me/#/\" \n  title=\"表情速查\"><i class=\"far fa-hand-point-right\"></i><span>表情速查</span></a></p>\n<h2 id=\"适配twikoo\"><a class=\"markdownIt-Anchor\" href=\"#适配twikoo\"></a> 适配Twikoo</h2>\n<p>Twikoo的表情使用<code>OwO</code>，表情的配置为一个json文件。例如：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"Heo\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heo-亲亲\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/Heo/亲亲.png'>\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>json文件对格式要求很严格，例如键与值都需要使用<strong>双引号</strong>进行包裹，如果是最后一项那么结尾不能包含逗号。。。。</p>\n</blockquote>\n<p>当你适配Twikoo评论时，请注意每种表情的末尾是否需要添加逗号。例如我想添加<code>biliTV</code>和<code>阿鲁</code>两种表情到我的<code>OwO.json</code>。那么我应该复制下来的内容如下：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"bilibili_tv_gif\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bilibili_tv_gif-doge\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/bilibili_tv_gif/doge.gif'>\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"阿鲁\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"aru-1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/aru/1.png'>\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>以上代码仅仅是一个示例。具体请自己喜欢的表情包进行添加。</p>\n</blockquote>\n<p>最后附上作者的<a href=\"https://cdn.jsdelivr.net/gh/tzki/tzki.github.io/owo.json\">OwO.json</a>供各位博主参考。</p>\n<h2 id=\"valine-waline\"><a class=\"markdownIt-Anchor\" href=\"#valine-waline\"></a> Valine、Waline</h2>\n<p>这种评论添加表情的方式是一个对象格式，且不支持表情分类。格式如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"图片名\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"图片链接\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>可能部分主题（例如butterfly）会将添加表情的方式修改为创建<code>valine.json</code>文件，这样的情况就相当于编辑JSON文件了。</p>\n</blockquote>\n<p>因此对于这种评论添加<code>biliTV</code>和<code>阿鲁</code>两种表情格式是这样的。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"哔哩-doge\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://7.dusays.com/2021/01/15/3de5568861758.gif\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"阿鲁-1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://7.dusays.com/2021/01/15/3c76dffbc08a5.png\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>如果键名重复，则会导致后边的覆盖前边的。</p>\n</blockquote>\n<h2 id=\"如何快速生成对应的格式\"><a class=\"markdownIt-Anchor\" href=\"#如何快速生成对应的格式\"></a> 如何快速生成对应的格式</h2>\n<ol>\n<li>\n<p>进入<a href=\"https://emotion.xiaokang.me/\">表情速查</a></p>\n</li>\n<li>\n<p>选择你要查看的表情分类后即可看到该分类下的表情包预览以及各种评论的表情包格式</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117134014.png?w=1280&amp;fmt=jpg\" alt=\"image-20210117134014386\" /></p>\n</li>\n</ol>\n<h2 id=\"如何添加表情包\"><a class=\"markdownIt-Anchor\" href=\"#如何添加表情包\"></a> 如何添加表情包</h2>\n<p>此项目所使用的<a href=\"https://github.com/Dreamy-TZK/iemotion-pic\">表情包仓库</a>，如果想要添加自己的表情包可以任选下方所述方法其中一种即可。</p>\n<ol>\n<li>\n<p>通过提交Pull Request：将表情包放入此仓库<code>img</code>目录下即可，注意按照格式。</p>\n<blockquote>\n<p>适合提交图片的用户</p>\n</blockquote>\n</li>\n<li>\n<p>通过提交Pull Request：将你的表情包JSON文件放入仓库<code>user_json</code>目录下即可，注意按照格式</p>\n<blockquote>\n<p>适合自己存储表情包的用户</p>\n</blockquote>\n</li>\n<li>\n<p>直接将表情包发送给作者</p>\n<blockquote>\n<p>适合懒人</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"快速生成json\"><a class=\"markdownIt-Anchor\" href=\"#快速生成json\"></a> 快速生成JSON</h3>\n<blockquote>\n<p>注意，这里的JSON不是指的评论系统所需要的JSON，而是指你向表情速查提供表情包的JSON。</p>\n</blockquote>\n<p>表情速查需要的JSON格式如下：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"表情包的分类名\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"power\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"你的版权链接\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"common\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"这个表情的名称（不可重复）\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"该表情的地址\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>你可以通过自己写脚本生成该格式的JSON文件，也可以使用作者提供的几个脚本生成。</p>\n<ol>\n<li>\n<p>TXT文件</p>\n<p>根据TXT文件生成JSON脚本，txt文件格式：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">表情包名|表情包地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>创建一个文件夹，名为<code>user_text</code>，将以下脚本保存为<code>js</code>文件，并与<code>user_text</code>文件夹放在同一级目录。<code>user_text</code>存放你的txt文本。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @description: 根据用户的txt文本生成json文件，生成的name字段为文件名\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-14 20:26:31\n * @LastEditTime: 2021-01-14 20:26:31\n * @LastEditors: 小康\n */</span>\n<span class=\"token keyword\">const</span> fse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">generateJsonByText</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileBasePath<span class=\"token punctuation\">,</span> fileName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileBasePath <span class=\"token operator\">+</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> contentList <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    common<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    all<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n  contentList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> imageObj <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span>\n    obj<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> imageObj<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> imageObj<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/r'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> flag <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">pathExists</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text_temp/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text_temp/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">writeJSON</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./user_text_temp/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> fileList <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text/'</span><span class=\"token punctuation\">)</span>\n  fileList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">generateJsonByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_text/'</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>通过命令<code>npm i</code>安装脚本后，即可运行。</p>\n</blockquote>\n</li>\n<li>\n<p>本地图片文件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/*\n * @description: 通过图片生成json\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-16 09:25:29\n * @LastEditTime: 2021-01-16 09:25:34\n * @LastEditors: 小康\n */</span>\n\n<span class=\"token keyword\">const</span> fse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 图片地址前缀修饰</span>\n<span class=\"token keyword\">const</span> imgPrefix <span class=\"token operator\">=</span> <span class=\"token string\">'https://twikoo-magic.oss-cn-hangzhou.aliyuncs.com/'</span>\n<span class=\"token comment\">// 版权</span>\n<span class=\"token keyword\">const</span> power <span class=\"token operator\">=</span> <span class=\"token string\">'https://noionion.top/'</span>\n\n<span class=\"token comment\">/**\n * 获取文件列表\n * @author 小康\n * @param &#123;string&#125; 图片目录的父级目录\n * @returns &#123;Object&#125; 所有图片对象\n * &#123;\n *    图片目录名:[’图片名‘]\n * &#125;\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 图片目录列表</span>\n  <span class=\"token keyword\">const</span> picDirs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> picDirs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    obj<span class=\"token punctuation\">[</span>picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> obj\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 入口函数</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> fileObj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> category <span class=\"token keyword\">in</span> fileObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> category<span class=\"token punctuation\">,</span>\n      power<span class=\"token punctuation\">,</span>\n      common<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      all<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fileObj<span class=\"token punctuation\">[</span>category<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      obj<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> fileObj<span class=\"token punctuation\">[</span>category<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>imgPrefix<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>category<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fileObj<span class=\"token punctuation\">[</span>category<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    fse<span class=\"token punctuation\">.</span><span class=\"token function\">writeJson</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_json_temp/'</span> <span class=\"token operator\">+</span> category <span class=\"token operator\">+</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'生成完毕'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./user_img'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ol>\n<li>\n<p>创建文件夹<code>user_img</code>、<code>user_json_temp</code>和js文件，并写入上述脚本。</p>\n</li>\n<li>\n<p>将你的表情放入<code>user_img</code>。注意存放位置。</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117140111.png?w=1280&amp;fmt=jpg\" alt=\"image-20210117140111027\" /></p>\n</li>\n<li>\n<p>运行命令<code>npm i</code>后运行脚本即可。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li>\n<p>上传去不图床</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @description: 将图片上传到图床并生成JSON\n * @author: 小康\n * @url: https://xiaokang.me\n * @Date: 2021-01-14 21:13:20\n * @LastEditTime: 2021-01-14 21:13:20\n * @LastEditors: 小康\n */</span>\n\n<span class=\"token keyword\">const</span> axios <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'axios'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> FormData <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form-data'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 图床TOKEN</span>\n<span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token comment\">// 上传后json输出位置</span>\n<span class=\"token keyword\">const</span> outpath <span class=\"token operator\">=</span> <span class=\"token string\">'user_json_temp'</span>\n<span class=\"token comment\">// 上传地址</span>\n<span class=\"token comment\">// const url = 'https://pic.alexhchu.com/api/upload'</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://7bu.top/api/upload'</span>\n<span class=\"token comment\">/**\n * 获取文件列表\n * @author 小康\n * @param &#123;string&#125; 图片目录的父级目录\n * @returns &#123;Object&#125; 所有图片对象\n * &#123;\n *    图片目录名:[’图片名‘]\n * &#125;\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 图片目录列表</span>\n  <span class=\"token keyword\">const</span> picDirs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> picDirs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    obj<span class=\"token punctuation\">[</span>picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> picDirs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> obj\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**\n * 将图片上传到图床\n * @author 小康\n * @param &#123;object&#125; 图片对象\n * @returns &#123;any&#125;\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">uploadImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath<span class=\"token punctuation\">,</span> imgObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> item <span class=\"token keyword\">in</span> imgObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> item<span class=\"token punctuation\">,</span>\n      power<span class=\"token operator\">:</span> <span class=\"token string\">'https://emotion.xiaokang.me/'</span><span class=\"token punctuation\">,</span>\n      common<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      all<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imgObj<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> imgObj<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      obj<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        name<span class=\"token operator\">:</span> imgObj<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>url\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 保存json文件</span>\n    <span class=\"token keyword\">await</span> fse<span class=\"token punctuation\">.</span><span class=\"token function\">writeJson</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>outpath<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 入口函数</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">imgPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> imgObj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFilesList</span><span class=\"token punctuation\">(</span>imgPath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">uploadImg</span><span class=\"token punctuation\">(</span>imgPath<span class=\"token punctuation\">,</span> imgObj<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./upload_img'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">imgPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> localFile <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createReadStream</span><span class=\"token punctuation\">(</span>imgPath<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> formData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> localFile<span class=\"token punctuation\">)</span>\n  formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> headers <span class=\"token operator\">=</span> formData<span class=\"token punctuation\">.</span><span class=\"token function\">getHeaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//获取headers</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//获取form-data长度</span>\n    formData<span class=\"token punctuation\">.</span><span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">//设置长度，important!!!</span>\n      headers<span class=\"token punctuation\">[</span><span class=\"token string\">'content-length'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> length\n      headers<span class=\"token punctuation\">[</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> token\n\n      <span class=\"token keyword\">await</span> axios\n        <span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> formData<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> headers <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>imgPath<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">上传成功=></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// obj = res.data.data</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ol>\n<li>\n<p>创建<code>upload_img</code>、<code>user_json_temp</code>和js脚本并写入上述代码。</p>\n</li>\n<li>\n<p>修改脚本中的TOKEN为你自己的TOKEN</p>\n</li>\n<li>\n<p>将你的图片放入<code>upload_img</code>文件夹下。注意格式</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20210117140431.png?w=1280&amp;fmt=jpg\" alt=\"image-20210117140431887\" /></p>\n</li>\n<li>\n<p>运行<code>npm i</code>命令，然后运行脚本即可。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\"></a> 最后</h2>\n<p>如果遇到问题，请在下方留言。</p>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"评论系统","path":"api/categories/评论系统.json"}],"tags":[{"name":"评论表情","path":"api/tags/评论表情.json"}]}