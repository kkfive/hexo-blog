{"title":"hexo博客每天定时提交网址给百度","slug":"小项目/hexo-baidupush/hexo博客每天定时提交网址给百度","date":"2020-10-01T13:36:25.000Z","updated":"2022-02-21T07:18:57.041Z","comments":true,"path":"api/articles/小项目/hexo-baidupush/hexo博客每天定时提交网址给百度.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/10/01/c2d099b9902c4.png","https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png","https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png","https://files.alexhchu.com/2020/09/30/78782c5558d7d.png","https://files.alexhchu.com/2020/09/30/473c7772e13fb.png","https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png"],"content":"<h2 id=\"项目说明\"><a class=\"markdownIt-Anchor\" href=\"#项目说明\"></a> 项目说明</h2>\n<p>首先说明下这是一个hexo的插件，和其他插件一样，只需要<code>npm i</code>即可安装。先说说我的需求：需求产生于建站之初，那时百度还搜索不到我的小康博客，因此借助Leancloud的环境搭建了一个每天定时提交的小程序，当时使用django框架进行的开发。后来由于各种原因，发现已经server 500了，不过不清楚原因，但无所谓了，因为我打算合理用actions进行重新开发。同样的出于原版的参考还是打算用python完成，但发现官网贴心的提供了一个<code>curl</code>命令提交。好吧，这就省下了很多事。因此开发了此插件。其原理：</p>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/c2d099b9902c4.png\" alt=\"image-20201001220236773\" /></p>\n<h2 id=\"此项目适合什么样的人群\"><a class=\"markdownIt-Anchor\" href=\"#此项目适合什么样的人群\"></a> 此项目适合什么样的人群</h2>\n<ol>\n<li>\n<p>想要提高百度收录量</p>\n<p>本人不打算扩展必应搜索，谷歌搜索等其他平台。因此在国内对于大多数人来说百度还是主力，而谷歌不需要你主动，他会自己找到你。</p>\n</li>\n<li>\n<p>使用了持续集成服务</p>\n<p>不适用于本地<code>hexo d</code>命令的人群，因此这个命令不会讲GitHub的配置文件添加进去。因此如果你没有使用持续集成服务，那么可以考虑使用持续集成或者进入public目录手动git提交。</p>\n</li>\n</ol>\n<h2 id=\"插件如何使用\"><a class=\"markdownIt-Anchor\" href=\"#插件如何使用\"></a> 插件如何使用</h2>\n<ol>\n<li>\n<p>安装插件</p>\n<p>在你博客的根目录打开命令行，安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-baidupush<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png\" alt=\"image-20201001220758045\" /></p>\n</li>\n<li>\n<p>接下来生成内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo cl <span class=\"token operator\">&amp;&amp;</span> hexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>你会发现生成的public目录中多了一个文件和一个目录</p>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png\" alt=\"image-20201001222058845\" /></p>\n<blockquote>\n<p>如果没有，请检查插件是否成功安装。</p>\n</blockquote>\n</li>\n<li>\n<p>部署页面</p>\n<p>此时的部署并不能使用<code>hexo d</code>命令，因为这个命令不能将<code>.github</code>这个文件添加。因此只能手动添加。如果你在持续集成中使用了此命令，请尝试替换为如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ./public\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">'name'</span> \n<span class=\"token function\">git</span> config --global user.email <span class=\"token string\">'yourEmail'</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Update\"</span>\n<span class=\"token function\">git</span> push --force --all 地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中地址跟你环境有关，如果是ssh认证推送，那么请填写你的ssh仓库地址。如果是密钥推送，那么GitHub的密钥格式为<code>https://TOKEN:地址</code>，例如：<code>https://aaaaa@github.com/tzki/tzki.github.io</code></p>\n<blockquote>\n<p>如果是本地<code>hexo d</code>用户可以参考上面命令做相同的操作。但这一定是繁琐的过程，建议更换持续集成或者放弃使用此插件。</p>\n</blockquote>\n</li>\n<li>\n<p>添加TOKEN</p>\n<p>这里使用的是你推送的仓库，不是源码仓库。例如：<code>https://github.com/tzki/tzki.github.io</code>。然后添加密钥。（如果没有使用过actions，第一次需要开启，也就是点一下那个绿色的按钮。）</p>\n<p><img src=\"https://files.alexhchu.com/2020/09/30/78782c5558d7d.png\" alt=\"image-20200930190800396\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/09/30/473c7772e13fb.png\" alt=\"image-20200930190943296\" /></p>\n</li>\n<li>\n<p>测试</p>\n<p>接下来只需要对此仓库点个star即可看到有actions运行。</p>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png\" alt=\"image-20201001223100700\" /></p>\n</li>\n<li>\n<p>提交的频率</p>\n<p>插件默认提交的频率是一天两次，分别为早上八点和晚上六点。如果你想修改那么可以再根目录的配置文件添加字段<code>commit_cron</code>进行配置，值采用GitHub的cron表达式。默认为<code>0 0,10 * * *</code> 遵循UTC时间。举个例子：每天8点(北京时间)提交一次：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">commit_cron<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>GitHub的cron表达式没有秒这个单位，即第一位为分钟。</p>\n</blockquote>\n<p>当然这个配置是非必填项，不在配置文件写也不会引起报错的。</p>\n</li>\n</ol>\n<h2 id=\"项目参考\"><a class=\"markdownIt-Anchor\" href=\"#项目参考\"></a> 项目参考</h2>\n<p>生成url部分代码参考插件了插件<a href=\"https://www.npmjs.com/package/hexo-baidu-url-submit\">hexo-baidu-url-submit</a>，没有直接使用而是搞一个新的，是因为考虑到了并不是每个人都装有这个插件，因此只能在自己的插件中集成这个功能即生成文章URL的文件。</p>\n","more":"<h2 id=\"项目说明\"><a class=\"markdownIt-Anchor\" href=\"#项目说明\"></a> 项目说明</h2>\n<p>首先说明下这是一个hexo的插件，和其他插件一样，只需要<code>npm i</code>即可安装。先说说我的需求：需求产生于建站之初，那时百度还搜索不到我的小康博客，因此借助Leancloud的环境搭建了一个每天定时提交的小程序，当时使用django框架进行的开发。后来由于各种原因，发现已经server 500了，不过不清楚原因，但无所谓了，因为我打算合理用actions进行重新开发。同样的出于原版的参考还是打算用python完成，但发现官网贴心的提供了一个<code>curl</code>命令提交。好吧，这就省下了很多事。因此开发了此插件。其原理：</p>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/c2d099b9902c4.png\" alt=\"image-20201001220236773\" /></p>\n<h2 id=\"此项目适合什么样的人群\"><a class=\"markdownIt-Anchor\" href=\"#此项目适合什么样的人群\"></a> 此项目适合什么样的人群</h2>\n<ol>\n<li>\n<p>想要提高百度收录量</p>\n<p>本人不打算扩展必应搜索，谷歌搜索等其他平台。因此在国内对于大多数人来说百度还是主力，而谷歌不需要你主动，他会自己找到你。</p>\n</li>\n<li>\n<p>使用了持续集成服务</p>\n<p>不适用于本地<code>hexo d</code>命令的人群，因此这个命令不会讲GitHub的配置文件添加进去。因此如果你没有使用持续集成服务，那么可以考虑使用持续集成或者进入public目录手动git提交。</p>\n</li>\n</ol>\n<h2 id=\"插件如何使用\"><a class=\"markdownIt-Anchor\" href=\"#插件如何使用\"></a> 插件如何使用</h2>\n<ol>\n<li>\n<p>安装插件</p>\n<p>在你博客的根目录打开命令行，安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-baidupush<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png\" alt=\"image-20201001220758045\" /></p>\n</li>\n<li>\n<p>接下来生成内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo cl <span class=\"token operator\">&amp;&amp;</span> hexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>你会发现生成的public目录中多了一个文件和一个目录</p>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png\" alt=\"image-20201001222058845\" /></p>\n<blockquote>\n<p>如果没有，请检查插件是否成功安装。</p>\n</blockquote>\n</li>\n<li>\n<p>部署页面</p>\n<p>此时的部署并不能使用<code>hexo d</code>命令，因为这个命令不能将<code>.github</code>这个文件添加。因此只能手动添加。如果你在持续集成中使用了此命令，请尝试替换为如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ./public\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">'name'</span> \n<span class=\"token function\">git</span> config --global user.email <span class=\"token string\">'yourEmail'</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Update\"</span>\n<span class=\"token function\">git</span> push --force --all 地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中地址跟你环境有关，如果是ssh认证推送，那么请填写你的ssh仓库地址。如果是密钥推送，那么GitHub的密钥格式为<code>https://TOKEN:地址</code>，例如：<code>https://aaaaa@github.com/tzki/tzki.github.io</code></p>\n<blockquote>\n<p>如果是本地<code>hexo d</code>用户可以参考上面命令做相同的操作。但这一定是繁琐的过程，建议更换持续集成或者放弃使用此插件。</p>\n</blockquote>\n</li>\n<li>\n<p>添加TOKEN</p>\n<p>这里使用的是你推送的仓库，不是源码仓库。例如：<code>https://github.com/tzki/tzki.github.io</code>。然后添加密钥。（如果没有使用过actions，第一次需要开启，也就是点一下那个绿色的按钮。）</p>\n<p><img src=\"https://files.alexhchu.com/2020/09/30/78782c5558d7d.png\" alt=\"image-20200930190800396\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/09/30/473c7772e13fb.png\" alt=\"image-20200930190943296\" /></p>\n</li>\n<li>\n<p>测试</p>\n<p>接下来只需要对此仓库点个star即可看到有actions运行。</p>\n<p><img src=\"https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png\" alt=\"image-20201001223100700\" /></p>\n</li>\n<li>\n<p>提交的频率</p>\n<p>插件默认提交的频率是一天两次，分别为早上八点和晚上六点。如果你想修改那么可以再根目录的配置文件添加字段<code>commit_cron</code>进行配置，值采用GitHub的cron表达式。默认为<code>0 0,10 * * *</code> 遵循UTC时间。举个例子：每天8点(北京时间)提交一次：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">commit_cron<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>GitHub的cron表达式没有秒这个单位，即第一位为分钟。</p>\n</blockquote>\n<p>当然这个配置是非必填项，不在配置文件写也不会引起报错的。</p>\n</li>\n</ol>\n<h2 id=\"项目参考\"><a class=\"markdownIt-Anchor\" href=\"#项目参考\"></a> 项目参考</h2>\n<p>生成url部分代码参考插件了插件<a href=\"https://www.npmjs.com/package/hexo-baidu-url-submit\">hexo-baidu-url-submit</a>，没有直接使用而是搞一个新的，是因为考虑到了并不是每个人都装有这个插件，因此只能在自己的插件中集成这个功能即生成文章URL的文件。</p>\n","categories":[{"name":"Project","path":"api/categories/Project.json"}],"tags":[{"name":"SEO","path":"api/tags/SEO.json"}]}