{"title":"八、Django分组查询","slug":"日常学习/技术相关/Python/八、Django分组查询","date":"2020-01-28T16:00:08.000Z","updated":"2022-02-21T06:11:10.024Z","comments":true,"path":"api/articles/日常学习/技术相关/Python/八、Django分组查询.json","excerpt":null,"covers":null,"content":"<h1 id=\"分组查询-f查询和q查询\"><a class=\"markdownIt-Anchor\" href=\"#分组查询-f查询和q查询\"></a> 分组查询、F查询和Q查询</h1>\n<h2 id=\"分组查询\"><a class=\"markdownIt-Anchor\" href=\"#分组查询\"></a> 分组查询</h2>\n<p><strong>统计每个出版社出版的书籍的平均价格</strong></p>\n<p>第一种方式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token string\">'publishs_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>annotate<span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span>Avg<span class=\"token punctuation\">(</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## select avg (price) from app01_ book GROUP BY publishs_ id;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>第二种方式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Publish<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>annotate<span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span>Avg<span class=\"token punctuation\">(</span><span class=\"token string\">'book__price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"f查询\"><a class=\"markdownIt-Anchor\" href=\"#f查询\"></a> F查询</h2>\n<p>F查询一般用于单表两个字段比较</p>\n<p>示例表</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    nid <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span>primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    good <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#点赞</span>\n    comment <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#评论</span>\n    publishDate<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    price<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#decimal(16,2)</span>\n    publishs<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">\"Publish\"</span><span class=\"token punctuation\">)</span>\n    authors<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">'Author'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">##查询点赞数大于评论数的数据</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>good__gt<span class=\"token operator\">=</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 支持四则运算</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>good__gt<span class=\"token operator\">=</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 当前表中字段自增（书籍表中的价格增加20元）</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>price <span class=\"token operator\">=</span> F<span class=\"token punctuation\">(</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"q查询\"><a class=\"markdownIt-Anchor\" href=\"#q查询\"></a> Q查询</h2>\n<p>一般用于OR关系（filter语句中时and关系）</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#查询评论数或点赞数大于40的书籍</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>good__gt<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>Q<span class=\"token punctuation\">(</span>comment__gt<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Q 对象可以使用&amp;(与) 、|（或）、~（非） 操作符组合起来。当一个操作符在两个Q 对象上使用时，它产生一个新的Q 对象。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>你可以组合<code>&amp;</code> 和<code>|</code> 操作符以及使用括号进行分组来编写任意复杂的<code>Q</code> 对象。同时，<code>Q</code> 对象可以使用<code>~</code> 操作符取反，这允许组合正常的查询和取反(<code>NOT</code>) 查询：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">bookList<span class=\"token operator\">=</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>authors__name<span class=\"token operator\">=</span><span class=\"token string\">\"yuan\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2017</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values_list<span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span>\nbookList<span class=\"token operator\">=</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>authors__name<span class=\"token operator\">=</span><span class=\"token string\">\"yuan\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2017</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Q<span class=\"token punctuation\">(</span>id__gt<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values_list<span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#可以进行Q嵌套，多层Q嵌套等，其实工作中比较常用</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>查询函数可以混合使用<code>Q 对象</code>和关键字参数。所有提供给查询函数的参数（关键字参数或<code>Q</code> 对象）都将&quot;AND”在一起。但是，如果出现<code>Q</code> 对象，它必须位于所有关键字参数的前面。例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">bookList<span class=\"token operator\">=</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2016</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2017</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                              title__icontains<span class=\"token operator\">=</span><span class=\"token string\">\"python\"</span>  <span class=\"token comment\">#也是and的关系，但是Q必须写在前面</span>\n                             <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n","more":"<h1 id=\"分组查询-f查询和q查询\"><a class=\"markdownIt-Anchor\" href=\"#分组查询-f查询和q查询\"></a> 分组查询、F查询和Q查询</h1>\n<h2 id=\"分组查询\"><a class=\"markdownIt-Anchor\" href=\"#分组查询\"></a> 分组查询</h2>\n<p><strong>统计每个出版社出版的书籍的平均价格</strong></p>\n<p>第一种方式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token string\">'publishs_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>annotate<span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span>Avg<span class=\"token punctuation\">(</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## select avg (price) from app01_ book GROUP BY publishs_ id;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>第二种方式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Publish<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>annotate<span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span>Avg<span class=\"token punctuation\">(</span><span class=\"token string\">'book__price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"f查询\"><a class=\"markdownIt-Anchor\" href=\"#f查询\"></a> F查询</h2>\n<p>F查询一般用于单表两个字段比较</p>\n<p>示例表</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    nid <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span>primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    good <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#点赞</span>\n    comment <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#评论</span>\n    publishDate<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    price<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#decimal(16,2)</span>\n    publishs<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">\"Publish\"</span><span class=\"token punctuation\">)</span>\n    authors<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">'Author'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">##查询点赞数大于评论数的数据</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>good__gt<span class=\"token operator\">=</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 支持四则运算</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>good__gt<span class=\"token operator\">=</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 当前表中字段自增（书籍表中的价格增加20元）</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>price <span class=\"token operator\">=</span> F<span class=\"token punctuation\">(</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"q查询\"><a class=\"markdownIt-Anchor\" href=\"#q查询\"></a> Q查询</h2>\n<p>一般用于OR关系（filter语句中时and关系）</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#查询评论数或点赞数大于40的书籍</span>\nobj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>good__gt<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>Q<span class=\"token punctuation\">(</span>comment__gt<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Q 对象可以使用&amp;(与) 、|（或）、~（非） 操作符组合起来。当一个操作符在两个Q 对象上使用时，它产生一个新的Q 对象。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>你可以组合<code>&amp;</code> 和<code>|</code> 操作符以及使用括号进行分组来编写任意复杂的<code>Q</code> 对象。同时，<code>Q</code> 对象可以使用<code>~</code> 操作符取反，这允许组合正常的查询和取反(<code>NOT</code>) 查询：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">bookList<span class=\"token operator\">=</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>authors__name<span class=\"token operator\">=</span><span class=\"token string\">\"yuan\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2017</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values_list<span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span>\nbookList<span class=\"token operator\">=</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>authors__name<span class=\"token operator\">=</span><span class=\"token string\">\"yuan\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2017</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Q<span class=\"token punctuation\">(</span>id__gt<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values_list<span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#可以进行Q嵌套，多层Q嵌套等，其实工作中比较常用</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>查询函数可以混合使用<code>Q 对象</code>和关键字参数。所有提供给查询函数的参数（关键字参数或<code>Q</code> 对象）都将&quot;AND”在一起。但是，如果出现<code>Q</code> 对象，它必须位于所有关键字参数的前面。例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">bookList<span class=\"token operator\">=</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2016</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>publishDate__year<span class=\"token operator\">=</span><span class=\"token number\">2017</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                              title__icontains<span class=\"token operator\">=</span><span class=\"token string\">\"python\"</span>  <span class=\"token comment\">#也是and的关系，但是Q必须写在前面</span>\n                             <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"Python","path":"api/categories/Python.json"},{"name":"Django的ORM操作","path":"api/categories/Django的ORM操作.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"Django","path":"api/tags/Django.json"}]}