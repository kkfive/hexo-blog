{"title":"五、Django基于对象的跨表查询","slug":"日常学习/技术相关/Python/五、Django基于对象的跨表查询","date":"2020-01-28T16:00:05.000Z","updated":"2022-02-21T07:18:57.053Z","comments":true,"path":"api/articles/日常学习/技术相关/Python/五、Django基于对象的跨表查询.json","excerpt":null,"covers":["http://tva1.sinaimg.cn/large/832afe33ly1gbb6tc6n2aj20jc0e5wkk.jpg"],"content":"<h1 id=\"六-基于对象的跨表查询\"><a class=\"markdownIt-Anchor\" href=\"#六-基于对象的跨表查询\"></a> 六、基于对象的跨表查询</h1>\n<h2 id=\"正向与反向查询\"><a class=\"markdownIt-Anchor\" href=\"#正向与反向查询\"></a> 正向与反向查询</h2>\n<p>关键在于<code>ForeignKey</code>字段写的位置。例如下面这段代码，</p>\n<p>关系属性(字段)写在哪个类(表)里面,从当前类(表)的数据去查询它关联类(表)的数据叫做正向查询,反之叫做反向查询</p>\n<ol>\n<li>Publish查询Book的内容就是<strong>反向查询</strong></li>\n<li>Book查询Publish的内容就是<strong>正向查询</strong></li>\n</ol>\n<p><img src=\"http://tva1.sinaimg.cn/large/832afe33ly1gbb6tc6n2aj20jc0e5wkk.jpg\" alt=\"5.png\" /></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Publish</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    city<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    email<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>EmailField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#charfield -- asdfasdf</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name\n\n<span class=\"token comment\">#书籍表</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    nid <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span>primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    publishDate<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    price<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#decimal(16,2)</span>\n    publishs<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">\"Publish\"</span><span class=\"token punctuation\">)</span>\n    authors<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">'Author'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>title<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"一对一\"><a class=\"markdownIt-Anchor\" href=\"#一对一\"></a> 一对一</h2>\n<p>正向查询的例子为 已知用户名，查询用户的电话号码。反向查询例子反之。</p>\n<h3 id=\"正向查询\"><a class=\"markdownIt-Anchor\" href=\"#正向查询\"></a> 正向查询</h3>\n<p>正向查询靠对象，取到数据对象后，通过<strong>点</strong>操作符对外键操作，就能拿到外键的对象，从而取到内容</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">author_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> author_obj<span class=\"token punctuation\">.</span>authorDetail<span class=\"token punctuation\">.</span>telephone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"反向查询\"><a class=\"markdownIt-Anchor\" href=\"#反向查询\"></a> 反向查询</h3>\n<p>查到对象后，通过小写的表名来获取另一个表的属性</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">author_detail_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AuthorDetail<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>telephone<span class=\"token operator\">=</span><span class=\"token string\">'213'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> author_detail_obj<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"一对多\"><a class=\"markdownIt-Anchor\" href=\"#一对多\"></a> 一对多</h2>\n<h3 id=\"正向查询-2\"><a class=\"markdownIt-Anchor\" href=\"#正向查询-2\"></a> 正向查询</h3>\n<p>与一对一较为类似</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">book_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'第二本书'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> book_obj<span class=\"token punctuation\">.</span>publishs<span class=\"token punctuation\">.</span>name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"反向查询-2\"><a class=\"markdownIt-Anchor\" href=\"#反向查询-2\"></a> 反向查询</h3>\n<p>注意对象调用的是加<code>_set</code>的方法，然后<code>all()</code>即可取出全部内容</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">publish_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Publish<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"老男人出版社\"</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> publish_obj<span class=\"token punctuation\">.</span>book_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"多对多\"><a class=\"markdownIt-Anchor\" href=\"#多对多\"></a> 多对多</h2>\n<h3 id=\"正向查询-3\"><a class=\"markdownIt-Anchor\" href=\"#正向查询-3\"></a> 正向查询</h3>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">book_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'第一本书'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> book_obj<span class=\"token punctuation\">.</span>authors<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"反向查询-3\"><a class=\"markdownIt-Anchor\" href=\"#反向查询-3\"></a> 反向查询</h3>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">auth_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> auth_obj<span class=\"token punctuation\">.</span>book_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n","more":"<h1 id=\"六-基于对象的跨表查询\"><a class=\"markdownIt-Anchor\" href=\"#六-基于对象的跨表查询\"></a> 六、基于对象的跨表查询</h1>\n<h2 id=\"正向与反向查询\"><a class=\"markdownIt-Anchor\" href=\"#正向与反向查询\"></a> 正向与反向查询</h2>\n<p>关键在于<code>ForeignKey</code>字段写的位置。例如下面这段代码，</p>\n<p>关系属性(字段)写在哪个类(表)里面,从当前类(表)的数据去查询它关联类(表)的数据叫做正向查询,反之叫做反向查询</p>\n<ol>\n<li>Publish查询Book的内容就是<strong>反向查询</strong></li>\n<li>Book查询Publish的内容就是<strong>正向查询</strong></li>\n</ol>\n<p><img src=\"http://tva1.sinaimg.cn/large/832afe33ly1gbb6tc6n2aj20jc0e5wkk.jpg\" alt=\"5.png\" /></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Publish</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    city<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    email<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>EmailField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#charfield -- asdfasdf</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name\n\n<span class=\"token comment\">#书籍表</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    nid <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span>primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    publishDate<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    price<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#decimal(16,2)</span>\n    publishs<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">\"Publish\"</span><span class=\"token punctuation\">)</span>\n    authors<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>to<span class=\"token operator\">=</span><span class=\"token string\">'Author'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>title<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"一对一\"><a class=\"markdownIt-Anchor\" href=\"#一对一\"></a> 一对一</h2>\n<p>正向查询的例子为 已知用户名，查询用户的电话号码。反向查询例子反之。</p>\n<h3 id=\"正向查询\"><a class=\"markdownIt-Anchor\" href=\"#正向查询\"></a> 正向查询</h3>\n<p>正向查询靠对象，取到数据对象后，通过<strong>点</strong>操作符对外键操作，就能拿到外键的对象，从而取到内容</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">author_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> author_obj<span class=\"token punctuation\">.</span>authorDetail<span class=\"token punctuation\">.</span>telephone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"反向查询\"><a class=\"markdownIt-Anchor\" href=\"#反向查询\"></a> 反向查询</h3>\n<p>查到对象后，通过小写的表名来获取另一个表的属性</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">author_detail_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AuthorDetail<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>telephone<span class=\"token operator\">=</span><span class=\"token string\">'213'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> author_detail_obj<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"一对多\"><a class=\"markdownIt-Anchor\" href=\"#一对多\"></a> 一对多</h2>\n<h3 id=\"正向查询-2\"><a class=\"markdownIt-Anchor\" href=\"#正向查询-2\"></a> 正向查询</h3>\n<p>与一对一较为类似</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">book_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'第二本书'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> book_obj<span class=\"token punctuation\">.</span>publishs<span class=\"token punctuation\">.</span>name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"反向查询-2\"><a class=\"markdownIt-Anchor\" href=\"#反向查询-2\"></a> 反向查询</h3>\n<p>注意对象调用的是加<code>_set</code>的方法，然后<code>all()</code>即可取出全部内容</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">publish_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Publish<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"老男人出版社\"</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> publish_obj<span class=\"token punctuation\">.</span>book_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"多对多\"><a class=\"markdownIt-Anchor\" href=\"#多对多\"></a> 多对多</h2>\n<h3 id=\"正向查询-3\"><a class=\"markdownIt-Anchor\" href=\"#正向查询-3\"></a> 正向查询</h3>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">book_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'第一本书'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> book_obj<span class=\"token punctuation\">.</span>authors<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"反向查询-3\"><a class=\"markdownIt-Anchor\" href=\"#反向查询-3\"></a> 反向查询</h3>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">auth_obj <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> auth_obj<span class=\"token punctuation\">.</span>book_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n","categories":[{"name":"Python","path":"api/categories/Python.json"},{"name":"Django的ORM操作","path":"api/categories/Django的ORM操作.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"Django","path":"api/tags/Django.json"}]}