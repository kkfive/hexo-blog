<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的Hexo“自动化”之道</title>
      <link href="/posts/41164f83/"/>
      <url>/posts/41164f83/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>这篇文章一直想咕，直到现在才开始咕咕咕。</p><p>此文只是简单想简单介绍下<a href="https://www.antmoe.com/">我的个人博客</a>为什么最终选择了 Hexo 以及怎么“自动化”部署 Hexo 博客。</p><h2 id="为何选择-hexo"><a class="markdownIt-Anchor" href="#为何选择-hexo"></a> 为何选择 Hexo</h2><p>说到个人博客，业界老大哥<a href="https://wordpress.org/">wordpress</a>和<a href="https://github.com/typecho/typecho">typecho</a>必须要提一下。因为当初选择博客时我自然也尝试了这两款，但是的选择最终选择了 typecho，至于原因其实很简单，只是想要一个 markdown 简单的写作平台。</p><p>成功在学生机上部署 typecho 后为了“花里胡哨”，又入手了<a href="https://www.ihewro.com/archives/489/">handsome</a>主题。于是小康的第一个对外博客就有了：<a href="https://life.antmoe.com/%EF%BC%88%E6%AD%A4%E7%AB%99%E5%8E%9F%E6%95%B0%E6%8D%AE%E5%B7%B2%E4%B8%A2%E5%A4%B1%E3%80%82%EF%BC%89">https://life.antmoe.com/（此站原数据已丢失。）</a></p><p>虽然 typecho 很便捷，但是对我而言，其实并不比 Hexo 便捷多少。首先谈谈我的个人习惯</p><ul><li><strong>习惯本地写作</strong></li><li>markdown，讨厌富文本</li><li>以技术类型博文为主</li><li>几乎没有非公开类型的博文</li></ul><p>综上几点习惯，当初使用 typecho 时发送姿势：本地 typora 写好后复制到 typecho 后台，然后发表。</p><p>而 Hexo 就比较简单了，本地写好后 git 三连即可推送进行自动部署。</p><p>而 markdown 写作感受个人观点：typora yyds。</p><p>至于隐私类博文（想要加密）受职业影响 应该是不会有这种类型的博文的。</p><p>因此为了更好的写作体验，为了不改变习惯 最终选择了 Hexo。</p><h2 id="hexo-的自动化"><a class="markdownIt-Anchor" href="#hexo-的自动化"></a> Hexo 的自动化</h2><p>首先看一张流程图</p><p><img src="https://file.acs.pw/picGo/2022/03/11/20220311225614.png" alt="image-20220311225614551" /></p><ol><li>推送到 Coding 后触发持续集成将代码推送到 GitHub 仓库（源码）</li><li>GitHub 仓库推送代码后触发 Actions，进行构建静态页面</li><li>构建完静态页面后<ul><li>推送产物到<a href="https://github.com/kkfive/kkfive.github.io">GitHub Pages 仓库</a></li><li>清除又拍云回源存储桶并刷新全站缓存</li></ul></li><li>GitHub Pages 收到代码推送后进行<a href="https://github.com/kkfive/kkfive.github.io/actions">Actions</a><ul><li>同步静态页面到 Gitee、Bitbucket、Gitlab 等平台</li><li>进行 Gitee 部署</li><li>将新增/更新文章发送到<a href="https://t.me/kkfiveblog">Telegram 频道</a></li></ul></li></ol><p>以上便是<a href="https://www.antmoe.com">我的博客</a>自动化流程，个人认为完全不输动态博客。</p><p>虽然动态博客可以随时打开网页输入密码进行撰文，但是我个人是不会在手机进行撰文的。</p><p>因此只要撰文则一定使用的是 pc 端，那么对于在外时，下载一个 typora 难度也不大，或者</p><blockquote><p>之所以第一步推送到 Coding 的目的</p><ul><li>首先是受网络影响，直接推送到 GitHub 有时会推送不上</li><li>个人 GitHub 号曾经被封过一次，过渡阶段使用了 Coding。现在为了防止再次被封而导致源码丢失，因此放在国内的 Coding。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端Coder手中的Docker</title>
      <link href="/posts/13d68ef9/"/>
      <url>/posts/13d68ef9/</url>
      
        <content type="html"><![CDATA[<p><img src="https://file.acs.pw/picGo/2021/2/28/aa9db60341e31b3f5df4a8b3480c94d1.png" alt="image-20210228175240489" /></p><h2 id="在服务器中安装docker"><a class="markdownIt-Anchor" href="#在服务器中安装docker"></a> 在服务器中安装Docker</h2><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，CentOS 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 的稳定(stable)版本安装在系统中。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -fsSL get.docker.com -o get-docker.sh<span class="token function">sudo</span> <span class="token function">sh</span> get-docker.sh --mirror Aliyun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装完成后的推荐操作</p><ol><li><p>启动docker</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> docker<span class="token function">sudo</span> systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>创建docker用户组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">groupadd</span> docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将当前用户加入docker组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">usermod</span> -aG docker <span class="token environment constant">$USER</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>测试docker安装是否正确</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="修改镜像"><a class="markdownIt-Anchor" href="#修改镜像"></a> 修改镜像</h2><ol><li><p>登录<a href="https://cr.console.aliyun.com/?spm=5176.12818093.custom--ali--widget-home-product-recent.dre1.1c8316d0Tujp2R">阿里容器镜像服务</a></p></li><li><p>查看加速地址</p><p><img src="https://file.acs.pw/picGo/2021/2/27/4ee8ed340343e6d5b82db27657dfd308.png" alt="image-20210227190110321" /></p></li><li><p>设置加速服务</p><ul><li><p>创建目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /etc/docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建文件并写入内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">'EOF'&#123;  "registry-mirrors": ["https://lz2nib3q.mirror.aliyuncs.com"]&#125;EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>重新加载及重启Docker服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>查看镜像地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="镜像常用命令"><a class="markdownIt-Anchor" href="#镜像常用命令"></a> 镜像常用命令</h2><h3 id="查看本机中所有镜像"><a class="markdownIt-Anchor" href="#查看本机中所有镜像"></a> 查看本机中所有镜像</h3><div class="tabs" id="images1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#images1-1">命令</button></li><li class="tab"><button type="button" data-href="#images1-2">选项</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="images1-1"><p>命令<code>docker images [镜像名]</code>可查看当前镜像。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="images1-2"><ul><li><p><code>-q</code></p><p>只显示镜像id</p></li><li><p><code>-a</code></p><p>列出所有镜像（包含中间映像层）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="搜索镜像"><a class="markdownIt-Anchor" href="#搜索镜像"></a> 搜索镜像</h3><div class="tabs" id="images-search1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#images-search1-1">命令</button></li><li class="tab"><button type="button" data-href="#images-search1-2">选项</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="images-search1-1"><p>命令格式：<code>docker search [options] 镜像名</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="images-search1-2"><ul><li><p><code>-s</code></p><p>列出收藏数不少于指定值的镜像</p></li><li><p><code>--no-trunc</code></p><p>显示完整的镜像信息</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="从仓库下载镜像"><a class="markdownIt-Anchor" href="#从仓库下载镜像"></a> 从仓库下载镜像</h3><div class="tabs" id="images-pull1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#images-pull1-1">命令</button></li><li class="tab"><button type="button" data-href="#images-pull1-2">参数</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="images-pull1-1"><p>命令格式：<code>docker pull 镜像名[:TAG|@DIGEST]</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="images-pull1-2"><p>可以指定TAG或者DIGEST</p><ul><li><p>TAG</p><p>标签名</p></li><li><p>DIGEST</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="删除镜像"><a class="markdownIt-Anchor" href="#删除镜像"></a> 删除镜像</h3><div class="tabs" id="images-rmi1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#images-rmi1-1">命令</button></li><li class="tab"><button type="button" data-href="#images-rmi1-2">选项</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="images-rmi1-1"><p>命令格式：<code>docker rmi 镜像名</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="images-rmi1-2"><p>可以指定TAG或者DIGEST</p><ul><li><p><code>-f</code></p><p>强制删除</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="容器常用命令"><a class="markdownIt-Anchor" href="#容器常用命令"></a> 容器常用命令</h2><h3 id="运行容器"><a class="markdownIt-Anchor" href="#运行容器"></a> 运行容器</h3><div class="tabs" id="docker-run1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#docker-run1-1">命令</button></li><li class="tab"><button type="button" data-href="#docker-run1-2">选项</button></li><li class="tab"><button type="button" data-href="#docker-run1-3">示例</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="docker-run1-1"><p>镜像名新建并启动容器</p><p>命令格式：<code>docker run [选项] 镜像名</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="docker-run1-2"><ul><li><p><code>--name</code></p><p>别名为容器起一个名字</p></li><li><p><code>-d</code></p><p>启动守护式容器（在后台启动容器）</p></li><li><p><code>-p</code></p><p>映射端口号：原始端口号 指定端口号启动</p></li><li><p><code>--network</code></p><p>指定使用的网桥</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="docker-run1-3"><pre class="line-numbers language-none"><code class="language-none">docker run -it --name myTomcat -p 8888:8080 tomcatdocker run -d --name myTomcat -P tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="查看运行的容器"><a class="markdownIt-Anchor" href="#查看运行的容器"></a> 查看运行的容器</h3><div class="tabs" id="docker-ps1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#docker-ps1-1">命令</button></li><li class="tab"><button type="button" data-href="#docker-ps1-2">选项</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="docker-ps1-1"><p>列出所有正在运行的容器，命令格式：<code>docker ps</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="docker-ps1-2"><ul><li><p><code>-a</code></p><p>正在运行的和历史运行过的容器</p></li><li><p><code>-q</code></p><p>静默模式，只显示容器编号</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="停止关闭重启容器"><a class="markdownIt-Anchor" href="#停止关闭重启容器"></a> 停止|关闭|重启容器</h3><ul><li><p>开启容器</p><p><code>docker start 容器名字或者容器id</code></p></li><li><p>重启容器</p><p><code>docker restart 容器名或者容器id</code></p></li><li><p>正常停止容器运行</p><p><code>docker stop 容器名或者容器id</code></p></li><li><p>立即停止容器运行</p><p><code>docker kill 容器名或者容器id</code></p></li></ul><h3 id="删除容器"><a class="markdownIt-Anchor" href="#删除容器"></a> 删除容器</h3><ul><li><p>删除单个容器</p><p><code>docker rm -f 容器id和容器名</code></p></li><li><p>删除所有容器</p><p><code>docker rm -f $(docker ps -aq)</code></p></li></ul><h3 id="查看容器内进程"><a class="markdownIt-Anchor" href="#查看容器内进程"></a> 查看容器内进程</h3><p><code>docker top 容器id或者容器名</code></p><h3 id="查看容器内部细节"><a class="markdownIt-Anchor" href="#查看容器内部细节"></a> 查看容器内部细节</h3><p><code>docker inspect 容器id</code></p><h3 id="查看容器运行日志"><a class="markdownIt-Anchor" href="#查看容器运行日志"></a> 查看容器运行日志</h3><div class="tabs" id="docker-logs1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#docker-logs1-1">命令</button></li><li class="tab"><button type="button" data-href="#docker-logs1-2">选项</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="docker-logs1-1"><p>命令格式：<code>docker logs [OPTIONS] 容器id或容器名</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="docker-logs1-2"><ul><li><p><code>-t</code></p><p>加入时间戳</p></li><li><p><code>-f</code></p><p>跟随最新的日志打印</p></li><li><p><code>--tail</code></p><p>数字显示最后多少条</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="进入容器内部"><a class="markdownIt-Anchor" href="#进入容器内部"></a> 进入容器内部</h3><div class="tabs" id="images-ps1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#images-ps1-1">命令</button></li><li class="tab"><button type="button" data-href="#images-ps1-2">选项</button></li><li class="tab"><button type="button" data-href="#images-ps1-3">示例</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="images-ps1-1"><p>命令格式：<code>docker exec [options] 容器id 容器内命令</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="images-ps1-2"><ul><li><p><code>-i</code></p><p>以交互模式运行容器，通常与-t一起使用</p></li><li><p><code>-t</code></p><p>分配一个伪终端    shell窗口   bash</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="images-ps1-3"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="容器和宿主机之间复制文件"><a class="markdownIt-Anchor" href="#容器和宿主机之间复制文件"></a> 容器和宿主机之间复制文件</h3><ul><li><p>将宿主机复制到容器内部</p><p><code>docker cp 文件|目录 容器id:容器路径</code></p></li><li><p>将容器内资源拷贝到主机上</p><p><code>docker cp 容器id:容器内资源路径 宿主机目录路径</code></p></li></ul><h3 id="数据卷volum实现与宿主机共享目录"><a class="markdownIt-Anchor" href="#数据卷volum实现与宿主机共享目录"></a> 数据卷（volum）实现与宿主机共享目录</h3><p>命令：<code>docker run -v 宿主机的路径|任意别名:/容器内的路径 镜像名</code>，宿主机与容器文件是互通的。</p><p><code>docker run -v 宿主机的路径|任意别名:/容器内的路径:ro 镜像名</code>，容器机不能修改宿主机的文件内容。</p><div class="note danger flat"><ul><li>如果是宿主机路径必须是绝对路径,宿主机目录会覆盖容器内目录内容</li><li>如果是别名则会在docker运行容器时自动在宿主机中创建一个目录,并将容器目录文件复制到宿主机中</li></ul></div><h3 id="打包镜像"><a class="markdownIt-Anchor" href="#打包镜像"></a> 打包镜像</h3><p>命令：<code>docker save 镜像名:tag -o 名称.tar</code></p><h3 id="载入镜像"><a class="markdownIt-Anchor" href="#载入镜像"></a> 载入镜像</h3><p>命令：<code>docker load -i 名称.tar</code></p><h3 id="容器打包成新的镜像"><a class="markdownIt-Anchor" href="#容器打包成新的镜像"></a> 容器打包成新的镜像</h3><p>命令：<code>docker commit -m &quot;描述信息&quot; -a &quot;作者信息&quot; （容器id或者名称）打包的镜像名称:标签</code></p><h2 id="容器间通信"><a class="markdownIt-Anchor" href="#容器间通信"></a> 容器间通信</h2><p>当 Docker 启动时，会自动在主机上创建一个 <code>docker0</code> 虚拟网桥，实际上是 Linux 的一个 bridge，可以理解为一个软件交换机。它会在挂载到它的网口之间进行转发。</p><p>同时，Docker 随机分配一个本地未占用的私有网段（在 <a href="https://tools.ietf.org/html/rfc1918">RFC1918</a> 中定义）中的一个地址给 <code>docker0</code> 接口。比如典型的 <code>172.17.42.1</code>，掩码为 <code>255.255.0.0</code>。此后启动的容器内的网口也会自动分配一个同一网段（<code>172.17.0.0/16</code>）的地址。</p><p>当创建一个 Docker 容器的时候，同时会创建了一对 <code>veth pair</code> 接口（当数据包发送到一个接口时，另外一个接口也可以收到相同的数据包）。这对接口一端在容器内，即 <code>eth0</code>；另一端在本地并被挂载到 <code>docker0</code> 网桥，名称以 <code>veth</code> 开头（例如 <code>vethAQI2QT</code>）。通过这种方式，主机可以跟容器通信，容器之间也可以相互通信。Docker 就创建了在主机和所有容器之间一个虚拟共享网络。</p><p><img src="https://file.acs.pw/picGo/2021/2/28/712de8374224a12e62d7e095803b4d93.png" alt="image-20201125105847896" /></p><h3 id="网桥"><a class="markdownIt-Anchor" href="#网桥"></a> 网桥</h3><ol><li><p>查看默认网桥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker network <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建网桥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker network create name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除网桥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker network <span class="token function">rm</span> name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除没有使用的网桥</p><pre class="line-numbers language-none"><code class="language-none">docker network prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="dockerfile"><a class="markdownIt-Anchor" href="#dockerfile"></a> Dockerfile</h2><p>Dockerfile可以认为是<strong>Docker镜像的描述文件，是由一系列命令和参数构成的脚本</strong>。主要作用是<strong>用来构建docker镜像的构建文件</strong>。</p><p><img src="https://file.acs.pw/picGo/2021/2/28/e4abc84dc8e1f3e59809e40c8eefcda1.png" alt="image-20200404111908085" /></p><p>通过架构图可以看出通过DockerFile可以直接构建镜像</p><p><img src="https://file.acs.pw/picGo/2021/2/28/e4b3efc58f84339e842085b423343229.png" alt="image-20200603181253804" /></p><p>打包字段详情见官方：<a href="https://docs.docker.com/engine/reference/builder/">https://docs.docker.com/engine/reference/builder/</a></p><table><thead><tr><th style="text-align:center">保留字</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center"><strong>FROM</strong></td><td style="text-align:center"><strong>当前镜像是基于哪个镜像的</strong> <code>第一个指令必须是FROM</code></td></tr><tr><td style="text-align:center"><strong>RUN</strong></td><td style="text-align:center"><strong>构建镜像时需要运行的指令</strong></td></tr><tr><td style="text-align:center"><strong>EXPOSE</strong></td><td style="text-align:center"><strong>当前容器对外暴露出的端口号</strong></td></tr><tr><td style="text-align:center"><strong>WORKDIR</strong></td><td style="text-align:center"><strong>指定在创建容器后，终端默认登录进来的工作目录，一个落脚点</strong></td></tr><tr><td style="text-align:center"><strong>ENV</strong></td><td style="text-align:center"><strong>用来在构建镜像过程中设置环境变量</strong></td></tr><tr><td style="text-align:center"><strong>ADD</strong></td><td style="text-align:center"><strong>将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar包</strong></td></tr><tr><td style="text-align:center"><strong>COPY</strong></td><td style="text-align:center"><strong>类似于ADD，拷贝文件和目录到镜像中<br/>将从构建上下文目录中&lt;原路径&gt;的文件/目录复制到新的一层的镜像内的&lt;目标路径&gt;位置</strong></td></tr><tr><td style="text-align:center"><strong>VOLUME</strong></td><td style="text-align:center"><strong>容器数据卷，用于数据保存和持久化工作</strong></td></tr><tr><td style="text-align:center"><strong>CMD</strong></td><td style="text-align:center"><strong>指定一个容器启动时要运行的命令<br/>Dockerfile中可以有多个CMD指令，但只有最后一个生效，CMD会被docker run之后的参数替换</strong></td></tr><tr><td style="text-align:center"><strong>ENTRYPOINT</strong></td><td style="text-align:center"><strong>指定一个容器启动时要运行的命令<br/>ENTRYPOINT的目的和CMD一样，都是在指定容器启动程序及其参数</strong></td></tr></tbody></table><h3 id="from-命令"><a class="markdownIt-Anchor" href="#from-命令"></a> FROM 命令</h3><ul><li><p>基于那个镜像进行构建新的镜像,在构建时会自动从docker hub拉取base镜像 必须作为Dockerfile的第一个指令出现</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM  &lt;image&gt;FROM  &lt;image&gt;[:&lt;tag&gt;]     使用版本不写为latestFROM  &lt;image&gt;[@&lt;digest&gt;]  使用摘要<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="run-命令"><a class="markdownIt-Anchor" href="#run-命令"></a> RUN 命令</h3><ul><li><p>RUN指令将在当前映像之上的新层中执行任何命令并提交结果。生成的提交映像将用于Dockerfile中的下一步</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">RUN &lt;command&gt; (shell form, the command is run in a shell, which by default is &#x2F;bin&#x2F;sh -c on Linux or cmd &#x2F;S &#x2F;C on Windows)RUN echo helloRUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;] (exec form)RUN [&quot;&#x2F;bin&#x2F;bash&quot;, &quot;-c&quot;, &quot;echo hello&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="expose-命令"><a class="markdownIt-Anchor" href="#expose-命令"></a> EXPOSE 命令</h3><ul><li><p>用来指定构建的镜像在运行为容器时对外暴露的端口</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">EXPOSE 80&#x2F;tcp  如果没有显示指定则默认暴露都是tcpEXPOSE 80&#x2F;udp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="cmd-命令"><a class="markdownIt-Anchor" href="#cmd-命令"></a> CMD 命令</h3><ul><li><p>用来为启动的容器指定执行的命令,在Dockerfile中只能有一条CMD指令。如果列出多个命令，则只有最后一个命令才会生效。</p></li><li><p>注意: <strong>Dockerfile中只能有一条CMD指令。如果列出多个命令，则只有最后一个命令才会生效。</strong></p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;] (exec form, this is the preferred form)CMD [&quot;param1&quot;,&quot;param2&quot;] (as default parameters to ENTRYPOINT)CMD command param1 param2 (shell form)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="workdir-命令"><a class="markdownIt-Anchor" href="#workdir-命令"></a> WORKDIR 命令</h3><ul><li><p>用来为Dockerfile中的任何RUN、CMD、ENTRYPOINT、COPY和ADD指令设置工作目录。如果WORKDIR不存在，即使它没有在任何后续Dockerfile指令中使用，它也将被创建。</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">WORKDIR &#x2F;path&#x2F;to&#x2F;workdirWORKDIR &#x2F;aWORKDIR bWORKDIR c&#96;注意:WORKDIR指令可以在Dockerfile中多次使用。如果提供了相对路径，则该路径将与先前WORKDIR指令的路径相对&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="env-命令"><a class="markdownIt-Anchor" href="#env-命令"></a> ENV 命令</h3><ul><li><p>用来为构建镜像设置环境变量。这个值将出现在构建阶段中所有后续指令的环境中。</p></li><li><p>语法：</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">ENV &lt;key&gt; &lt;value&gt;ENV &lt;key&gt;&#x3D;&lt;value&gt; ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="add-命令"><a class="markdownIt-Anchor" href="#add-命令"></a> ADD 命令</h3><ul><li><p>用来从context上下文复制新文件、目录或远程文件url，并将它们添加到位于指定路径的映像文件系统中。</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">ADD hom* &#x2F;mydir&#x2F;       通配符添加多个文件ADD hom?.txt &#x2F;mydir&#x2F;   通配符添加ADD test.txt relativeDir&#x2F;  可以指定相对路径ADD test.txt &#x2F;absoluteDir&#x2F; 也可以指定绝对路径ADD url <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="copy-命令"><a class="markdownIt-Anchor" href="#copy-命令"></a> COPY 命令</h3><ul><li><p>用来将context目录中指定文件复制到镜像的指定目录中</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">COPY src destCOPY [&quot;&lt;src&gt;&quot;,... &quot;&lt;dest&gt;&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="volume-命令"><a class="markdownIt-Anchor" href="#volume-命令"></a> VOLUME 命令</h3><ul><li><p>用来定义容器运行时可以挂在到宿主机的目录</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">VOLUME [&quot;&#x2F;data&quot;]VOLUME &#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="entrypoint命令"><a class="markdownIt-Anchor" href="#entrypoint命令"></a> ENTRYPOINT命令</h3><ul><li><p>用来指定容器启动时执行命令和CMD类似</p></li><li><p>语法:</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">  [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]ENTRYPOINT command param1 param2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ENTRYPOINT指令，往往用于设置容器启动后的<strong>第一个命令</strong>，这对一个容器来说往往是固定的。<br />CMD指令，往往用于设置容器启动的第一个命令的<strong>默认参数</strong>，这对一个容器来说可以是变化的。</p></li></ul><h2 id="docker-compose"><a class="markdownIt-Anchor" href="#docker-compose"></a> docker-compose</h2><h4 id="安装与卸载"><a class="markdownIt-Anchor" href="#安装与卸载"></a> 安装与卸载</h4><h4 id="linux系统"><a class="markdownIt-Anchor" href="#linux系统"></a> Linux系统</h4><p>在 Linux 上的也安装十分简单，从 官方 GitHub Release 处直接下载编译好的二进制文件即可。例如，在 Linux 64 位系统上直接下载对应的二进制包。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">curl</span> -L https://github.com/docker/compose/releases/download/1.25.5/docker-compose-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -s<span class="token variable">`</span></span>-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -m<span class="token variable">`</span></span> <span class="token operator">></span> /usr/local/bin/docker-compose<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="linux手动下载"><a class="markdownIt-Anchor" href="#linux手动下载"></a> Linux手动下载</h4><ol><li><p>进入<a href="https://github.com/docker/compose/releases">GitHub</a>下载</p></li><li><p>将文件上传到服务器（Linux机器）</p></li><li><p>将文件放入<code>/usr/local/bin/</code>目录，并改名为<code>docker-compose</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> docker-compose-Linux-x86_64 /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>为其赋予可执行权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="macos-windows"><a class="markdownIt-Anchor" href="#macos-windows"></a> macos、windows</h4><p>Compose 可以通过 Python 的包管理工具 pip 进行安装，也可以直接下载编译好的二进制文件使用，甚至能够直接在 Docker 容器中运行。<code>Docker Desktop for Mac/Windows 自带 docker-compose 二进制文件，安装 Docker 之后可以直接使用</code>。</p><h4 id="卸载"><a class="markdownIt-Anchor" href="#卸载"></a> 卸载</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">rm</span> /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="文件基本格式"><a class="markdownIt-Anchor" href="#文件基本格式"></a> 文件基本格式</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.2"</span> <span class="token comment"># 官方网址 https://docs.docker.com/compose/compose-file/</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">tomcat01</span><span class="token punctuation">:</span> <span class="token comment">#服务名称（id）</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> tomcat01 <span class="token comment"># 相当于run 的 --name</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> tomcat<span class="token punctuation">:</span>8.0<span class="token punctuation">-</span>jre8 <span class="token comment">#使用哪个镜像  相当于run image</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token comment">#用来完成host与容器的端口映射关系  相当于run -p</span>      <span class="token punctuation">-</span> <span class="token string">"8080:8080"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span> <span class="token comment">#完成宿主机与容器中目录数据卷共享  相当于run -v</span>      <span class="token comment">#- /root/apps:/usr/local/tomcat/webapps #使用自定义路径映射</span>      <span class="token punctuation">-</span> tomcatwebapps01<span class="token punctuation">:</span>/usr/local/tomcat/webapps    <span class="token key atrule">networks</span><span class="token punctuation">:</span> <span class="token comment">#代表当前服务使用哪个网络桥     相当于run --networ</span>      <span class="token punctuation">-</span> hello  <span class="token key atrule">tomcat02</span><span class="token punctuation">:</span> <span class="token comment">#服务名称</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> tomcat02    <span class="token key atrule">image</span><span class="token punctuation">:</span> tomcat<span class="token punctuation">:</span>8.0<span class="token punctuation">-</span>jre8 <span class="token comment">#使用哪个镜像</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token comment">#用来完成host与容器的端口映射关系</span>      <span class="token punctuation">-</span> <span class="token string">"8081:8080"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span> <span class="token comment">#完成宿主机与容器中目录数据卷共享</span>      <span class="token comment">#- /root/apps:/usr/local/tomcat/webapps #使用自定义路径映射</span>      <span class="token punctuation">-</span> tomcatwebapps02<span class="token punctuation">:</span>/usr/local/tomcat/webapps    <span class="token key atrule">networks</span><span class="token punctuation">:</span> <span class="token comment">#代表当前服务使用哪个网络桥</span>      <span class="token punctuation">-</span> hello  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>5.7.32    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"3307:3306"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> mysqldata<span class="token punctuation">:</span>/var/lib/mysql      <span class="token punctuation">-</span> mysqlconf<span class="token punctuation">:</span>/etc/mysql    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MYSQL_ROOT_PASSWORD=root    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> hello  <span class="token key atrule">redis</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> redis<span class="token punctuation">:</span>5.0.10    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> redis    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"6379:6379"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> redisdata<span class="token punctuation">:</span>/data    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> hello    <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token string">"redis-server --appendonly yes"</span> <span class="token comment">#run 镜像之后用来覆盖容器内容默认命令</span><span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token comment">#声明上面服务所使用的自动创建的卷名</span>  <span class="token key atrule">tomcatwebapps01</span><span class="token punctuation">:</span> <span class="token comment">#声明指令的卷名  compose自动创建该卷名但是会在之前加入项目名</span>    <span class="token key atrule">external</span><span class="token punctuation">:</span>    <span class="token comment">#使用自定义卷名</span>      false       <span class="token comment">#true确定使用指定卷名  注意:一旦使用外部自定义卷名启动服务之前必须手动创建</span>  <span class="token key atrule">tomcatwebapps02</span><span class="token punctuation">:</span>  <span class="token key atrule">mysqldata</span><span class="token punctuation">:</span>  <span class="token key atrule">mysqlconf</span><span class="token punctuation">:</span>  <span class="token key atrule">redisdata</span><span class="token punctuation">:</span><span class="token key atrule">networks</span><span class="token punctuation">:</span> <span class="token comment">#定义服务用到桥</span>  <span class="token key atrule">hello</span><span class="token punctuation">:</span> <span class="token comment">#定义上面的服务用到的网桥名称 默认创建就是 bridge</span>    <span class="token key atrule">external</span><span class="token punctuation">:</span>      <span class="token boolean important">true</span>   <span class="token comment">#使用外部指定网桥  注意:网桥必须存在</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h2><p>对于 Compose 来说，大部分命令的对象既可以是项目本身，也可以指定为项目中的服务或者容器。如果没有特别的说明，命令对象将是项目，这意味着项目中所有的服务都会受到命令影响。</p><p>执行 <code>docker-compose [COMMAND] --help</code> 或者 <code>docker-compose help [COMMAND]</code> 可以查看具体某个命令的使用格式。</p><p><code>docker-compose</code> 命令的基本的使用格式是</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker-compose <span class="token punctuation">[</span>-f<span class="token operator">=</span><span class="token operator">&lt;</span>arg<span class="token operator">></span><span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> <span class="token punctuation">[</span>ARGS<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="命令选项"><a class="markdownIt-Anchor" href="#命令选项"></a> 命令选项</h3><div class="tabs" id="options"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#options-1">项目、配置文件</button></li><li class="tab"><button type="button" data-href="#options-2">网络特性</button></li><li class="tab"><button type="button" data-href="#options-3">日志输出</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="options-1"><ul><li><p><code>-f, --file FILE</code></p><p>指定使用的 Compose 模板文件，默认为 <code>docker-compose.yml</code>，可以多次指定。</p></li><li><p><code>-p, --project-name NAME</code></p><p>指定项目名称，默认将使用所在目录名称作为项目名。</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="options-2"><ul><li><p><code>--x-networking</code></p><p>使用 Docker 的可拔插网络后端特性</p></li><li><p><code>--x-network-driver DRIVER</code></p><p>指定网络后端的驱动，默认为 <code>bridge</code></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="options-3"><ul><li><p><code>--verbose</code></p><p>输出更多调试信息。</p></li><li><p><code>-v, --version</code></p><p>打印版本并退出。</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="命令使用说明"><a class="markdownIt-Anchor" href="#命令使用说明"></a> 命令使用说明</h3><h3 id="up"><a class="markdownIt-Anchor" href="#up"></a> up</h3><p>格式为 <code>docker-compose up [options] [SERVICE...]</code>。</p><p>该命令十分强大，它将尝试自动完成包括构建镜像，（重新）创建服务，启动服务，并关联服务相关容器的一系列操作。链接的服务都将会被自动启动，除非已经处于运行状态。可以说，大部分时候都可以直接通过该命令来启动一个项目。</p><blockquote><p>默认情况，<code>docker-compose up</code> 启动的容器都在前台，控制台将会同时打印所有容器的输出信息，可以很方便进行调试。当通过 <code>Ctrl-C</code> 停止命令时，所有容器将会停止。</p><p><em>默认情况，如果服务容器已经存在，<code>docker-compose up</code> 将会尝试停止容器，然后重新创建（保持使用 <code>volumes-from</code> 挂载的卷），以保证新启动的服务匹配 <code>docker-compose.yml</code> 文件的最新内容</em></p><p>如果使用 <code>docker-compose up -d</code>，将会在后台启动并运行所有的容器。一般推荐生产环境下使用该选项。</p></blockquote><h3 id="down"><a class="markdownIt-Anchor" href="#down"></a> down</h3><p>此命令将会停止 <code>up</code> 命令所启动的容器，并移除网络</p><h3 id="exec"><a class="markdownIt-Anchor" href="#exec"></a> exec</h3><p>进入指定的容器。</p><h3 id="ps"><a class="markdownIt-Anchor" href="#ps"></a> ps</h3><p>格式为 <code>docker-compose ps [options] [SERVICE...]</code>。</p><p>列出项目中目前的所有容器。<code>-q</code>可以只打印容器的id信息</p><h3 id="restart"><a class="markdownIt-Anchor" href="#restart"></a> restart</h3><p>格式为 <code>docker-compose restart [options] [SERVICE...]</code>。</p><p>重启项目中的服务。</p><p>选项：</p><ul><li><code>-t, --timeout TIMEOUT</code> 指定重启前停止容器的超时（默认为 10 秒）。</li></ul><h3 id="rm"><a class="markdownIt-Anchor" href="#rm"></a> rm</h3><p>格式为 <code>docker-compose rm [options] [SERVICE...]</code>。</p><p>删除所有（停止状态的）服务容器。推荐先执行 <code>docker-compose stop</code> 命令来停止容器。</p><p>选项：</p><ul><li><code>-f, --force</code> 强制直接删除，包括非停止状态的容器。一般尽量不要使用该选项。</li><li><code>-v</code> 删除容器所挂载的数据卷。</li></ul><h3 id="start"><a class="markdownIt-Anchor" href="#start"></a> start</h3><p>格式为 <code>docker-compose start [SERVICE...]</code>。</p><p>启动已经存在的服务容器。</p><h3 id="stop"><a class="markdownIt-Anchor" href="#stop"></a> stop</h3><p>格式为 <code>docker-compose stop [options] [SERVICE...]</code>。</p><p>停止已经处于运行状态的容器，但不删除它。通过 <code>docker-compose start</code> 可以再次启动这些容器。</p><p>选项：</p><ul><li><code>-t, --timeout TIMEOUT</code> 停止容器时候的超时（默认为 10 秒）。</li></ul><h3 id="top"><a class="markdownIt-Anchor" href="#top"></a> top</h3><p>查看各个服务容器内运行的进程。</p><h3 id="pause"><a class="markdownIt-Anchor" href="#pause"></a> pause</h3><p>格式为 <code>docker-compose pause [SERVICE...]</code>。</p><p>暂停服务</p><h3 id="unpause"><a class="markdownIt-Anchor" href="#unpause"></a> unpause</h3><p>格式为 <code>docker-compose unpause [SERVICE...]</code>。</p><p>恢复处于暂停状态中的服务。</p>]]></content>
      
      
      <categories>
          
          <category> 部署与构建 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向Coding的Git</title>
      <link href="/posts/f59ea689/"/>
      <url>/posts/f59ea689/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><p>此篇文章记录在日常 coding 的操作以及一些必要的 git 概念</p><h2 id="git的初始化设置"><a class="markdownIt-Anchor" href="#git的初始化设置"></a> git的初始化设置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"Your Name"</span><span class="token function">git</span> config --global user.email <span class="token string">"email@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>config的三个作用域,缺省等同于<code>local</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --local <span class="token comment">## local只对某个仓库有效</span><span class="token function">git</span> config --global <span class="token comment">## global对当前用户所有仓库有效</span><span class="token function">git</span> config --system <span class="token comment">## system对系统所有登录的用户有效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>显示config的配置，加<code>--list</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --list --local <span class="token comment">## local只对某个仓库有效</span><span class="token function">git</span> config --list --global <span class="token comment">## global对当前用户所有仓库有效</span><span class="token function">git</span> config --list --system <span class="token comment">## system对系统所有登录的用户有效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="查看提交记录"><a class="markdownIt-Anchor" href="#查看提交记录"></a> 查看提交记录</h2><div class="tabs" id="git-log"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-log-1">只看变更列表</button></li><li class="tab"><button type="button" data-href="#git-log-2">只看最近N次</button></li><li class="tab"><button type="button" data-href="#git-log-3">只看当前分支历史</button></li><li class="tab"><button type="button" data-href="#git-log-4">全部分支历史</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-log-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --oneline<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305220144.png" alt="image-20220305220137649" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-log-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log -n2 --oneline <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>n2表示所有分支最近两个。</p></blockquote><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305220229.png" alt="image-20220305220229829" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-log-3"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305220412.png" alt="image-20220305220412495" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-log-4"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="提交记录"><a class="markdownIt-Anchor" href="#提交记录"></a> 提交记录</h2><h3 id="修改commit的message"><a class="markdownIt-Anchor" href="#修改commit的message"></a> 修改commit的message</h3><p><strong>此操作不建议对已发布到线上的commit做修改。</strong></p><div class="tabs" id="git-commit-message"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-commit-message-1">修改最新的commit</button></li><li class="tab"><button type="button" data-href="#git-commit-message-2">修改老旧commit</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-commit-message-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit --amend<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305222413.png" alt="image-20220305222413228" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-commit-message-2"><blockquote><p>修改老旧commit的message,需要使用其上一个commitId。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reabase -i commitId<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305222826.png" alt="image-20220305222826712" /></p><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305223007.png" alt="image-20220305223007339" /></p><p>在新窗口中重新编辑commit信息即可。</p><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305223056.png" alt="image-20220305223056685" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="将多个commit整理成一个commit"><a class="markdownIt-Anchor" href="#将多个commit整理成一个commit"></a> 将多个commit整理成一个commit</h3><div class="tabs" id="git-commit-rebase"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-commit-rebase-1">合并连续的commit</button></li><li class="tab"><button type="button" data-href="#git-commit-rebase-2">合并非连续的commit</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-commit-rebase-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> rebase -i commit的父哈希值<span class="token comment"># 然后将需要合并的改为s。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305223844.png" alt="image-20220305223844839" /></p><p>将除第一个外需要合并的修改为<code>s</code>即可进行编辑信息。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-commit-rebase-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> rebase -i commit的父哈希值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入编辑页面后，将需要合并的写在一起。如果没有自动出现则手动键入即可。需要删除的使用<code>s</code>命令，保留的使用<code>pick</code>。</p><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305224945.png" alt="image-20220305224945894" /></p><p><img src="https://file.acs.pw/picGo/2022/03/05/20220305225107.png" alt="image-20220305225107076" /></p><p>接下来编辑commit信息即可。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><ul><li>pick：保留该commit（缩写:p）</li><li>reword：保留该commit，但我需要修改该commit的注释（缩写:r）</li><li>edit：保留该commit, 但我要停下来修改该提交(不仅仅修改注释)（缩写:e）</li><li>squash：将该commit和前一个commit合并（缩写:s）</li><li>fixup：将该commit和前一个commit合并，但我不要保留该提交的注释信息（缩写:f）</li><li>exec：执行shell命令（缩写:x）</li><li>drop：我要丢弃该commit（缩写:d）</li></ul></blockquote><h2 id="操作暂存区和工作区"><a class="markdownIt-Anchor" href="#操作暂存区和工作区"></a> 操作暂存区和工作区</h2><h3 id="恢复文件变更"><a class="markdownIt-Anchor" href="#恢复文件变更"></a> 恢复文件变更</h3><ol><li>编辑了某文件，但想放弃修改，恢复至与暂存区一致</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="恢复暂存区"><a class="markdownIt-Anchor" href="#恢复暂存区"></a> 恢复暂存区</h3><div class="tabs" id="git-reset"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-reset-1">整个暂存区</button></li><li class="tab"><button type="button" data-href="#git-reset-2">部分文件</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-reset-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset HEAD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-reset-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset HEAD -- fileName1 fileName2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分支操作"><a class="markdownIt-Anchor" href="#分支操作"></a> 分支操作</h2><h3 id="查看分支"><a class="markdownIt-Anchor" href="#查看分支"></a> 查看分支</h3><div class="tabs" id="git-branch-list"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-branch-list-1">所有本地分支</button></li><li class="tab"><button type="button" data-href="#git-branch-list-2">远程所有分支</button></li><li class="tab"><button type="button" data-href="#git-branch-list-3">本地与远程分支</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-branch-list-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-list-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-list-3"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="新建分支"><a class="markdownIt-Anchor" href="#新建分支"></a> 新建分支</h3><div class="tabs" id="git-branch-new"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-branch-new-1">新建不切换</button></li><li class="tab"><button type="button" data-href="#git-branch-new-2">新建并切换</button></li><li class="tab"><button type="button" data-href="#git-branch-new-3">指定commit创建</button></li><li class="tab"><button type="button" data-href="#git-branch-new-4">新建一个指向tag的分支</button></li><li class="tab"><button type="button" data-href="#git-branch-new-5">指定的远程分支建立追踪关系</button></li><li class="tab"><button type="button" data-href="#git-branch-new-6">指定的远程分支建立追踪关系</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-branch-new-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-new-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-new-3"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-new-4"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-new-5"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch --track <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-branch-new-6"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch --track <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="切换分支"><a class="markdownIt-Anchor" href="#切换分支"></a> 切换分支</h3><div class="tabs" id="git-checkout"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-checkout-1">切换到指定分支，并更新工作区</button></li><li class="tab"><button type="button" data-href="#git-checkout-2">切换到上一个分支</button></li><li class="tab"><button type="button" data-href="#git-checkout-3">指定commit创建</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-checkout-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-checkout-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-checkout-3"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="代码合并"><a class="markdownIt-Anchor" href="#代码合并"></a> 代码合并</h2><h3 id="选择几个commit"><a class="markdownIt-Anchor" href="#选择几个commit"></a> 选择几个commit</h3><blockquote><p>此操作建议将最底层开始选择,例如：<code>git cherry-pick A B</code>，其中A的提交必须早于B的提交。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick <span class="token operator">&lt;</span>commitHash<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>转移连续的提交A到B，并且包含A</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick A^<span class="token punctuation">..</span>B <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="merge合并"><a class="markdownIt-Anchor" href="#merge合并"></a> merge合并</h3><blockquote><p>此合并方式会生成一个新的commit信息</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> merge <span class="token operator">&lt;</span>branchName<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="标签"><a class="markdownIt-Anchor" href="#标签"></a> 标签</h2><h3 id="查看tag"><a class="markdownIt-Anchor" href="#查看tag"></a> 查看tag</h3><div class="tabs" id="git-tag-show"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-tag-show-1">所有tag</button></li><li class="tab"><button type="button" data-href="#git-tag-show-2">查看tag信息</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-tag-show-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-tag-show-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> show <span class="token operator">&lt;</span>tagName<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="新建tag"><a class="markdownIt-Anchor" href="#新建tag"></a> 新建tag</h3><div class="tabs" id="git-tag-create"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-tag-create-1">在当前commit新建</button></li><li class="tab"><button type="button" data-href="#git-tag-create-2">指定commit新建</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-tag-create-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag <span class="token operator">&lt;</span>tagName<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-tag-create-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag <span class="token operator">&lt;</span>tagName<span class="token operator">></span> <span class="token operator">&lt;</span>commitId<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="删除tag"><a class="markdownIt-Anchor" href="#删除tag"></a> 删除tag</h3><div class="tabs" id="git-tag-delete"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-tag-delete-1">删除本地tag</button></li><li class="tab"><button type="button" data-href="#git-tag-delete-2">删除远程tag</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-tag-delete-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag -d <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-tag-delete-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin :refs/tags/<span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="提交tag"><a class="markdownIt-Anchor" href="#提交tag"></a> 提交tag</h3><div class="tabs" id="git-tag-push"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git-tag-push-1">提交所有tag</button></li><li class="tab"><button type="button" data-href="#git-tag-push-2">提交指定tag</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git-tag-push-1"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> --tags<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git-tag-push-2"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="常见场景"><a class="markdownIt-Anchor" href="#常见场景"></a> 常见场景</h2><h3 id="开发中临时加塞了紧急任务"><a class="markdownIt-Anchor" href="#开发中临时加塞了紧急任务"></a> 开发中临时加塞了紧急任务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将当前状态暂存起来</span><span class="token function">git</span> stash<span class="token comment"># 将之前的暂存信息弹出来，并会保存暂存队列</span><span class="token function">git</span> stash apply<span class="token comment"># 将之前的暂存信息弹出来，不保存暂存队列</span><span class="token function">git</span> stash pop<span class="token comment"># 查看暂存队列</span><span class="token function">git</span> stash list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常用命令脑图"><a class="markdownIt-Anchor" href="#常用命令脑图"></a> 常用命令脑图</h2><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306185004.svg" alt="git" /></p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识vue3之单文件组件script setup</title>
      <link href="/posts/a6b120db/"/>
      <url>/posts/a6b120db/</url>
      
        <content type="html"><![CDATA[<h2 id="关于此分类"><a class="markdownIt-Anchor" href="#关于此分类"></a> 关于此分类</h2><p>关于<a href="/categories/Vue/%E5%88%9D%E8%AF%86Vue3/">初识 vue3</a>分类主要是记录一些通过 vue3 进行的实践与学习记录。</p><blockquote><p>此文主要记录关于 vue3 script setup的尝试。</p></blockquote><p><strong><a href="/posts/a6b120db/">本文</a>会随着<a href="https://xiaokang.me/">作者</a>日常使用进行补充及内容修正</strong></p><p>本文参考于：</p><ul><li><a href="https://v3.cn.vuejs.org/api/sfc-script-setup.html#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95">单文件组件<code>&lt;script setup&gt;</code></a></li></ul><h2 id="默认自动暴露"><a class="markdownIt-Anchor" href="#默认自动暴露"></a> 默认自动暴露</h2><p><code>&lt;script setup&gt;</code> 是在单文件组件 (SFC) 中使用<strong>组合式API</strong>的编译时语法糖。相比于普通的<code>&lt;script&gt;</code>语法，它具有更多优势：</p><ul><li>更少的样板内容，更简洁的代码。</li><li>能够使用纯 Typescript 声明 props 和抛出事件。</li><li>更好的运行时性能 (其模板会被编译成与其同一作用域的渲染函数，没有任何的中间代理)。</li><li>更好的 IDE 类型推断性能 (减少语言服务器从代码中抽离类型的工作)。</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>当前msg的值：&#123;&#123; msg &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>当前msg的值(ref的值会被自动解包)：&#123;&#123; msgRef &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">// 1. 顶层的绑定会暴露给模板</span><span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">'这是一条msg'</span><span class="token keyword">const</span> msgRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样的导入组件也可以直接使用</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">'./MyComponent.vue'</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="动态组件"><a class="markdownIt-Anchor" href="#动态组件"></a> 动态组件</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">'./Foo.vue'</span><span class="token keyword">import</span> Bar <span class="token keyword">from</span> <span class="token string">'./Bar.vue'</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>someCondition ? Foo : Bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义指令"><a class="markdownIt-Anchor" href="#自定义指令"></a> 自定义指令</h2><p>但这里有一个需要注意的限制：必须以 <code>vNameOfDirective</code> 的形式来命名本地自定义指令，以使得它们可以直接在模板中使用。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> vMyDirective <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">beforeMount</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> value<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// value 即传入的参数值</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-my-directive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="defineprops-defineemits-defineexpose"><a class="markdownIt-Anchor" href="#defineprops-defineemits-defineexpose"></a> defineProps、defineEmits、defineExpose</h2><p><code>defineProps</code>和<code>defineEmits</code>分别用于定义当前组件需要接收的参数和需要触发的emit。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  foo<span class="token operator">:</span> String<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'change'</span><span class="token punctuation">,</span> <span class="token string">'delete'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在JavaScript中上述定义即可，但在typescript中可以为其增加类型。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineProps</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">&#123;</span>  foo<span class="token operator">:</span> <span class="token builtin">string</span>  bar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">&#125;</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineEmits</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">&#123;</span>  <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token string">'change'</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>  <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token string">'update'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">&#125;</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>类型声明时的默认值</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineProps</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">&#123;</span>  foo<span class="token operator">:</span> <span class="token builtin">string</span>  bar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">&#125;</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineEmits</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">&#123;</span>  <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token string">'change'</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>  <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token string">'update'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">&#125;</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>defineExpose用于定义暴露出去的属性，此模式下默认是全暴露</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;script setup&gt;import &#123; ref &#125; from &#39;vue&#39;const a &#x3D; 1const b &#x3D; ref(2)defineExpose(&#123;  a,  b&#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 <code>&lt;script setup&gt;</code> 的组件是<strong>默认关闭</strong>的，也即通过模板 ref 或者 <code>$parent</code> 链获取到的组件的公开实例，不会暴露任何在 <code>&lt;script setup&gt;</code> 中声明的绑定。</p><p>为了在 <code>&lt;script setup&gt;</code> 组件中明确要暴露出去的属性，使用 <code>defineExpose</code> 编译器宏</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;test&lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script setup&gt;const a &#x3D; 1defineExpose(&#123;  a: 1&#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在父组件中使用</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;testAVue ref&#x3D;&quot;testRef&quot; &#x2F;&gt;&lt;&#x2F;template&gt;&lt;script setup lang&#x3D;&quot;ts&quot;&gt;import testAVue from &#39;.&#x2F;test-a.vue&#39;import &#123; onMounted, ref &#125; from &#39;vue&#39;const testRef &#x3D; ref(null)onMounted(() &#x3D;&gt; &#123;  console.log(testRef.value) &#x2F;&#x2F; Proxy &#123;a: 1, __v_skip: true&#125;&#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="与普通的script使用"><a class="markdownIt-Anchor" href="#与普通的script使用"></a> 与普通的<code>&lt;script&gt;</code>使用</h2><p><code>&lt;script setup&gt;</code> 可以和普通的 <code>&lt;script&gt;</code> 一起使用。普通的 <code>&lt;script&gt;</code> 在有这些需要的情况下或许会被使用到：</p><ul><li>无法在 <code>&lt;script setup&gt;</code> 声明的选项，例如 <code>inheritAttrs</code> 或通过插件启用的自定义的选项。</li><li>声明命名导出。</li><li>运行副作用或者创建只需要执行一次的对象。</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;script&gt;    &#x2F;&#x2F; 普通 &lt;script&gt;, 在模块范围下执行(只执行一次)    runSideEffectOnce()    &#x2F;&#x2F; 声明额外的选项    export default &#123;        inheritAttrs: false,        customOptions: &#123;&#125;    &#125;&lt;&#x2F;script&gt;&lt;script setup&gt;    &#x2F;&#x2F; 在 setup() 作用域中执行 (对每个实例皆如此)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单文件组件 </tag>
            
            <tag> script setup </tag>
            
            <tag> 初识Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识vue3之响应式数据</title>
      <link href="/posts/b3e1c29f/"/>
      <url>/posts/b3e1c29f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="//at.alicdn.com/t/font_2970550_p76lkpuldlo.css"><h2 id="关于此分类"><a class="markdownIt-Anchor" href="#关于此分类"></a> 关于此分类</h2><p>关于<a href="/categories/Vue/%E5%88%9D%E8%AF%86Vue3/">初识 vue3</a>分类主要是记录一些通过 vue3 进行的实践与学习记录。</p><blockquote><p>此文主要记录关于 vue3 响应式数据的尝试。</p></blockquote><p><strong><a href="/posts/b3e1c29f/">本文</a>会随着<a href="https://xiaokang.me/">作者</a>日常使用进行补充及内容修正</strong></p><h2 id="refs"><a class="markdownIt-Anchor" href="#refs"></a> refs</h2><h3 id="类型声明"><a class="markdownIt-Anchor" href="#类型声明"></a> 类型声明</h3><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> Ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 声明类型 字符串</span>    <span class="token keyword">const</span> stringVal <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>    <span class="token comment">// 声明类型 数字</span>    <span class="token keyword">const</span> numberVal <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment">// 声明类型 泛型</span>    <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>State <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>initial<span class="token operator">:</span> State<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>initial<span class="token punctuation">)</span> <span class="token keyword">as</span> Ref<span class="token operator">&lt;</span>State<span class="token operator">></span> <span class="token comment">// state.value -> State extends string</span>      <span class="token keyword">return</span> state    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> stringVal<span class="token punctuation">,</span> numberVal<span class="token punctuation">,</span> useState <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="unref"><a class="markdownIt-Anchor" href="#unref"></a> unref</h3><p>如果参数是一个 <a href="https://v3.cn.vuejs.org/api/refs-api.html#ref"><code>ref</code></a>，则返回内部值，否则返回参数本身。这是 <code>val = isRef(val) ? val.value : val</code> 的语法糖函数。</p><h3 id="toref-torefs"><a class="markdownIt-Anchor" href="#toref-torefs"></a> toRef、toRefs</h3><table><thead><tr><th style="text-align:center">API</th><th style="text-align:center">作用简述</th><th style="text-align:center">使用简述</th></tr></thead><tbody><tr><td style="text-align:center"><code>toRef</code></td><td style="text-align:center">用于创建源响应式对象上某个属性的响应式变量<br />此变量可以被传递并保持响应式链接</td><td style="text-align:center">用于将响应式对象某个属性传递给子组件并且不丢失响应式链接</td></tr><tr><td style="text-align:center"><code>toRefs</code></td><td style="text-align:center">将响应式对象转换为普通对象（值是响应式的）</td><td style="text-align:center">用于复合函数返回响应式对象，父组件解构/展开</td></tr></tbody></table><h4 id="toref"><a class="markdownIt-Anchor" href="#toref"></a> toRef</h4><blockquote><p>可以用来为源响应式对象上的某个 property 新创建一个 <a href="https://v3.cn.vuejs.org/api/refs-api.html#ref"><code>ref</code></a>。然后，ref 可以被传递，它会保持对其源 property 的响应式连接。</p></blockquote><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">// toRef</span><span class="token keyword">const</span> refReactive <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  b<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 创建ref引用</span><span class="token keyword">const</span> refA <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>refReactive<span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span><span class="token function">useTest</span><span class="token punctuation">(</span>refA<span class="token punctuation">)</span> <span class="token comment">// useTest中修改传入的参数</span><span class="token comment">// 会导致refReactive.a的值也会响应式修改为100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>useTest</code>中</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useTest</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  a<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">100</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> a <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此，当需要向复合函数传递一个响应式对象的值时可以使用<code>toRef</code>将一个响应式对象某个值转为<code>ref</code>引用。</p><h4 id="torefs"><a class="markdownIt-Anchor" href="#torefs"></a> toRefs</h4><blockquote><p>将响应式对象转换为普通对象，其中结果对象的每个 property 都是指向原始对象相应 property 的 <a href="https://v3.cn.vuejs.org/api/refs-api.html#ref"><code>ref</code></a>。</p></blockquote><p><code>useTest</code>中</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> toRefs <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useTest</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">></span><span class="token punctuation">,</span> b<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  a<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">100</span>  b<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">200</span>  <span class="token keyword">const</span> testReactive <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">'小康'</span><span class="token punctuation">,</span>    website<span class="token operator">:</span> <span class="token string">'https://baidu.com'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 暴露的响应式对象使用toRefs包装</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> testReactive<span class="token operator">:</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>testReactive<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>父组件中</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> testReactive <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useTest</span><span class="token punctuation">(</span>refA<span class="token punctuation">,</span> numberVal<span class="token punctuation">)</span> <span class="token comment">// useTest中修改传入的参数</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  testReactive<span class="token punctuation">.</span>name<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'父组件修改'</span>  <span class="token comment">// testReactive.name会被响应式修改</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="customref"><a class="markdownIt-Anchor" href="#customref"></a> customRef</h3><p>创建一个自定义的 ref，并对其依赖项跟踪和更新触发进行显式控制。它需要一个工厂函数，该函数接收 <code>track</code> 和 <code>trigger</code> 函数作为参数，并且应该返回一个带有 <code>get</code> 和 <code>set</code> 的对象。</p><p>使用官网的一个小 Demo</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">function</span> <span class="token function">useDebouncedRef</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> delay <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> timeout  <span class="token keyword">return</span> <span class="token function">customRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>track<span class="token punctuation">,</span> trigger<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 追踪</span>        <span class="token function">track</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> value      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>        timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          value <span class="token operator">=</span> newValue          <span class="token comment">// 触发视图更新</span>          <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">useDebouncedRef</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>虽然看到网上有各种各样在此函数中发送 Ajax 请求，但我个人认为，发送 Ajax 获取数据使用 Hooks 更合适。</p></blockquote><p>类型声明</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">customRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>factory<span class="token operator">:</span> CustomRefFactory<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token keyword">type</span> <span class="token class-name">CustomRefFactory<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>  <span class="token function-variable function">track</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">,</span>  <span class="token function-variable function">trigger</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span>  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="computed-与-watch"><a class="markdownIt-Anchor" href="#computed-与-watch"></a> Computed 与 Watch</h2><h3 id="computed"><a class="markdownIt-Anchor" href="#computed"></a> computed</h3><p>接受一个 getter 函数，并根据 getter 的返回值返回一个不可变的响应式 <a href="https://v3.cn.vuejs.org/api/refs-api.html#ref">ref</a> 对象。或者，接受一个具有 <code>get</code> 和 <code>set</code> 函数的对象，用来创建可写的 ref 对象。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> newVal <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 返回val加10的结果</span>  <span class="token keyword">return</span> val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> newVal1 <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取值</span>    <span class="token keyword">return</span> val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">10</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 设置值</span>    val<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>3.2 中该函数在<strong>开发模式</strong>下可传入第二个参数用于调试。</p></blockquote><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> plusOne <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function">onTrack</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 当 count.value 作为依赖被追踪时触发</span>    <span class="token keyword">debugger</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onTrigger</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 当 count.value 被修改时触发</span>    <span class="token keyword">debugger</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 访问 plusOne，应该触发 onTrack</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plusOne<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment">// 修改 count.value，应该触发 onTrigger</span>count<span class="token punctuation">.</span>value<span class="token operator">++</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>类型声明</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">// 只读的</span><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">computed</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>  <span class="token function-variable function">getter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span><span class="token punctuation">,</span>  debuggerOptions<span class="token operator">?</span><span class="token operator">:</span> DebuggerOptions<span class="token punctuation">)</span><span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>Ref<span class="token operator">&lt;</span>Readonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">>>></span><span class="token comment">// 可写的</span><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">computed</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>  options<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span>    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  debuggerOptions<span class="token operator">?</span><span class="token operator">:</span> DebuggerOptions<span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token keyword">interface</span> <span class="token class-name">DebuggerOptions</span> <span class="token punctuation">&#123;</span>  onTrack<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> DebuggerEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span>  onTrigger<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> DebuggerEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">&#125;</span><span class="token keyword">interface</span> <span class="token class-name">DebuggerEvent</span> <span class="token punctuation">&#123;</span>  effect<span class="token operator">:</span> ReactiveEffect  target<span class="token operator">:</span> <span class="token builtin">any</span>  <span class="token keyword">type</span><span class="token operator">:</span> OperationTypes  key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="watch"><a class="markdownIt-Anchor" href="#watch"></a> watch</h3><p><code>watch</code> API 与选项式 API <a href="https://v3.cn.vuejs.org/api/instance-methods.html#watch">this.$watch</a> (以及相应的 <a href="https://v3.cn.vuejs.org/api/options-data.html#watch">watch</a> 选项) 完全等效。<code>watch</code> 需要侦听特定的数据源，并在单独的回调函数中执行副作用。默认情况下，它也是惰性的——即回调仅在侦听源发生变化时被调用。</p><div class="tabs" id="watch"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#watch-1">单一源</button></li><li class="tab"><button type="button" data-href="#watch-2">多个源</button></li><li class="tab"><button type="button" data-href="#watch-3">侦听响应式对象</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="watch-1"><p>侦听器数据源可以是一个具有返回值的<code>getter</code>函数，也可以直接是一个<code>ref</code></p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">// 侦听一个 getter</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>  <span class="token punctuation">(</span>count<span class="token punctuation">,</span> prevCount<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* ... */</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 直接侦听一个 ref</span><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token punctuation">(</span>count<span class="token punctuation">,</span> prevCount<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* ... */</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="watch-2"><p>侦听器还可以使用数组以同时侦听多个源</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span>fooRef<span class="token punctuation">,</span> barRef<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>prevFoo<span class="token punctuation">,</span> prevBar<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* ... */</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>如果在同一个函数里同时改变这些被侦听的来源，侦听器仍只会执行一次</strong></p></blockquote><p>如果需要监听多个源时每一次更新都响应式变化，那么建议使用<code>nextTick</code>等等监听器再一次步改变之前运行。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> <span class="token function-variable function">changeValues</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  firstName<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'John'</span> <span class="token comment">// 打印 ["John", ""] ["", ""]</span>  <span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  lastName<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'Smith'</span> <span class="token comment">// 打印 ["John", "Smith"] ["John", ""]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="watch-3"><ol><li><p>监听响应式对象或数组变化前与变化后的值，则需要监听由值构成的副本。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token operator">...</span>numbers<span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>val<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> <span class="token string">'numbers'</span><span class="token punctuation">)</span>    <span class="token comment">// logs: [1,2,3,4,5] [1,2,3,4]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>尝试检查深度嵌套对象或数组中(<strong>非响应式对象</strong>)的 property 变化时，仍然需要 <code>deep</code> 选项设置为 true。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> member <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  attr<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">'小康'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> member<span class="token punctuation">,</span>  <span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'not deep'</span><span class="token punctuation">,</span> newVal<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">,</span> val<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> member<span class="token punctuation">,</span>  <span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'deep'</span><span class="token punctuation">,</span> newVal<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">,</span> val<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    deep<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>member<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'new小康'</span> <span class="token comment">// deep new小康 new小康</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>侦听一个响应式对象或数组将始终返回该对象的当前值和上一个状态值的引用。为了完全侦听深度嵌套的对象和数组，可能需要对值进行深拷贝。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">'lodash'</span><span class="token keyword">const</span> member <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  attr<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">'小康'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'not deep'</span><span class="token punctuation">,</span> newVal<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">,</span> val<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>member<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'new小康'</span> <span class="token comment">// deep new小康 小康</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="watcheffect"><a class="markdownIt-Anchor" href="#watcheffect"></a> watchEffect</h3><p>立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。(根据响应式状态<em>自动应用</em>和<em>重新应用</em>副作用)</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// -> logs 0</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  count<span class="token punctuation">.</span>value<span class="token operator">++</span>  <span class="token comment">// -> logs 1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="provide-inject"><a class="markdownIt-Anchor" href="#provide-inject"></a> Provide / Inject</h2><p>当子组件层级过深时仍需要外层组件传递数据，那么可以使用<code>Provide / Inject</code>，但默认情况下，此 API 并不是响应式的，如果需要响应式则需要在<code>provide</code>时使用<code>ref</code>或者<code>reactive</code>进行包装。</p><p>父组件</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> provide <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> userName <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token string">'小康'</span><span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  userName<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'XiaoKang'</span>  <span class="token comment">// 2秒后视图更新为 XiaoKang</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment">// 向子组件提供一个名为 name 值为 userName 数据</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> userName<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子组件</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> inject<span class="token punctuation">,</span> Ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">// 获取父组件提供的名为 name 的值并赋值给userName变量</span><span class="token keyword">const</span> userName <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Ref<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改值"><a class="markdownIt-Anchor" href="#修改值"></a> 修改值</h3><p>当使用响应式 provide / inject 值时，<strong>建议尽可能将对响应式 property 的所有修改限制在<em>定义 provide 的组件</em>内部</strong>。</p><p>例如：</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> <span class="token function-variable function">changeName</span> <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  userName<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'change Name 小康 '</span> <span class="token operator">+</span> str<span class="token punctuation">&#125;</span><span class="token comment">// 向子组件提供修改userName的方法</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">'changeName'</span><span class="token punctuation">,</span> changeName<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子组件中</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">// 获取父组件提供的名为 name 的值并赋值给userName变量</span><span class="token keyword">const</span> changeUserName <span class="token operator">=</span> inject<span class="token operator">&lt;</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'changeName'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">changeUserNameHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  changeUserName <span class="token operator">&amp;&amp;</span> <span class="token function">changeUserName</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子组件当触发<code>changeUserNameHandler</code>函数时即可调用父组件提供的修改方法将<code>userName</code>的值进行修改。</p><h3 id="只读"><a class="markdownIt-Anchor" href="#只读"></a> 只读</h3><p>当需要确保通过<code>provide</code>传递的数据不会被<code>inject</code>的组件更改，可以使用<code>readonly</code>进行修饰。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">'testChange'</span><span class="token punctuation">,</span> <span class="token keyword">readonly</span><span class="token punctuation">(</span>testChange<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时如果子组件修改值则不会修改成功。</p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
            <tag> 初识Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>避坑指北：vue使用history路由</title>
      <link href="/posts/99201b62/"/>
      <url>/posts/99201b62/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>在部署vue项目时，路由模式默认使用哈希(hash)模式，但是由于某些原因，要求使用history模式。但是对于现在的部署环境则遇到了一个问题。首先是目录：</p><pre class="line-numbers language-none"><code class="language-none">site ---- 项目根目录 ├── siteA ---- 项目A │   └── index.html └── siteB ---- 项目B     └── index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>即项目放在了同一个根目录下，那么此时我们就需要调整vue的一些配置。具体如下</p><h2 id="vue项目配置"><a class="markdownIt-Anchor" href="#vue项目配置"></a> Vue项目配置</h2><h2 id="路由设置"><a class="markdownIt-Anchor" href="#路由设置"></a> 路由设置</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/siteA'</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'siteARoot'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/siteA/index'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    children<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            path<span class="token operator">:</span> <span class="token string">'index'</span><span class="token punctuation">,</span>            name<span class="token operator">:</span> <span class="token string">'Index'</span><span class="token punctuation">,</span>            meta<span class="token operator">:</span> <span class="token punctuation">&#123;</span>                title<span class="token operator">:</span> <span class="token string">'siteA'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/siteA/index'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>即路由需要包含此项目部署时所需要存放的目录名。</p><h3 id="打包配置"><a class="markdownIt-Anchor" href="#打包配置"></a> 打包配置</h3><p>打包配置时由于使用了history模式，那么<code>publicPath</code>就需要指定绝对路径。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    publicPath<span class="token operator">:</span> /siteA/<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里设置的绝对路径即项目配置时的目录名，可通过环境变量进行动态修改。</p><h2 id="nginx配置"><a class="markdownIt-Anchor" href="#nginx配置"></a> Nginx配置</h2><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">listen</span>        <span class="token number">10085</span><span class="token punctuation">;</span>    <span class="token keyword">server_name</span>  localhost<span class="token punctuation">;</span>    <span class="token keyword">root</span>   <span class="token string">"D:/code/test/site/"</span><span class="token punctuation">;</span>    <span class="token keyword">location</span> <span class="token operator">/</span>siteA <span class="token punctuation">&#123;</span>        <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span>siteA<span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">location</span> <span class="token operator">/</span>siteB <span class="token punctuation">&#123;</span>        <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span>siteB<span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> history路由 </tag>
            
            <tag> Vue避坑指北 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识vue3之better-scroll组件封装</title>
      <link href="/posts/909b483c/"/>
      <url>/posts/909b483c/</url>
      
        <content type="html"><![CDATA[<h2 id="关于此分类"><a class="markdownIt-Anchor" href="#关于此分类"></a> 关于此分类</h2><p>关于<a href="/categories/Vue/%E5%88%9D%E8%AF%86Vue3/">初识 vue3</a>分类主要是记录一些通过 vue3 进行的实践与学习记录。</p><blockquote><p>此文主要记录封装基于<a href="https://better-scroll.github.io/docs/zh-CN/">BetterScroll 2.0</a>插件封装的 scroll-view 组件。适用于移动端的弹性滚动及下拉刷新、上拉加载等场景。</p><div class="checkbox green checked">  <input type="checkbox" checked />  <p>弹性滚动</p></div><div class="checkbox green checked">  <input type="checkbox" checked/>  <p>下拉加载</p></div><div class="checkbox green checked">  <input type="checkbox" checked/>  <p>上拉刷新</p></div><div class="checkbox green ">  <input type="checkbox" checked />  <p>滚动前后及滚动中事件</p></div><div class="checkbox yellow">  <input type="checkbox" />  <p>滚动条（待添加）</p></div></blockquote><p><strong><a href="/posts/909b483c/">本文</a>会随着<a href="https://xiaokang.me/">作者</a>日常使用进行补充及内容修正</strong></p><h2 id="简单的实现过程"><a class="markdownIt-Anchor" href="#简单的实现过程"></a> 简单的实现过程</h2><p>实现之前需要先明确一下需求：</p><ol><li>弹性滚动</li><li>下拉刷新、上拉加载</li><li>自定义传入内容</li><li>事件派发</li></ol><h3 id="弹性滚动"><a class="markdownIt-Anchor" href="#弹性滚动"></a> 弹性滚动</h3><p>实现弹性滚动只需要按照官方示例初始化即可实现。</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div class&#x3D;&quot;wrapper&quot; ref&#x3D;&quot;wrapper&quot;&gt;    &lt;div class&#x3D;&quot;content&quot;&gt;      &lt;div v-for&#x3D;&quot;i in 100&quot;&gt;&#123;&#123; i &#125;&#125;&lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script setup lang&#x3D;&quot;ts&quot;&gt;import BScroll from &#39;@better-scroll&#x2F;core&#39;import &#123; onMounted &#125; from &#39;vue&#39;let bscroll: BScrollconst wrapper &#x3D; ref(null)onMounted(() &#x3D;&gt; &#123;  bscroll &#x3D; new BScroll(wrapper.value, &#123;    mouseWheel: true  &#125;)&#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要在 mounted 阶段进行初始化创建对象即可。</p><h3 id="下拉刷新-上拉加载"><a class="markdownIt-Anchor" href="#下拉刷新-上拉加载"></a> 下拉刷新、上拉加载</h3><p>由于我安装的是<code>@better-scroll/core</code>，并没有安装‘全量包’ ，因此实现此功能同样需要安装其他两个插件：<code>@better-scroll/pull-up</code>、<code>@better-scroll/pull-down</code></p><p>安装后在初始化时开启选项即可。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> BScroll <span class="token keyword">from</span> <span class="token string">'@better-scroll/core'</span><span class="token keyword">import</span> Pullup <span class="token keyword">from</span> <span class="token string">'@better-scroll/pull-up'</span><span class="token keyword">import</span> Pulldown <span class="token keyword">from</span> <span class="token string">'@better-scroll/pull-down'</span>BScroll<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Pullup<span class="token punctuation">)</span>BScroll<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Pulldown<span class="token punctuation">)</span>bscroll <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BScroll</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  mouseWheel<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  pullDownRefresh<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  pullUpLoad<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于其触发事件的监听需要用实例对象去监听：</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> BScroll <span class="token keyword">from</span> <span class="token string">'@better-scroll/core'</span><span class="token keyword">import</span> Pullup <span class="token keyword">from</span> <span class="token string">'@better-scroll/pull-up'</span><span class="token keyword">import</span> Pulldown <span class="token keyword">from</span> <span class="token string">'@better-scroll/pull-down'</span>BScroll<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Pullup<span class="token punctuation">)</span>BScroll<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Pulldown<span class="token punctuation">)</span>bscroll <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BScroll</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.wrapper'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  mouseWheel<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  pullDownRefresh<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  pullUpLoad<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>bscroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'pullingUp'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'触发了上拉'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>bscroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'pullingUp'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'触发了下拉'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义传入内容"><a class="markdownIt-Anchor" href="#自定义传入内容"></a> 自定义传入内容</h3><p>自定义传入内容这里，由于我并不想传入一个数据列表，然后去渲染元素。因此通过<code>watch</code>监听 props 传入的数据这个方法就不好用了；监听<code>slots</code>里的变化通过一番尝试，最终也是失败，因此最终选择了使用官方提供的插件：<code>@better-scroll/observe-dom</code>、<code>@better-scroll/observe-image</code>进行自动更新实例对象。安装完成后只需要在初始化前<code>use</code>此插件即可。</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> BScroll <span class="token keyword">from</span> <span class="token string">'@better-scroll/core'</span>BScroll<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ObserveDOM<span class="token punctuation">)</span>BScroll<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ObserveImage<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="事件派发"><a class="markdownIt-Anchor" href="#事件派发"></a> 事件派发</h3><p>需要派发的事件大致为：滚动事件和上拉下拉事件</p><ol><li><p>滚动事件</p><p>此类事件只需要正常 emit 即可。</p></li><li><p>上拉下拉事件</p><p>上拉下拉刷新需要调用对应的结束事件才可以，因此将其封装为组件时就会遇到一个问题即需要等传入函数执行完毕后在调用结束事件。</p></li></ol><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineProps<span class="token punctuation">,</span> PropType<span class="token punctuation">,</span> defineEmits <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'ckick'</span><span class="token punctuation">,</span> <span class="token string">'beforeScroll'</span><span class="token punctuation">,</span> <span class="token string">'afterScroll'</span><span class="token punctuation">,</span> <span class="token string">'scroll'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'ckick'</span><span class="token punctuation">,</span> <span class="token string">'beforeScroll'</span><span class="token punctuation">,</span> <span class="token string">'afterScroll'</span><span class="token punctuation">,</span> <span class="token string">'scroll'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">/**   * 是否派发滚动事件   */</span>  listenScroll<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">/**   * 是否派发滚动到底部的事件，用于上拉加载   */</span>  pullup<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">type</span><span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">null</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">/**   * 是否派发顶部下拉的事件，用于下拉刷新   */</span>  pulldown<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">type</span><span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">null</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">/**   * 是否派发列表滚动开始的事件   */</span>  beforeScroll<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">/**   * 是否派发列表滚动开始的事件   */</span>  afterScroll<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">/** * 如果开启了滚动前事件派发 */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>beforeScroll<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  bscroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'beforeScrollStart'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'beforeScroll'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 如果开启了滚动(滚动中)事件派发 */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>listenScroll<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  bscroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>position<span class="token operator">:</span> <span class="token punctuation">&#123;</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> position<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 如果开启了滚动结束事件派发 */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>beforeScroll<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  bscroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'scrollEnd'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'afterScroll'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>pullup <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  bscroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'pullingUp'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      props<span class="token punctuation">.</span><span class="token function">pullup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        bscroll<span class="token punctuation">.</span><span class="token function">finishPullUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 传入非 Promise 函数</span>      bscroll<span class="token punctuation">.</span><span class="token function">finishPullUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>pulldown <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  bscroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'pullingDown'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      props<span class="token punctuation">.</span><span class="token function">pulldown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        bscroll<span class="token punctuation">.</span><span class="token function">finishPullDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 传入非 Promise 函数</span>      bscroll<span class="token punctuation">.</span><span class="token function">finishPullDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div :class&#x3D;&quot;&#123; wrapper: true, x: props.scrollX &#125;&quot; ref&#x3D;&quot;wrapper&quot;&gt;    &lt;div class&#x3D;&quot;content&quot;&gt;      &lt;slot&gt;&lt;&#x2F;slot&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script setup lang&#x3D;&quot;ts&quot;&gt;import &#123; onMounted, defineProps, PropType, defineEmits &#125; from &#39;vue&#39;import BScroll from &#39;@better-scroll&#x2F;core&#39;import ObserveDOM from &#39;@better-scroll&#x2F;observe-dom&#39;import ObserveImage from &#39;@better-scroll&#x2F;observe-image&#39;import Pullup from &#39;@better-scroll&#x2F;pull-up&#39;import Pulldown from &#39;@better-scroll&#x2F;pull-down&#39;let bscroll: BScrollconst wrapper &#x3D; ref(null)BScroll.use(ObserveDOM)BScroll.use(ObserveImage)BScroll.use(Pullup)BScroll.use(Pulldown)const emit &#x3D; defineEmits([&#39;ckick&#39;, &#39;beforeScroll&#39;, &#39;afterScroll&#39;, &#39;scroll&#39;])const props &#x3D; defineProps(&#123;  &#x2F;**   * 1 滚动的时候会派发scroll事件，会截流。   * 2 滚动的时候实时派发scroll事件，不会截流。   * 3 除了实时派发scroll事件，在swipe的情况下仍然能实时派发scroll事件   *&#x2F;  probeType: &#123;    type: Number as PropType&lt;1 | 2 | 3&gt;,    required: false,    default: 1  &#125;,  &#x2F;**   * 是否开启横向滚动，默认纵向滚动。   * 开启横向滚动需要将传入元素设置为横向例如：display:inline-block   *&#x2F;  scrollX: &#123;    type: Boolean,    required: false,    default: false  &#125;,  &#x2F;**   * 点击列表是否派发click事件   *&#x2F;  click: &#123;    type: Boolean,    default: true  &#125;,  &#x2F;**   * 是否派发滚动事件   *&#x2F;  listenScroll: &#123;    type: Boolean,    default: false  &#125;,  &#x2F;**   * 是否派发滚动到底部的事件，用于上拉加载   *&#x2F;  pullup: &#123;    type: Function,    default: null  &#125;,  &#x2F;**   * 是否派发顶部下拉的事件，用于下拉刷新   *&#x2F;  pulldown: &#123;    type: Function,    default: null  &#125;,  &#x2F;**   * 是否派发列表滚动开始的事件   *&#x2F;  beforeScroll: &#123;    type: Boolean,    default: false  &#125;,  &#x2F;**   * 是否派发列表滚动开始的事件   *&#x2F;  afterScroll: &#123;    type: Boolean,    default: false  &#125;&#125;)onMounted(() &#x3D;&gt; &#123;  bscroll &#x3D; new BScroll(wrapper.value, &#123;    scrollX: props.scrollX,    probeType: props.probeType,    click: props.click,    observeDOM: true,    observeImage: true,    mouseWheel: true,    pullDownRefresh: true,    pullUpLoad: true  &#125;)  &#x2F;**   * 如果开启了滚动前事件派发   *&#x2F;  if (props.beforeScroll) &#123;    bscroll.on(&#39;beforeScrollStart&#39;, () &#x3D;&gt; &#123;      emit(&#39;beforeScroll&#39;)    &#125;)  &#125;  &#x2F;**   * 如果开启了滚动(滚动中)事件派发   *&#x2F;  if (props.listenScroll) &#123;    bscroll.on(&#39;scroll&#39;, (position: &#123; x: number; y: number &#125;) &#x3D;&gt; &#123;      emit(&#39;scroll&#39;, position)    &#125;)  &#125;  &#x2F;**   * 如果开启了滚动结束事件派发   *&#x2F;  if (props.beforeScroll) &#123;    bscroll.on(&#39;scrollEnd&#39;, () &#x3D;&gt; &#123;      emit(&#39;afterScroll&#39;)    &#125;)  &#125;  if (props.pullup !&#x3D;&#x3D; null) &#123;    bscroll.on(&#39;pullingUp&#39;, () &#x3D;&gt; &#123;      try &#123;        props.pullup().then(() &#x3D;&gt; &#123;          bscroll.finishPullUp()        &#125;)      &#125; catch (e) &#123;        &#x2F;&#x2F; 传入非 Promise 函数        bscroll.finishPullUp()      &#125;    &#125;)  &#125;  if (props.pulldown !&#x3D;&#x3D; null) &#123;    bscroll.on(&#39;pullingDown&#39;, () &#x3D;&gt; &#123;      try &#123;        props.pulldown().then(() &#x3D;&gt; &#123;          bscroll.finishPullDown()        &#125;)      &#125; catch (e) &#123;        &#x2F;&#x2F; 传入非 Promise 函数        bscroll.finishPullDown()      &#125;    &#125;)  &#125;&#125;)&lt;&#x2F;script&gt;&lt;style scoped lang&#x3D;&quot;scss&quot;&gt;@import &#39;.&#x2F;index.scss&#39;;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">.wrapper </span><span class="token punctuation">&#123;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token selector">.content </span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 开启横向滚动</span>  <span class="token selector"><span class="token parent important">&amp;</span>.x </span><span class="token punctuation">&#123;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>    <span class="token selector">.content </span><span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>外部使用时需要传入样式指定宽高</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 300px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>i in count<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>i<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>当前第&#123;&#123; i &#125;&#125;个元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
            <tag> 初识Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识vue3之基础语法记录</title>
      <link href="/posts/296e7875/"/>
      <url>/posts/296e7875/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="//at.alicdn.com/t/font_2970550_p76lkpuldlo.css"><h2 id="关于此分类"><a class="markdownIt-Anchor" href="#关于此分类"></a> 关于此分类</h2><p>关于<a href="/categories/Vue/%E5%88%9D%E8%AF%86Vue3/">初识 vue3</a>分类主要是记录一些通过 vue3 进行的实践与学习记录。</p><blockquote><p>此文主要记录一些在 vue3 中的一些语法改变（只记录<code>composition api</code>语法），当然使用<a href="https://www.npmjs.com/package/@vue/composition-api">@vue/composition-api</a>插件也可以令<code>vue2</code>适用本文所记录的语法。</p></blockquote><p><strong><a href="/posts/296e7875/">本文</a>会随着<a href="https://xiaokang.me/">作者</a>日常使用进行补充及内容修正</strong></p><h2 id="数据相关data"><a class="markdownIt-Anchor" href="#数据相关data"></a> 数据相关(data)</h2><div class="tabs" id="data1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#data1-1"><i class="i296e7875 icon-js"></i>setup</button></li><li class="tab"><button type="button" data-href="#data1-2"><i class="i296e7875 icon-vue"></i>script setup</button></li><li class="tab"><button type="button" data-href="#data1-3"><i class="i296e7875 icon-jsx"></i>tsx</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="data1-1"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;    &lt;!-- vue模式下展示ref数据不需要加.value --&gt;    &lt;div&gt;当前title：&#123;&#123; title &#125;&#125;&lt;&#x2F;div&gt;    &lt;input v-model&#x3D;&quot;title&quot; type&#x3D;&quot;text&quot; &#x2F;&gt;    &lt;div&gt;当前用户名：&#123;&#123; form.name &#125;&#125;&lt;&#x2F;div&gt;    &lt;div&gt;当前用户名：&#123;&#123; form.password &#125;&#125;&lt;&#x2F;div&gt;    &lt;div&gt;      &lt;input v-model&#x3D;&quot;form.name&quot; type&#x3D;&quot;text&quot; &#x2F;&gt;      &lt;input v-model&#x3D;&quot;form.password&quot; type&#x3D;&quot;text&quot; &#x2F;&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script lang&#x3D;&quot;ts&quot;&gt;import &#123; ref, reactive &#125; from &#39;vue&#39;export default &#123;  setup() &#123;    &#x2F;&#x2F; 定义响应式普通数据    const title &#x3D; ref&lt;string&gt;(&#39;小康&#39;)    &#x2F;&#x2F; 定义响应式引用数据    const form &#x3D; reactive(&#123;      name: &#39;小康&#39;,      password: &#39;12334&#39;    &#125;)    &#x2F;&#x2F; 需要将变量或方法return视图中才可以使用    return &#123; title, form &#125;  &#125;&#125;&lt;&#x2F;script&gt;&lt;style&gt;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="data1-2"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;    &lt;!-- vue模式下展示ref数据不需要加.value --&gt;    &lt;div&gt;当前title：&#123;&#123; title &#125;&#125;&lt;&#x2F;div&gt;    &lt;input v-model&#x3D;&quot;title&quot; type&#x3D;&quot;text&quot; &#x2F;&gt;    &lt;div&gt;当前用户名：&#123;&#123; form.name &#125;&#125;&lt;&#x2F;div&gt;    &lt;div&gt;当前用户名：&#123;&#123; form.password &#125;&#125;&lt;&#x2F;div&gt;    &lt;div&gt;      &lt;input v-model&#x3D;&quot;form.name&quot; type&#x3D;&quot;text&quot; &#x2F;&gt;      &lt;input v-model&#x3D;&quot;form.password&quot; type&#x3D;&quot;text&quot; &#x2F;&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script lang&#x3D;&quot;ts&quot; setup&gt;&#x2F;&#x2F; script setup 模式下视图可以直接使用定义的变量import &#123; ref, reactive &#125; from &#39;vue&#39;&#x2F;&#x2F; 定义响应式普通数据const title &#x3D; ref&lt;string&gt;(&#39;小康&#39;)&#x2F;&#x2F; 定义响应式引用数据const form &#x3D; reactive(&#123;  name: &#39;小康&#39;,  password: &#39;12334&#39;&#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="data1-3"><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineComponent<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> reactive <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 定义响应式普通数据</span>    <span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'小康'</span><span class="token punctuation">)</span>    <span class="token comment">// 定义响应式引用数据</span>    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> <span class="token string">'小康'</span><span class="token punctuation">,</span>      password<span class="token operator">:</span> <span class="token string">'12334'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">当前title：</span><span class="token punctuation">&#123;</span>title<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>text<span class="token punctuation">'</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>title<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">当前用户名：</span><span class="token punctuation">&#123;</span>form<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">当前用户名：</span><span class="token punctuation">&#123;</span>form<span class="token punctuation">.</span>password<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>text<span class="token punctuation">'</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>form<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>text<span class="token punctuation">'</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>form<span class="token punctuation">.</span>password<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="自定义-v-model"><a class="markdownIt-Anchor" href="#自定义-v-model"></a> 自定义 v-model</h3><p>父组件调用子组件并通过v-model绑定一个值，在子组件中直接触发事件进行修改。</p><blockquote><p>emit使用参考下文</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> v-model-setup 当前title：&#123;&#123; title &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-model-setup</span> <span class="token attr-name"><span class="token namespace">v-model:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>    <span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'父组件的标题'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="vmodel"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#vmodel-1"><i class="i296e7875 icon-js"></i>setup</button></li><li class="tab"><button type="button" data-href="#vmodel-2"><i class="i296e7875 icon-vue"></i>script setup</button></li><li class="tab"><button type="button" data-href="#vmodel-3"><i class="i296e7875 icon-jsx"></i>tsx</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="vmodel-1"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeTitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改传入title值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'update:title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token function-variable function">changeTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'update:title'</span><span class="token punctuation">,</span> <span class="token string">'子组件修改的值'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> changeTitle <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="vmodel-2"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeTitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改传入title值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token comment">// script setup模式下需要使用defineEmits进行定义emit</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'update:title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">changeTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'update:title'</span><span class="token punctuation">,</span> <span class="token string">'script setup子组件修改的值'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="vmodel-3"><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineComponent <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'update:title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token function-variable function">changeTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'update:title'</span><span class="token punctuation">,</span> <span class="token string">'tsx子组件修改的值'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>changeTitle<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">修改父组件的的值</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="接收父组件的值props"><a class="markdownIt-Anchor" href="#接收父组件的值props"></a> 接收父组件的值(props)</h3><div class="tabs" id="data-props"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#data-props-1"><i class="i296e7875 icon-js"></i>setup</button></li><li class="tab"><button type="button" data-href="#data-props-2"><i class="i296e7875 icon-vue"></i>script setup</button></li><li class="tab"><button type="button" data-href="#data-props-3"><i class="i296e7875 icon-jsx"></i>tsx</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="data-props-1"><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> PropType <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    title<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">type</span><span class="token operator">:</span> String <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span><span class="token punctuation">,</span>      required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'没有传入title'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// setup 第一个参数可以取到props</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> props <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="data-props-2"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> PropType <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">// script setup模式下需要使用defineProps进行定义emit</span><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  title<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    type<span class="token operator">:</span> String <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">,</span>    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'没有传入title'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="data-props-3"><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineComponent<span class="token punctuation">,</span> PropType <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    title<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">type</span><span class="token operator">:</span> String <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span><span class="token punctuation">,</span>      required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'没有传入title'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// setup 第一个参数可以取到props</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">子组件接收的title的值为：</span><span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>title<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>如果需要将<code>props</code>中的值解构，则需要使用<code>toRefs</code>函数</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> title <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="方法相关methods"><a class="markdownIt-Anchor" href="#方法相关methods"></a> 方法相关(methods)</h2><p>事件相关无太大变化，<code>@eventName=&quot;eventFun&quot;</code>即可。</p><ul><li><a href="https://v3.cn.vuejs.org/guide/events.html">事件处理</a></li></ul><h3 id="自定义监听事件emit"><a class="markdownIt-Anchor" href="#自定义监听事件emit"></a> 自定义监听事件(emit)</h3><div class="tabs" id="emit"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#emit-1"><i class="i296e7875 icon-js"></i>setup</button></li><li class="tab"><button type="button" data-href="#emit-2"><i class="i296e7875 icon-vue"></i>script setup</button></li><li class="tab"><button type="button" data-href="#emit-3"><i class="i296e7875 icon-jsx"></i>tsx</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="emit-1"><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 为了便于维护，定义好触发的emits</span>  emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token function-variable function">changeTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token string">'子组件修改的值'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> changeTitle <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="emit-2"><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">// script setup模式下需要使用defineEmits进行定义emit</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">changeTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token string">'script setup子组件修改的值'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="emit-3"><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineComponent <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 为了便于维护，定义好触发的emits</span>  emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token function-variable function">changeTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token string">'tsx子组件修改的值'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>changeTitle<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">修改父组件的的值</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="计算属性computed和监听器watch"><a class="markdownIt-Anchor" href="#计算属性computed和监听器watch"></a> 计算属性(computed)和监听器(watch)</h2><p>更过细节参考</p><ul><li><a href="https://v3.cn.vuejs.org/guide/computed.html">基础：响应式计算和侦听器</a></li><li><a href="https://v3.cn.vuejs.org/guide/reactivity-computed-watchers.html#%E8%AE%A1%E7%AE%97%E5%80%BC">深入：响应式计算和侦听器</a></li></ul><h3 id="计算属性"><a class="markdownIt-Anchor" href="#计算属性"></a> 计算属性</h3><div class="tabs" id="computed"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#computed-1"><i class="i296e7875 icon-js"></i>setup</button></li><li class="tab"><button type="button" data-href="#computed-2"><i class="i296e7875 icon-vue"></i>script setup</button></li><li class="tab"><button type="button" data-href="#computed-3"><i class="i296e7875 icon-jsx"></i>tsx</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="computed-1"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>当前value原值&#123;&#123; val &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>当前计算属性newVal的值&#123;&#123; newVal &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>change<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>val+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> newVal <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 返回val加10的结果</span>      <span class="token keyword">return</span> val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      val<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> val<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> change <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="computed-2"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>当前value原值&#123;&#123; val &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>当前计算属性newVal的值&#123;&#123; newVal &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>change<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>val+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">const</span> newVal <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 返回val加10的结果</span>  <span class="token keyword">return</span> val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  val<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="computed-3"><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> defineComponent <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> newVal <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 返回val加10的结果</span>      <span class="token keyword">return</span> val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      val<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">当前value原值</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">当前计算属性newVal的值</span><span class="token punctuation">&#123;</span>newVal<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>change<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">val+1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="监听器watch"><a class="markdownIt-Anchor" href="#监听器watch"></a> 监听器(watch)</h3><h4 id="基础用法监听单个值"><a class="markdownIt-Anchor" href="#基础用法监听单个值"></a> 基础用法(监听单个值)</h4><div class="tabs" id="watch"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#watch-1"><i class="i296e7875 icon-js"></i>setup</button></li><li class="tab"><button type="button" data-href="#watch-2"><i class="i296e7875 icon-vue"></i>script setup</button></li><li class="tab"><button type="button" data-href="#watch-3"><i class="i296e7875 icon-jsx"></i>tsx</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="watch-1"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> watch <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token function">watch</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'发生了变化'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      val<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> val<span class="token punctuation">,</span> change <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="watch-2"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> watch <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'发生了变化'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  val<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="watch-3"><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">,</span> defineComponent <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// setup参数参考 https://v3.cn.vuejs.org/guide/composition-api-setup.html#%E5%8F%82%E6%95%B0</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token function">watch</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'发生了变化'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      val<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">当前value原值</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>change<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">val+1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="获取组件引用"><a class="markdownIt-Anchor" href="#获取组件引用"></a> 获取组件引用</h2><p>在vue2中获取引用通过<code>this.$ref</code>，然后vue3中并没有<code>this</code>，因此获取ref时的方式也发生了变化。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初识Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE单文件组件开发</title>
      <link href="/posts/380b1077/"/>
      <url>/posts/380b1077/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>首先需要阐明的是本文单文件开发最终实现的结果：**在 HTML 中通过引入打包后的 js 文件，然后使用组件标签即可渲染。**例如：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>xk-head</span> <span class="token attr-name">:msg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2213<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>xk-head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./dist/main.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        el<span class="token operator">:</span> <span class="token string">'#page'</span><span class="token punctuation">,</span>        data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          msg<span class="token operator">:</span> <span class="token string">'Hello Vue!123'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>为什么没有把 vue 打包到<code>main.js</code>中?</p><p>考虑到一个页面可能会用到多个组件，而多个组件可能并不是使用的一个 js 生成，因此将 VUE 使用 CDN 方式引入。为了避免引入的繁琐，样式文件也没有进行拆分。</p></blockquote><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><blockquote><p>此部分只包含核心部分，代码可能不可以直接使用。</p></blockquote><p>既然想要把<code>vue</code>单文件打包成 js 文件，那么核心就是<code>webpack</code>和<code>vue-loader</code>。</p><p>截至到目前（2021-07-04）为止，vue-loader 最新版本为 16+，但是 16 版本是针对 VUE3 的，而我所要使用的则是 VUE2 版本，因此并不能使用最新版本。因此需要安装的版本依赖如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"@babel/core"</span><span class="token operator">:</span> <span class="token string">"^7.14.6"</span><span class="token punctuation">,</span>  <span class="token property">"babel-loader"</span><span class="token operator">:</span> <span class="token string">"8.2.2"</span><span class="token punctuation">,</span>  <span class="token property">"babel-preset-env"</span><span class="token operator">:</span> <span class="token string">"^1.7.0"</span><span class="token punctuation">,</span>  <span class="token property">"vue-loader"</span><span class="token operator">:</span> <span class="token string">"15.9.7"</span><span class="token punctuation">,</span>  <span class="token property">"vue-style-loader"</span><span class="token operator">:</span> <span class="token string">"^4.1.3"</span><span class="token punctuation">,</span>  <span class="token property">"vue-template-compiler"</span><span class="token operator">:</span> <span class="token string">"^2.6.14"</span><span class="token punctuation">,</span>  <span class="token property">"webpack"</span><span class="token operator">:</span> <span class="token string">"5.42.0"</span><span class="token punctuation">,</span>  <span class="token property">"webpack-cli"</span><span class="token operator">:</span> <span class="token string">"^4.7.2"</span><span class="token punctuation">,</span>  <span class="token property">"webpack-dev-server"</span><span class="token operator">:</span> <span class="token string">"^3.11.2"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来配置 webpack（只列出了核心配置）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// webpack.config.js</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> VueLoaderPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vue-loader'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    rules<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        loader<span class="token operator">:</span> <span class="token string">'vue-loader'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 它会应用到普通的 `.js` 文件</span>      <span class="token comment">// 以及 `.vue` 文件中的 `&lt;script>` 块</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        loader<span class="token operator">:</span> <span class="token string">'babel-loader'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 它会应用到普通的 `.css` 文件</span>      <span class="token comment">// 以及 `.vue` 文件中的 `&lt;style>` 块</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'vue-style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// 请确保引入这个插件来施展魔法</span>    <span class="token keyword">new</span> <span class="token class-name">VueLoaderPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>vue-loader15 版本后需要引入一个<code>VueLoaderPlugin</code>的 plugin 才可以使用。并且在 15 版本后 vue 中对应的 js 和 css 会分别对应其后缀的文件进行解析。</p></blockquote><p>不出意外此时即可编译出一个 js，将其引入到 HTML 中即可实现。</p><h2 id="优化配置"><a class="markdownIt-Anchor" href="#优化配置"></a> 优化配置</h2><p>以<code>src</code>为开发目录进行配置</p><h3 id="webpack-配置文件"><a class="markdownIt-Anchor" href="#webpack-配置文件"></a> webpack 配置文件</h3><ol><li><p>入口文件</p><p>因为我们开发的是单文件组件，因此入口文件可能不止一个（不同类型或用途的组件），因此我们的入口最好是动态获取。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @description: 获取入口 */</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> parse<span class="token punctuation">,</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token comment">/** * 传入路径获取入口文件配置 * @date 2021-05-18 * @param &#123;String&#125; path 入口js文件夹 * @returns &#123;Object&#125; 入口配置对象 */</span><span class="token keyword">const</span> <span class="token function-variable function">getEntry</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>  <span class="token keyword">const</span> entry <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> base <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> path<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 如果ext存在,则认为是入口js文件</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>ext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      entry<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> base<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> entry<span class="token punctuation">&#125;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> getEntry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>向外暴露一个函数，参数传入一个路径，该函数会返回入口文件的对象。</p></blockquote></li><li><p>loader</p><p>由于 loader 包含的类型比较多（sass、scss、stylus 等）因此我会讲他单独提取出来。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./stylus'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./less.js'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./sass'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./scss'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./css'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./javascript'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./image'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./font'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./font'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./vue'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过一个入口文件，向外暴露一个 loader 的列表。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// stylus示例</span><span class="token keyword">const</span> stylus <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.styl(us)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  use<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">'vue-style-loader'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      loader<span class="token operator">:</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span>      options<span class="token operator">:</span> <span class="token punctuation">&#123;</span> importLoaders<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>    <span class="token string">'stylus-loader'</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> stylus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>其他 loader 也是如此配置</p></blockquote></li><li><p>plugins</p><p>plugins 由于只用到了两个，且不需要过多配置，因此个人认为无需提取。</p></li><li><p>其他</p><p>例如<code>mode</code>和<code>devtool</code>则是根据环境变量和个人需求进行配置。</p></li></ol><h3 id="组件开发"><a class="markdownIt-Anchor" href="#组件开发"></a> 组件开发</h3><ol><li><p>入口文件</p><p>这里入口文件暂定为<code>/src/components</code>目录下的每一个 js 文件。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入头部组件</span><span class="token keyword">import</span> head <span class="token keyword">from</span> <span class="token string">'../components/head/head.vue'</span><span class="token comment">/** * 全局filter */</span><span class="token keyword">import</span> filterInit <span class="token keyword">from</span> <span class="token string">'../util/filter'</span><span class="token function">filterInit</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>name<span class="token punctuation">,</span> head<span class="token punctuation">)</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>devtools <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token boolean">true</span>window<span class="token punctuation">.</span>Vue <span class="token operator">=</span> Vue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><ol><li><p><code>vue-loader</code>版本问题</p><p><code>vue-loader</code>版本 16 只支持 vue3,因此如果使用 vue2 则需要使用 15.x 版本.</p></li><li><p>组件库</p><p>例如<code>elementui</code>组件库</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-ui'</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>Button<span class="token punctuation">.</span>name<span class="token punctuation">,</span> Button<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><p>示例仓库:<a href="https://github.com/kkfive/vue-components-init.git">https://github.com/kkfive/vue-components-init.git</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Vue2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件化开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript中的防抖和节流</title>
      <link href="/posts/7f741bc2/"/>
      <url>/posts/7f741bc2/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是防抖"><a class="markdownIt-Anchor" href="#什么是防抖"></a> 什么是防抖</h2><p>函数防抖（debounce）：当持续触发事件时，一定时间段内没有再触发事件，事件处理函数才会执行一次，如果设定的时间到来之前，又一次触发了事件，就重新开始延时。如下图，持续触发scroll事件时，并不执行handle函数，当1000毫秒内没有触发scroll事件时，才会延时触发scroll事件。</p><p><img src="https://file.acs.pw/picgo/2021/05/29/20210529221042.jpeg" alt="防抖" /></p><p>防抖应用场景如下</p><ul><li>搜索框输入查询，如果用户一直在输入中，没有必要不停地调用去请求服务端接口，等用户停止输入的时候，再调用，设置一个合适的时间间隔，有效减轻服务端压力。</li><li>表单验证</li><li>按钮提交事件。</li><li>浏览器窗口缩放，resize事件(如窗口停止改变大小之后重新计算布局)等。</li></ul><h3 id="具体实现lodash库"><a class="markdownIt-Anchor" href="#具体实现lodash库"></a> 具体实现(Lodash库)</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * * @param &#123; Function &#125; func 要进行debouce的函数 * @param &#123; Number &#125; wait 等待时间,默认500ms * @param &#123; Boolean &#125; immediate 是否立即执行 */</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span> immediate<span class="token operator">=</span><span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> timeout    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> context <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token keyword">var</span> args <span class="token operator">=</span> arguments        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果已经执行过，不再执行</span>            <span class="token keyword">var</span> callNow <span class="token operator">=</span> <span class="token operator">!</span>timeout            timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                timeout <span class="token operator">=</span> <span class="token keyword">null</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>callNow<span class="token punctuation">)</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>非立即执行的意思是触发事件后函数不会立即执行，而是在 n 秒后执行，如果在 n 秒内又触发了事件，则会重新计算函数执行时间。</p><p>立即执行的意思是触发事件后函数会立即执行，然后 n 秒内<strong>不触发事件</strong>才能继续执行函数的效果</p></blockquote><h2 id="什么是节流"><a class="markdownIt-Anchor" href="#什么是节流"></a> 什么是节流</h2><p>函数节流（throttle）：当持续触发事件时，保证一定时间段内只调用一次事件处理函数。节流通俗解释就比如我们水龙头放水，阀门一打开，水哗哗的往下流，秉着勤俭节约的优良传统美德，我们要把水龙头关小点，最好是如我们心意按照一定规律在某个时间间隔内一滴一滴的往下滴。如下图，持续触发scroll事件时，并不立即执行handle函数，每隔1000毫秒才会执行一次handle函数。</p><p><img src="https://file.acs.pw/picgo/2021/05/29/20210529221115.jpeg" alt="节流" /></p><p>节流应用场景：</p><ul><li>按钮点击事件</li><li>拖拽事件</li><li>onScoll</li><li>计算鼠标移动的距离(mousemove)</li></ul><h3 id="具体实现"><a class="markdownIt-Anchor" href="#具体实现"></a> 具体实现</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 节流，多次触发，间隔时间段执行 * @param &#123; Function &#125; func * @param &#123; Number &#125; wait * @param &#123; Object &#125; options */</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> timeout<span class="token punctuation">,</span> context<span class="token punctuation">,</span> args    <span class="token keyword">var</span> previous <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">)</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>leading<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>trailing<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> <span class="token function-variable function">later</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        previous <span class="token operator">=</span> options<span class="token punctuation">.</span>leading <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        timeout <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span> context <span class="token operator">=</span> args <span class="token operator">=</span> <span class="token keyword">null</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> <span class="token function-variable function">throttled</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>previous <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>leading <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> previous <span class="token operator">=</span> now        <span class="token keyword">var</span> remaining <span class="token operator">=</span> wait <span class="token operator">-</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous<span class="token punctuation">)</span>        context <span class="token operator">=</span> <span class="token keyword">this</span>        args <span class="token operator">=</span> arguments        <span class="token keyword">if</span> <span class="token punctuation">(</span>remaining <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> remaining <span class="token operator">></span> wait<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>                timeout <span class="token operator">=</span> <span class="token keyword">null</span>            <span class="token punctuation">&#125;</span>            previous <span class="token operator">=</span> now            <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span> context <span class="token operator">=</span> args <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>trailing <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>later<span class="token punctuation">,</span> remaining<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> throttled<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>第三个参数还有点复杂，<code>options</code></p><ul><li>leading，函数在每个等待时延的开始被调用，默认值为false</li><li>trailing，函数在每个等待时延的结束被调用，默认值是true</li></ul><p><code>leading-false，trailing-true</code>：默认情况，即在延时结束后才会调用函数</p><p><code>leading-true，trailing-true</code>：在延时开始时就调用，延时结束后也会调用</p><p><code>leading-true, trailing-false</code>：只在延时开始时调用</p></blockquote><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ul><li><p>函数防抖</p><p>将几次操作合并为一此操作进行。原理是维护一个计时器，规定在delay时间后触发函数，但是在delay时间内再次触发的话，就会取消之前的计时器而重新设置。这样一来，只有最后一次操作能被触发。</p><ol><li>input框搜索，用户在不断输入值时，用防抖来节约请求资源。</li><li>window触发resize的时候，不断的调整浏览器窗口大小会不断的触发这个事件，用防抖来让其只触发一次。</li></ol></li><li><p>函数节流</p><p>使得一定时间内只触发一次函数。原理是通过判断是否到达一定时间来触发函数。</p><ol><li>鼠标不断点击触发，mousedown(单位时间内只触发一次)</li><li>监听滚动事件，比如是否滑到底部自动加载更多，用throttle来判断</li></ol></li><li><p>区别</p><p>函数节流不管事件触发有多频繁，都会保证在规定时间内一定会执行一次真正的事件处理函数</p><p>而函数防抖只是在最后一次事件后才触发一次函数。 比如在页面的无限加载场景下，我们需要用户在滚动页面时，每隔一段时间发一次 Ajax 请求，而不是在用户停下滚动页面操作时才去请求数据。这样的场景，就适合用节流技术来实现。</p></li></ul><h2 id="文章参考"><a class="markdownIt-Anchor" href="#文章参考"></a> 文章参考</h2><ul><li><a href="https://www.cnblogs.com/momo798/p/9177767.html">js防抖和节流</a></li><li><a href="https://github.com/Michael-lzg/my--article/blob/master/javascript/js%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81.md">js防抖和节流</a></li><li><a href="https://juejin.cn/post/7000919400249294862">16个工程必备的JavaScript代码片段（建议添加到项目中）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 防抖节流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给bber换个皮肤</title>
      <link href="/posts/7ec820ee/"/>
      <url>/posts/7ec820ee/</url>
      
        <content type="html"><![CDATA[<h2 id="简单介绍"><a class="markdownIt-Anchor" href="#简单介绍"></a> 简单介绍</h2><div class="note danger modern"><p>此项目只是一个前端皮肤，其功能受限于后端云函数。因此我已经将哔哔迁移<a href="https://www.antmoe.com/speak/">speak</a>。此皮肤项目不在维护！！！</p></div><p>此项目仅仅作为<a href="https://immmmm.com/bb-by-wechat-pro/">哔哔点啥</a>数据的前端页面展示，并不会修改及影响任何关于云函数的内容。</p><p><em>注：前端解析不在使用markdown语法解析，但支持<code>![]()</code> 语法的图片。</em></p><p>示例页面：<a target="_blank" href="https://www.antmoe.com/bb/"><span>小康的bb页面</span></a></p><p><img src="https://file.acs.pw/picGo/2021/3/24/9c756e25681681755e2599dd7c0cd009.png" alt="image-20210324110323140" /></p><blockquote><p>样式参考：<a href="https://tomotoes.com/blog/weibo/">微博</a></p></blockquote><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><p>请先确保按照其教程成功部署后，在你的markdown文件写入如下内容即可。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>speak-bber<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>speak</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/ispeak-bber@1.1.1-beta/ispeak-bber.min.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">ispeakBber    <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      el<span class="token operator">:</span> <span class="token string">'#speak-bber'</span><span class="token punctuation">,</span>      name<span class="token operator">:</span> <span class="token string">'DreamyTZK 🦄'</span><span class="token punctuation">,</span> <span class="token comment">// 显示的昵称</span>      envId<span class="token operator">:</span> <span class="token string">'腾讯云开发环境id'</span><span class="token punctuation">,</span> <span class="token comment">// 环境id</span>      region<span class="token operator">:</span> <span class="token string">'ap-shanghai'</span><span class="token punctuation">,</span> <span class="token comment">// 腾讯云地址，默认为上海</span>      limit<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// 每次加载的条数，默认为5</span>      avatar<span class="token operator">:</span> <span class="token string">'https://cdn.jsdelivr.net/npm/kang-static@latest/avatar.jpg'</span><span class="token punctuation">,</span>      fromcolor<span class="token operator">:</span><span class="token string">'rgb(245, 150, 170)'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ispeak 加载完成'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>按照注释需求填写对应的信息即可。</p></blockquote><h2 id="发布哔哔的新方式"><a class="markdownIt-Anchor" href="#发布哔哔的新方式"></a> 发布哔哔的新方式</h2><blockquote><p>此插件仅适用于chrome内核的浏览器。</p></blockquote><p>发布哔哔的方式很简单，即调用接口请求数据即可。作者提供了一种微信发布哔哔的方式，参考<a href="https://blog.zhheo.com/p/27be0e44.html">张洪</a>的教程又解锁了通过<strong>快捷指令</strong>、<strong>Utools</strong>发布哔哔的方式。但这三种方式对我来说均有些不足，因此参考<a href="https://www.ihewro.com/archives/489/">handsome</a>主题附赠的浏览器插件源码，改装成了一个发送哔哔的发射台。</p><p><img src="https://file.acs.pw/picGo/2021/3/24/a10b5f149e45b97d3f429bd291511c88.png" alt="image-20210324111051857" /></p><ul><li><p>接口地址：也就是云函数的接口地址</p><p>示例：<code>https://环境id.ap-shanghai.app.tcloudbase.com/bber</code>，参考木木的教程进行获取。</p></li><li><p>key</p><p>自定义的key</p></li><li><p>7bu图床token</p><p>插件允许<strong>ctrl+v</strong>、<strong>拖拽</strong>方式进行上传图片到<a href="https://7bu.top/">7bu图床</a>，因此你可以设置token，如果设置会将图片上传到自己的账户下，不设置则会匿名上传。</p><p>token获取参考：<a href="https://7bu.top/index/api.html">https://7bu.top/index/api.html</a></p></li><li><p>from</p><p>对应接口from字段，原意为哔哔来源，但我更倾向于标签的定义。</p></li></ul><h2 id="浏览器如何安装插件"><a class="markdownIt-Anchor" href="#浏览器如何安装插件"></a> 浏览器如何安装插件</h2><ol><li>使用Edge浏览器安装<a href="https://microsoftedge.microsoft.com/addons/detail/ispeakbber%E6%97%B6%E5%85%89%E6%9C%BA/nbojopnokkmdbmnneoagianhafgmohfc">ispeak-bber</a>插件</li><li>填写对应字段，然后发送哔哔</li></ol><h2 id="添加首页轮播"><a class="markdownIt-Anchor" href="#添加首页轮播"></a> 添加首页轮播</h2><p>添加首页轮播借助了<a href="https://butterfly.js.org/posts/ea33ab97/">butterfly主题自定义组件</a>的功能实现，通过在自定义组件处加载JavaScript生成首页的轮播展示。示例代码如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">class_name</span><span class="token punctuation">:</span> latestBB  <span class="token key atrule">id_name</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> 最新吐槽  <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bolt  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">html</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    &lt;div class="swiper-container swiper-container-aside">      &lt;div class="swiper-wrapper swiper-weapper-aside">&lt;/div>    &lt;/div>    &lt;a class="bb-btn button--animated" href="/bb/" title="查看全部">&lt;i class="far fa-hand-point-right fa-fw">&lt;/i> 查看更多 &lt;/a>    &lt;script>      window.kkBBConfig = &#123;        limit: 9,        blog:'/bb/',        api_url:          'https://636f-comment-5gj5t55m7efcd73d-1251136071.tcb.qcloud.la/json/bber.json'      &#125;    &lt;/script>    &lt;script src="https://cdn.jsdelivr.net/npm/butterfly-bber-swiper/dist/index.min.js">&lt;/script></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>latestBB</code></p><p>容器class名，请保持<code>latestBB</code>不要更改</p></li><li><p><code>html</code></p><p>必须包含的内容如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">class_name</span><span class="token punctuation">:</span> latestBB  <span class="token key atrule">html</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    &lt;div class="swiper-container swiper-container-aside">      &lt;div class="swiper-wrapper swiper-weapper-aside">&lt;/div>    &lt;/div>    &lt;script>      window.kkBBConfig = &#123;        // 如果使用API 那么此字段表示读取的数量        limit: 9,        // 点击后跳转的链接        blog:'/bb/',        // api地址，可以是json文件地址 也可以是api地址        api_url:          'https://636f-comment-5gj5t55m7efcd73d-1251136071.tcb.qcloud.la/json/bber.json'      &#125;    &lt;/script>    &lt;script src="https://cdn.jsdelivr.net/npm/butterfly-bber-swiper/dist/index.min.js">&lt;/script></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他可根据自己的需求今天添加。</p></li><li><p>其他</p><p>其他未提及字段非本项目必须字段，因此不做解释，可参考官方文档：<a href="https://butterfly.js.org/posts/ea33ab97/">https://butterfly.js.org/posts/ea33ab97/</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> Speak-bber </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bber </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、VUE中的遗漏的知识</title>
      <link href="/posts/c99a2dda/"/>
      <url>/posts/c99a2dda/</url>
      
        <content type="html"><![CDATA[<h2 id="render中的h函数"><a class="markdownIt-Anchor" href="#render中的h函数"></a> render中的h函数</h2><p>h函数可以创建虚拟dom，通过创建的虚拟dom再转化为真的的DOM，从而渲染到页面中。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">// render function</span>  <span class="token comment">// template -> render -> h -> 虚拟DOM（JS对象）-> 真实 DOM -> 展示到页面上</span>  <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;my-title :level="2">hello xiaokang  &lt;/my-title></span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'my-title'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'level'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> h <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue      <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">'h'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>level<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">'h4'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'xiaokang'</span><span class="token punctuation">)</span>      <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>h函数第一个参数为<code>tag name</code>，也就是你需要创建的标签名，第二参数为此标签上的属性，第三个参数为其内容数组。</p></blockquote><p><img src="https://file.acs.pw/picGo/2021/3/19/8389ca8508a1c1f8408036f2b7a819a2.png" alt="image-20210319172822390" /></p><blockquote><p>参考链接：<a href="https://vue3js.cn/docs/zh/guide/render-function.html">https://vue3js.cn/docs/zh/guide/render-function.html</a></p></blockquote><h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2><p>vue中插件主要用于把一些通用性的功能封装起来</p><p>插件定义的基本语法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> myPlugin <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>当使用插件时，会调用插件的install方法。第一个参数app为生成的app对象，第二个参数为传递的参数。</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">// plugin 插件, 也是把通用性的功能封装起来</span>  <span class="token keyword">const</span> myPlugin <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 提供和注入</span>      app<span class="token punctuation">.</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'xiaokang'</span><span class="token punctuation">)</span>      <span class="token comment">// 自定义指令</span>      app<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">'focus'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// 混入</span>      app<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mixin'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// 全局属性</span>      app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$sayHello <span class="token operator">=</span> <span class="token string">'hello world'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;my-title /></span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'my-title'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    inject<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$sayHello<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div>&#123;&#123;name&#125;&#125;&lt;input v-focus />&lt;/div></span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>myPlugin<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'xiaokang'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><details ><summary> <p>数据校验插件</p> </summary>              <div class='content'>              <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'dell'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  rules<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    age<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token parameter">age</span> <span class="token operator">=></span> age <span class="token operator">></span> <span class="token number">25</span><span class="token punctuation">,</span>      message<span class="token operator">:</span> <span class="token string">'too young, to simple'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token parameter">name</span> <span class="token operator">=></span> name<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">4</span><span class="token punctuation">,</span>      message<span class="token operator">:</span> <span class="token string">'name too short'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div>name:&#123;&#123;name&#125;&#125;, age:&#123;&#123;age&#125;&#125;&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 对数据做校验的插件</span><span class="token keyword">const</span> <span class="token function-variable function">validatorPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  app<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>rules<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>rules<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">const</span> result <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>validatorPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>              </div>            </details><blockquote><p>参考：<a href="https://vue3js.cn/docs/zh/guide/plugins.html">https://vue3js.cn/docs/zh/guide/plugins.html</a></p></blockquote><h2 id="teleport传送门-vue3"><a class="markdownIt-Anchor" href="#teleport传送门-vue3"></a> Teleport传送门-vue3</h2><p>主要用于将dom元素挂载到其他位置，例如挂载到<code>head</code>里。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">// teleport 传送门</span>  <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        show<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        message<span class="token operator">:</span> <span class="token string">'hello'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">handleBtnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>show<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">      &lt;div class="area">        &lt;button @click="handleBtnClick">按钮&lt;/button>        &lt;teleport to="body">          &lt;div class="mask" v-show="show">&#123;&#123;message&#125;&#125;&lt;/div>        &lt;/teleport>      &lt;/div>    </span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/19/aa3bc2cad2374fc1ba959ab54d4faf45.png" alt="image-20210319171148266" /></p><h2 id="components-api-vue3"><a class="markdownIt-Anchor" href="#components-api-vue3"></a> components API-vue3</h2><h3 id="setup函数"><a class="markdownIt-Anchor" href="#setup函数"></a> setup函数</h3><p>该函数会在<strong>创建组件之前</strong>执行，由于在执行 <code>setup</code> 时尚未创建组件实例，因此在 <code>setup</code> 选项中没有 <code>this</code>。这意味着，除了 <code>props</code> 之外，你将无法访问组件中声明的任何属性——<strong>本地状态</strong>、<strong>计算属性</strong>或<strong>方法</strong>。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 对数据做校验的插件</span><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div @click="handleClick">&#123;&#123;name&#125;&#125;&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 实例可以调用setup方法</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 这里不能调用this</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> <span class="token string">'xiaokang'</span><span class="token punctuation">,</span>      <span class="token function-variable function">handleClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>setup里返回的内容可以在实例中调用。</p></blockquote><h3 id="响应式引用与只读"><a class="markdownIt-Anchor" href="#响应式引用与只读"></a> 响应式引用与只读</h3><p>主要用于将<code>setup</code>中的变量转换为响应式的变量。默认变量并不是响应式的。</p><p>其中<code>ref</code>处理基础类型的数据，<code>reactive</code>用于处理非基础类型的数据（对象和数组）。</p><table><thead><tr><th style="text-align:center">方法名</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center"><code>ref</code></td><td style="text-align:center">将基础类型数据转化为响应式数据</td></tr><tr><td style="text-align:center"><code>reactive</code></td><td style="text-align:center">将非基础类型的数据（对象和数组）。</td></tr><tr><td style="text-align:center"><code>readonly</code></td><td style="text-align:center">将数据设为只读</td></tr><tr><td style="text-align:center"><code>toRefs</code></td><td style="text-align:center">将非基础类型的子元素设置为响应式数据</td></tr></tbody></table><ol><li><p>基础类型引用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    name<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'2'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过ref包装后，name实则变成了<code>proxy(&#123;value: '2'&#125;)</code>这样的引用，当修改值时需要修改name的value属性。但是调用时不需要使用<code>value</code>，vue会识别并自动调用。</p></blockquote></li><li><p>非基础类型引用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span>context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> reactive<span class="token punctuation">,</span> readonly<span class="token punctuation">,</span> toRefs <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue  <span class="token keyword">const</span> nameObj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'xiaokang'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">21</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    nameObj<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">'22'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> nameObj <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过<code>reactive</code>包装后，nameObj就是响应式的了。</p></blockquote></li><li><p>组合使用</p><p>在非响应式引用里，只有整个对象是响应式的，而对象里的某个属性并不是响应式的，因此，需要将这个对象再次进行包装才可以使其属性变成响应式的。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span>context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> reactive<span class="token punctuation">,</span> readonly<span class="token punctuation">,</span> toRefs <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue  <span class="token keyword">const</span> nameObj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'xiaokang'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">21</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    nameObj<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">'22'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>nameObj<span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> age <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>只读</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> nameObj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'xiaokang'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> nameObjCopy <span class="token operator">=</span> <span class="token function">readonly</span><span class="token punctuation">(</span>nameObj<span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  nameObj<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">21</span>  nameObjCopy<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>参考：<a href="https://vue3js.cn/docs/zh/guide/composition-api-introduction.html#%E5%B8%A6-ref-%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8F%98%E9%87%8F">https://vue3js.cn/docs/zh/guide/composition-api-introduction.html#带-ref-的响应式变量</a></p></blockquote><h3 id="toref"><a class="markdownIt-Anchor" href="#toref"></a> toRef</h3><p>可以用来为源响应式对象上的 property 性创建一个 <a href="https://vue3js.cn/docs/zh/api/refs-api.html#ref"><code>ref</code></a>。然后可以将 ref 传递出去，从而保持对其源 property 的响应式连接。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> reactive<span class="token punctuation">,</span> toRef <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue  <span class="token keyword">const</span> nameObj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'xiaokang'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">)</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    age<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">21</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> age <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="setup中context参数"><a class="markdownIt-Anchor" href="#setup中context参数"></a> setup中context参数</h2><p>context参数一共可以结构出三个参数：</p><ul><li><p><code>attrs</code></p><p>None-Props属性</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;child app='app' style='color:red'>&lt;/child></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'child'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  template<span class="token operator">:</span> <span class="token string">'&lt;div>child&lt;/div>'</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> attrs<span class="token punctuation">,</span> slots<span class="token punctuation">,</span> emit <span class="token punctuation">&#125;</span> <span class="token operator">=</span> context    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attrs<span class="token punctuation">)</span> <span class="token comment">// 接收没有被props接收的属性</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/19/f33997da9bc1eff1e1330a4b0196cee2.png" alt="image-20210319190338185" /></p></li><li><p><code>slots</code></p><p>插槽</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;child app='app' style='color:red'>插槽内容  &lt;/child></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'child'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> h <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> attrs<span class="token punctuation">,</span> slots<span class="token punctuation">,</span> emit <span class="token punctuation">&#125;</span> <span class="token operator">=</span> context    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可以使用<code>jsx</code>进行模板渲染：<a href="https://github.com/vuejs/jsx-next#installation">https://github.com/vuejs/jsx-next#installation</a></p></blockquote></li><li><p><code>emit</code></p><p>触发自定义事件</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;child @change='handleChange' app='app' style='color:red'>插槽内容&lt;/child></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'child'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  template<span class="token operator">:</span> <span class="token string">"&lt;div @click='handleClick'>123123&lt;/div>"</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> h <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> attrs<span class="token punctuation">,</span> slots<span class="token punctuation">,</span> emit <span class="token punctuation">&#125;</span> <span class="token operator">=</span> context    <span class="token keyword">function</span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      handleClick    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> vm <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="计算属性"><a class="markdownIt-Anchor" href="#计算属性"></a> 计算属性</h3><p>计算属性同样使用<code>Vue</code>对象提供的<code>computed</code>方法。computed方法接收参数有两种类型，一种是函数，另一种是对象。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue  <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> number2 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> <span class="token function-variable function">handle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    number<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>    number2<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 传入函数</span>  <span class="token keyword">let</span> cNumber <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> number<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">5</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 传入对象</span>  <span class="token keyword">let</span> cNumberObj <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> number2<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">5</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      number2<span class="token punctuation">.</span>value <span class="token operator">=</span> val <span class="token operator">-</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> number<span class="token punctuation">,</span> cNumber<span class="token punctuation">,</span> handle<span class="token punctuation">,</span> cNumberObj <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="watch与watcheffect"><a class="markdownIt-Anchor" href="#watch与watcheffect"></a> watch与watchEffect</h3><p>就像我们如何使用 <code>watch</code> 选项在组件内的 <code>user</code> property 上设置侦听器一样，我们也可以使用从 Vue 导入的 <code>watch</code> 函数执行相同的操作。它接受 3 个参数：</p><ul><li>一个<strong>响应式引用</strong>或我们想要侦听的 getter 函数</li><li>一个回调函数</li><li>可选的配置选项</li></ul><ol><li><p>侦听单个源</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 侦听一个 getter</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* ... */</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 直接侦听ref</span><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token function">watch</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* ... */</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>侦听多个源</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span>fooRef<span class="token punctuation">,</span> barRef<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>prevFoo<span class="token punctuation">,</span> prevBar<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* ... */</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><table><thead><tr><th style="text-align:center">不同点</th><th style="text-align:center"><code>watch</code></th><th style="text-align:center"><code>watchEffect</code></th></tr></thead><tbody><tr><td style="text-align:center">惰性</td><td style="text-align:center">默认情况下是惰性的，但第三个参数传入<code>immediate</code>为true可以立即执行</td><td style="text-align:center">非惰性</td></tr><tr><td style="text-align:center">能拿到原始值和当前值</td><td style="text-align:center">能</td><td style="text-align:center">只能拿到当前值</td></tr><tr><td style="text-align:center">只可以侦听多个数据</td><td style="text-align:center">可以</td><td style="text-align:center">可以</td></tr></tbody></table><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> stop <span class="token operator">=</span> <span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token comment">// 会自动判断依赖并更新</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nameObj<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 调用后会停止监听</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期"></a> 生命周期</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>    ref<span class="token punctuation">,</span>    onBeforeMount<span class="token punctuation">,</span>    onMounted<span class="token punctuation">,</span>    onBeforeUpdate<span class="token punctuation">,</span>    onUpdated<span class="token punctuation">,</span>    onRenderTracked<span class="token punctuation">,</span>    onRenderTriggered  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'dell'</span><span class="token punctuation">)</span>  <span class="token function">onBeforeMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onBeforeMount'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onMounted'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">onBeforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onBeforeUpdate'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">onUpdated</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onUpdated'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 每次渲染后重新收集响应式依赖</span>  <span class="token function">onRenderTracked</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onRenderTracked'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 每次触发页面重新渲染时自动执行</span>  <span class="token function">onRenderTriggered</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onRenderTriggered'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    name<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'lee'</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> handleClick <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="provide-inject和ref"><a class="markdownIt-Anchor" href="#provide-inject和ref"></a> Provide、Inject和ref</h3><p>提供与注入</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> provide<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> readonly <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue<span class="token punctuation">;</span>        <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'name1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token function">readonly</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">'changeName'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          name<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div>          &lt;child />        &lt;/div>      </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'child'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> inject <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue<span class="token punctuation">;</span>        <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> changeName <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">'changeName'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token function">changeName</span><span class="token punctuation">(</span><span class="token string">'name2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> handleClick <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      template<span class="token operator">:</span> <span class="token string">'&lt;div @click="handleClick">&#123;&#123;name&#125;&#125;&lt;/div>'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过<code>readonly</code>对提供的变量进行包装，实现数据单向流（子组件不能修改父组件的值）。</p></blockquote><p>ref</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue    <span class="token keyword">const</span> hello <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// dom节点</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> hello <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div>&lt;div ref="hello">hello world&lt;/div>&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue2 </tag>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Vercel的API接口文档</title>
      <link href="/posts/fb3f3bba/"/>
      <url>/posts/fb3f3bba/</url>
      
        <content type="html"><![CDATA[<h2 id="简单说明"><a class="markdownIt-Anchor" href="#简单说明"></a> 简单说明</h2><blockquote><p>此项目重新调整了代码结构及框架，具体请参考：<a href="https://kkapi.js.org">kkapi-doc</a></p></blockquote><p>接口Base域名：<code>https://kkapi.vercel.app/</code>当然你也可以部署到自己的vercel中绑定自己的域名。该项目开源仓库：<a href="https://github.com/kkfive/api-vercel">api-vercel</a></p><p><strong>所有的接口无特殊声明均支持GET、POST两种请求。</strong></p><h2 id="普通类型接口"><a class="markdownIt-Anchor" href="#普通类型接口"></a> 普通类型接口</h2><p>此类接口地址全部为<code>/index</code>，通过参数<code>type</code>区分行为</p><h3 id="获取文件内容"><a class="markdownIt-Anchor" href="#获取文件内容"></a> 获取文件内容</h3><blockquote><p>此接口会返回一个允许任何域的文件。</p></blockquote><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">含义</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center">【必填】操作的类型</td><td style="text-align:center"><code>cros</code></td></tr><tr><td style="text-align:center"><code>url</code></td><td style="text-align:center">【必填】请求文件的地址</td><td style="text-align:center"><a href="https://raw.githubusercontent.com/DreamyTZK/DreamyTZK/master/README.md">README.md</a></td></tr></tbody></table><blockquote><p>示例：<a href="https://kkapi.vercel.app/index?type=cros&amp;url=https://raw.githubusercontent.com/DreamyTZK/DreamyTZK/master/README.md">https://kkapi.vercel.app/index?type=cros&amp;url=https://raw.githubusercontent.com/DreamyTZK/DreamyTZK/master/README.md</a></p></blockquote><h3 id="返回qq头像"><a class="markdownIt-Anchor" href="#返回qq头像"></a> 返回qq头像</h3><blockquote><p>此接口返回qq头像</p></blockquote><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">含义</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center">【必填】操作的类型</td><td style="text-align:center"><code>qlogo</code></td></tr><tr><td style="text-align:center"><code>qq</code></td><td style="text-align:center">【必填】需要获取的qq号</td><td style="text-align:center"><code>2045105376</code></td></tr></tbody></table><blockquote><p>调用示例：<a href="https://kkapi.vercel.app/index?type=qlogo&amp;qq=2045105376">https://kkapi.vercel.app/index?type=qlogo&amp;qq=2045105376</a></p></blockquote><h3 id="必应壁纸"><a class="markdownIt-Anchor" href="#必应壁纸"></a> 必应壁纸</h3><blockquote><p>此接口重定向到指定日期的必应壁纸，数据存储在jsd</p></blockquote><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">含义</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center">【必填】操作的类型</td><td style="text-align:center"><code>bing</code></td></tr><tr><td style="text-align:center"><code>date</code></td><td style="text-align:center">【选填】需要获取的日期。<br />只能获取<code>20200312</code>及之后的图，之前的无法获取</td><td style="text-align:center"><code>20210101</code></td></tr></tbody></table><blockquote><p>调用示例：<a href="http://kkapi.vercel.app/index?type=bing&amp;date=20210101">http://kkapi.vercel.app/index?type=bing&amp;date=20210101</a></p></blockquote><h2 id="图片处理类"><a class="markdownIt-Anchor" href="#图片处理类"></a> 图片处理类</h2><blockquote><p>此接口可以处理一些图片，例如返回格式、宽度高度等。</p></blockquote><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">含义</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center"><code>img</code></td><td style="text-align:center">【必填】图片地址</td><td style="text-align:center"><code>cros</code></td></tr><tr><td style="text-align:center"><code>r</code></td><td style="text-align:center">【选填】图片旋转角度</td><td style="text-align:center"><code>45</code></td></tr><tr><td style="text-align:center"><code>w</code></td><td style="text-align:center">【选填】设置图片的宽度</td><td style="text-align:center"><code>100</code></td></tr><tr><td style="text-align:center"><code>h</code></td><td style="text-align:center">【选填】设置图片的高度</td><td style="text-align:center"><code>100</code></td></tr><tr><td style="text-align:center"><code>fit</code></td><td style="text-align:center">【选填】设置图片填充方式，可选值：<code>cover</code>、<code>contain</code>、<code>fill</code>、<code>inside</code>、<code>outside</code></td><td style="text-align:center"><code>cover</code></td></tr><tr><td style="text-align:center"><code>bg</code></td><td style="text-align:center">【选填】背景颜色</td><td style="text-align:center"><code>#000</code></td></tr><tr><td style="text-align:center"><code>withoutEnlargement</code></td><td style="text-align:center">【选填】如果宽度或高度已经小于指定的尺寸，不要放大，默认<code>false</code></td><td style="text-align:center"><code>false</code></td></tr><tr><td style="text-align:center"><code>format</code></td><td style="text-align:center">【选填】格式化图片，<code>jpeg</code>、<code>png</code>、<code>webp</code>、<code>tiff</code>、<code>heif</code>、<code>raw</code>、<code>tile</code></td><td style="text-align:center"><code>webp</code></td></tr><tr><td style="text-align:center"><code>pos</code></td><td style="text-align:center">【选填】定位</td><td style="text-align:center"><code>center</code></td></tr><tr><td style="text-align:center"><code>q</code></td><td style="text-align:center">【选填】输出图片的质量，取值为1-100</td><td style="text-align:center"><code>100</code></td></tr></tbody></table><blockquote><p>调用示例：<a href="https://kkapi.vercel.app/image?img=https://cdn.jsdelivr.net/gh/DreamyTZK/xiaokang.me@master/www/assets/bg/003.jpg&amp;fit=outside&amp;w=1440&amp;h=900&amp;format=webp">https://kkapi.vercel.app/image?img=https://cdn.jsdelivr.net/gh/DreamyTZK/xiaokang.me@master/www/assets/bg/003.jpg&amp;fit=outside&amp;w=1440&amp;h=900&amp;format=webp</a></p></blockquote><h2 id="消息发送类"><a class="markdownIt-Anchor" href="#消息发送类"></a> 消息发送类</h2><blockquote><p>用于快捷的发送一些消息</p></blockquote><h3 id="发送电报消息"><a class="markdownIt-Anchor" href="#发送电报消息"></a> 发送电报消息</h3><p>接口地址：<code>/tegegram</code>，参数</p><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">含义</th><th style="text-align:center">示例值</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center">【必填】操作类型，发送消息填写为<code>send</code>即可</td><td style="text-align:center"><code>send</code></td></tr><tr><td style="text-align:center"><code>text</code></td><td style="text-align:center">【必填】消息内容</td><td style="text-align:center">小康</td></tr><tr><td style="text-align:center"><code>chat_id</code></td><td style="text-align:center">【必填】发送tg消息的对象，支持群组和个人。请先添加<a href="https://t.me/kang_notice_bot">通知小助手</a>否则api接口会调用失败。</td><td style="text-align:center"><code>-1001289698078</code></td></tr></tbody></table><blockquote><p>调用示例：<a href="https://kkapi.vercel.app/telegram?type=send&amp;text=test&amp;chat_id=">https://kkapi.vercel.app/telegram?type=send&amp;text=test&amp;chat_id=</a></p></blockquote><h3 id="企业微信通知"><a class="markdownIt-Anchor" href="#企业微信通知"></a> 企业微信通知</h3><p>接口地址：<code>/qywx</code>，参数</p><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">含义</th><th style="text-align:center">示例值</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center">【必填】操作类型，发送普通文本使用<code>text</code>,markdown使用<code>markdown</code></td><td style="text-align:center"><code>text</code></td></tr><tr><td style="text-align:center"><code>id</code></td><td style="text-align:center">【必填】微信企业的id</td><td style="text-align:center"><code>ww3dxxxxxxxxxxx76</code></td></tr><tr><td style="text-align:center"><code>secert</code></td><td style="text-align:center">【必填】企业应用的<code>secert</code></td><td style="text-align:center"><code>wYN1xxxLsbwod_eRexxxxxGLgFxxxxxD6b-xxxx</code></td></tr><tr><td style="text-align:center"><code>agentid</code></td><td style="text-align:center">【必填】企业应用ID</td><td style="text-align:center"><code>1000002</code></td></tr><tr><td style="text-align:center"><code>msg</code></td><td style="text-align:center">【必填】发送的消息</td><td style="text-align:center">1223</td></tr><tr><td style="text-align:center"><code>touser</code></td><td style="text-align:center">【必填】指定接收消息的成员，成员ID列表（多个接收者用‘|’分隔，最多支持1000个）。</td><td style="text-align:center"><code>@all</code></td></tr></tbody></table><blockquote><p>调用示例：<a href="https://kkapi.vercel.app/api/qywx?type=text&amp;id=%7B%E4%BC%81%E4%B8%9Aid%7D&amp;secert=%7B%E5%BA%94%E7%94%A8secert%7D&amp;agentid=%7B%E5%BA%94%E7%94%A8id%7D&amp;msg=%7B%E4%BD%A0%E8%A6%81%E5%8F%91%E7%9A%84%E6%B6%88%E6%81%AF%7D&amp;touser=%7B%E5%8F%91%E9%80%81%E7%BB%99%E8%B0%81%7D">https://kkapi.vercel.app/api/qywx?type=text&amp;id={企业id}&amp;secert={应用secert}&amp;agentid={应用id}&amp;msg={你要发的消息}&amp;touser={发送给谁}</a></p></blockquote><p>官方文档：<a href="https://work.weixin.qq.com/api/doc/90001/90143/90372">https://work.weixin.qq.com/api/doc/90001/90143/90372</a></p><blockquote><p>同类功能接口及教程：<a href="https://blog.zhheo.com/p/1e9f35bc.html">https://blog.zhheo.com/p/1e9f35bc.html</a></p></blockquote><h2 id="github相关的接口"><a class="markdownIt-Anchor" href="#github相关的接口"></a> Github相关的接口</h2><p>此类接口地址全部为：<code>/github</code>，通过<code>type</code>区分操作类型。</p><h3 id="触发actions"><a class="markdownIt-Anchor" href="#触发actions"></a> 触发Actions</h3><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">含义</th><th style="text-align:center">示例值</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center">【必填】操作类型</td><td style="text-align:center"><code>dispatch</code></td></tr><tr><td style="text-align:center"><code>owner</code></td><td style="text-align:center">【必填】仓库主人用户名</td><td style="text-align:center"><code>iServes</code></td></tr><tr><td style="text-align:center"><code>repo</code></td><td style="text-align:center">【必填】仓库名</td><td style="text-align:center"><code>actions-friend-spider</code></td></tr><tr><td style="text-align:center"><code>token</code></td><td style="text-align:center">【必填】生成个人Token，不会请参考<a href="https://www.antmoe.com/posts/cdc580cd/">项目中常用的密钥获取方式</a></td><td style="text-align:center"><code>xxxxxxxx</code></td></tr><tr><td style="text-align:center"><code>runit_text</code></td><td style="text-align:center">【可选】触发Actions时的文本</td><td style="text-align:center"><code>test</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 参考手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vercel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目中常用的密钥获取方式</title>
      <link href="/posts/cdc580cd/"/>
      <url>/posts/cdc580cd/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>此文记录项目中常用的密钥获取，例如GitHub的token，码云的token等。</p><h2 id="github的token"><a class="markdownIt-Anchor" href="#github的token"></a> Github的Token</h2><ol><li><p>登录GitHub后，打开网址<a href="https://github.com/settings/tokens">tokens</a></p></li><li><p>添加一个新的token</p><p><img src="https://file.acs.pw/picGo/2021/3/4/a09072680d3cfb3252cfebec940309ad.png" alt="image-20210304091152601" /></p></li><li><p>至于权限根据自己项目需求给就行，或者生成一个全权限的token，每次直接用这个token即可。</p></li></ol><h2 id="gitee的token"><a class="markdownIt-Anchor" href="#gitee的token"></a> Gitee的Token</h2><ol><li><p>登录Gitee后，打开网址<a href="https://gitee.com/profile/personal_access_tokens">tokens</a></p></li><li><p>添加一个新的令牌</p><p><img src="https://file.acs.pw/picGo/2021/3/4/1cfdb41abfd673912152804a4cfed15d.png" alt="image-20210304091340788" /></p></li><li><p>至于权限根据自己项目需求给就行，或者生成一个全权限的token，每次直接用这个token即可。</p></li></ol><h2 id="npm的token"><a class="markdownIt-Anchor" href="#npm的token"></a> NPM的Token</h2><ol><li><p>登录<a href="https://www.npmjs.com/">NPM</a>官网后，打开网址<a href="https://www.npmjs.com/settings/antmoe/tokens">tokens</a></p></li><li><p>生成一个新的token即可。</p><p><img src="https://file.acs.pw/picGo/2021/3/4/e058f008537bfa803f0de3530c3f9a14.png" alt="image-20210304091546588" /></p></li><li><p>至于权限，如果我们用于CI/CD调用，一般选择<code>Automation</code>即可。</p><p><img src="https://file.acs.pw/picGo/2021/3/4/175f28d03fc0a6787c95c90767dcf65c.png" alt="image-20210304091642152" /></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 参考手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>规范化Commit提交信息</title>
      <link href="/posts/40e311db/"/>
      <url>/posts/40e311db/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>自从上次写了<a href="https://www.antmoe.com/posts/34ede0da/index.html">Commit 表情符号使用指南</a>后，提交信息便一直使用标签符号进行提交。虽然好看，但是提交终归是不太方便，每次还需要打开文章进行符号搜索，然后粘贴。于是参考网上的各种规范记录此文。</p><h2 id="提交预览"><a class="markdownIt-Anchor" href="#提交预览"></a> 提交预览</h2><div class="tabs" id="message1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#message1-1">提交格式</button></li><li class="tab"><button type="button" data-href="#message1-2">参数说明(type)</button></li><li class="tab"><button type="button" data-href="#message1-3">参数说明(scope)</button></li><li class="tab"><button type="button" data-href="#message1-4">参数说明(subject)</button></li><li class="tab"><button type="button" data-href="#message1-5">示例</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="message1-1"><pre class="line-numbers language-none"><code class="language-none">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="message1-2"><blockquote><p>用于说明git commit的类别，只允许使用下面的标识。</p><p>以下表格来自<a href="https://zhuanlan.zhihu.com/p/182553920?utm_source=org.mozilla.firefox">阿里技术</a></p></blockquote><table><thead><tr><th style="text-align:center">标识</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><code>feat</code></td><td style="text-align:center">新功能（feature）</td></tr><tr><td style="text-align:center"><code>fix/to</code></td><td style="text-align:center">修复bug，可以是QA发现的BUG，也可以是研发自己发现的BUG。<br/><code>fix</code>：产生diff并自动修复此问题。适合于一次提交直接修复问题<br /><code>to</code>：只产生diff不自动修复此问题。适合于多次提交。最终修复问题提交时使用fix</td></tr><tr><td style="text-align:center"><code>docs</code></td><td style="text-align:center">文档（documentation）</td></tr><tr><td style="text-align:center"><code>style</code></td><td style="text-align:center">格式（不影响代码运行的变动）</td></tr><tr><td style="text-align:center"><code>refactor</code></td><td style="text-align:center">重构（即不是新增功能，也不是修改bug的代码变动）。</td></tr><tr><td style="text-align:center"><code>perf</code></td><td style="text-align:center">优化相关，比如提升性能、体验。</td></tr><tr><td style="text-align:center"><code>test</code></td><td style="text-align:center">增加测试。</td></tr><tr><td style="text-align:center"><code>chore</code></td><td style="text-align:center">构建过程或辅助工具的变动。</td></tr><tr><td style="text-align:center"><code>revert</code></td><td style="text-align:center">回滚到上一个版本。</td></tr><tr><td style="text-align:center"><code>merge</code></td><td style="text-align:center">代码合并。</td></tr><tr><td style="text-align:center"><code>sync</code></td><td style="text-align:center">同步主线或分支的Bug。</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="message1-3"><p>scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p><p>例如在<code>Angular</code>，可以是<code>$location</code>, <code>$browser</code>, <code>$compile</code>, <code>$rootScope</code>, <code>ngHref</code>, <code>ngClick</code>, <code>ngView</code>等。</p><p>如果你的修改影响了不止一个<code>scope</code>，你可以使用<code>*</code>代替。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="message1-4"><p><code>subject</code>是 commit 目的的简短描述，不超过50个字符。</p><p>建议使用中文（感觉中国人用中文描述问题能更清楚一些）。</p><p>结尾不加句号或其他标点符号。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="message1-5"><pre class="line-numbers language-none"><code class="language-none">fix(DAO): 用户查询缺少username属性 feat(Controller): 用户查询接口开发<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="工具"><a class="markdownIt-Anchor" href="#工具"></a> 工具</h2><h3 id="vscode"><a class="markdownIt-Anchor" href="#vscode"></a> VScode</h3><p>vscode中<code>Git-commit-plugin</code>插件可以快速生成提交模板。</p><p>设置项</p><ul><li><p>展示Emoji</p><p>默认为<code>true</code>。可在设置中修改</p></li><li><p>提交类型</p><p>增加其他的提交类型，需要在json中添加。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"GitCommitPlugin.CustomCommitType"</span><span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"customTypeName"</span><span class="token punctuation">,</span>    <span class="token property">"detail"</span><span class="token operator">:</span> <span class="token string">"customTypeDetail"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/2/26/bd2758e24c3871454ade002984f32ef0.png" alt="image-20210226204746986" /></p></li><li><p>subject最大长度</p><p>subject的最大长度限制，默认为20。可在设置中修改。</p></li></ul><h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3><ul><li><a href="https://github.com/typicode/husky">https://github.com/typicode/husky</a></li><li><a href="https://commitlint.js.org/#/">https://commitlint.js.org/#/</a></li></ul><h2 id="文章参考"><a class="markdownIt-Anchor" href="#文章参考"></a> 文章参考</h2><ul><li><p><a href="https://segmentfault.com/a/1190000009048911">git commit 规范指南</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/182553920?utm_source=org.mozilla.firefox">如何规范你的Git commit？</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编码规范 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手册查询 </tag>
            
            <tag> 规范commit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一文搞懂弹性盒子flex布局</title>
      <link href="/posts/140eb59/"/>
      <url>/posts/140eb59/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是flex布局"><a class="markdownIt-Anchor" href="#什么是flex布局"></a> 什么是flex布局</h2><p>flex布局又称为弹性盒子模型，它<strong>有自己的一套属性，效率高，学习成本低，兼容性强！</strong></p><p>弹性盒子模型实现 HTML 页面布局是<strong>与方向无关的</strong>。不类似于块级布局侧重垂直方向，内联布局侧重水平方向。</p><p>弹性盒子模型主要<strong>适用于 HTML 页面的组件以及小规模的布局</strong>，而并<strong>不适用于大规模的布局</strong>，否则会影响 HTML 页面性能。</p><details class="toggle" ><summary class="toggle-button" style="">名词定义</summary><div class="toggle-content"><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/09/20200309124626.png" alt="img" /></p><ul><li>伸缩容器（flex container）：包裹伸缩项目的父元素。</li><li>伸缩项目（flex item）：伸缩容器的每个子元素。</li><li>轴（axis）：每个弹性盒子模型拥有两个轴。<ul><li>主轴（main axis）：伸缩项目沿其一次排列的轴被称为主轴。</li><li>侧轴（cross axis）：垂直于主轴的轴被称为侧轴。</li></ul></li><li>方向（direction）：伸缩容器的主轴由主轴起点和主轴终点，侧轴由侧轴起点和侧轴终点描述伸缩项目排列的方向。</li><li>尺寸（dimension）：根据伸缩容器的主轴和侧轴，伸缩项目的宽度和高度。<ul><li>对应主轴的称为主轴尺寸。</li><li>对应侧轴的称为侧轴尺寸。</li></ul></li></ul></div></details><h2 id="定义弹性盒子"><a class="markdownIt-Anchor" href="#定义弹性盒子"></a> 定义弹性盒子</h2><p>弹性盒子是css3新增的属性，因此弹性盒子模型及其属性存在浏览器兼容问题。具体可查看<a href="https://caniuse.com/?search=flex">Can I Use</a>。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span> <span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">display</span> <span class="token punctuation">:</span> inline-flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>flex</code>：设置指定元素为块级元素的弹性盒子模型。</li><li><code>inline-flex</code>：设置指定元素为行内块级元素的弹性盒子模型。</li></ul><p>浏览器兼容前缀</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span><span class="token punctuation">&#123;</span>  <span class="token property">display</span> <span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> -ms-flex<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> -moz-flex<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> -o-flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="flex1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flex1-1">flex</button></li><li class="tab"><button type="button" data-href="#flex1-2">inline-block</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flex1-1"><p>会将容器内的元素按照水平方向进行排列。容器内的元素类似于浮动水平排列在一起</p><p><img src="https://file.acs.pw/picGo/2021/1/25/327b4e1d544eb32fbf75642f5dd40dc6.png" alt="image-20210125153111540" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex1-2"><p>将容器内的元素视为块级元素，按行排列在一起。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/466db4092263f3925fcddf1d139a9a4d.png" alt="image-20210125153621860" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="容器属性"><a class="markdownIt-Anchor" href="#容器属性"></a> 容器属性</h2><p>用于测试的HTML结构。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgray</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightpink</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightsalmon</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightskyblue</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本文所涉及的属性为常用属性及其取值，更多属性及取值请参考<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Flex_Container">MDN</a></p><div class="note danger flat"><p>以下属性作用域弹性盒子的容器。</p></div><h3 id="创建主轴方向"><a class="markdownIt-Anchor" href="#创建主轴方向"></a> 创建主轴方向</h3><p>元素基础样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>flex-direction</code> 属性用于创建主轴的方向。</p><p><strong>容器内子元素的排列方向</strong></p><p><img src="https://file.acs.pw/picGo/2021/1/25/88f718156e75ca09a7b07cbb3bc0af39.png" alt="image-20210125184805938" /></p><div class="tabs" id="flex-direction"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flex-direction-1">row</button></li><li class="tab"><button type="button" data-href="#flex-direction-2">row-reverse</button></li><li class="tab"><button type="button" data-href="#flex-direction-3">column</button></li><li class="tab"><button type="button" data-href="#flex-direction-4">column-reverse</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flex-direction-1"><p><code>row</code>：设置主轴是水平方向。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/37389c5581f1b1e0f393d0be40e6c469.png" alt="image-20210125154908007" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-direction-2"><p><code>row-reverse</code>：与 row 的排列方向相反。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/803603266f73491749545ce23448476f.png" alt="image-20210125154954030" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row-reverse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-direction-3"><p><code>column</code>：设置主轴是垂直方向。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/54aa34ebb2e75870d64dca6df7f3dabe.png" alt="image-20210125155251253" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-direction-4"><p><code>column-reverse</code>：与 column 的排列方向相反。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/590a72e8867f83e75d7962b9f75a767c.png" alt="image-20210125155324411" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column-reverse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="设置沿主轴线的对齐方式"><a class="markdownIt-Anchor" href="#设置沿主轴线的对齐方式"></a> 设置沿主轴线的对齐方式</h3><p>CSS <code>justify-content</code> 属性适用于伸缩容器元素，用于设置伸缩项目沿着主轴线的对齐方式。关于此属性更多取值参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/justify-content">MDN</a></p><p>css基础样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/1/25/08d9bd85aa3da08e92df855455ac420c.png" alt="image-20210125184836199" /></p><div class="tabs" id="flex3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flex3-1">center</button></li><li class="tab"><button type="button" data-href="#flex3-2">flex-start</button></li><li class="tab"><button type="button" data-href="#flex3-3">flex-end</button></li><li class="tab"><button type="button" data-href="#flex3-4">space-between</button></li><li class="tab"><button type="button" data-href="#flex3-5">space-around</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flex3-1"><p><code>center</code>：伸缩项目向第一行的中间位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/3ca45a48c335c9f0acd94adc0d12a288.png" alt="image-20210125160041613" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex3-2"><p><code>flex-start</code>：伸缩项目向第一行的开始位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/ab29192583e9110496601b63929eb8af.png" alt="image-20210125160455842" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex3-3"><p><code>flex-end</code>：伸缩项目向第一行的结束位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/9b46ff363f323af3ef75ffd21a9b54f6.png" alt="image-20210125160618374" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex3-4"><p><code>space-between</code>：伸缩项目会平均分布在一行中。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/a9a0f85b87fd467e48a29f4bd552f02a.png" alt="image-20210125160658914" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><details class="toggle" style="border: 1px solid #feefee"><summary class="toggle-button" style="background-color: #feefee;color: rgb(85">小技巧</summary><div class="toggle-content"><p>当只有两个元素时会导致元素左右两端对齐，如图：</p><p><img src="https://file.acs.pw/picGo/2021/1/29/1b81f487399a03481d437437fb726752.png" alt="image-20210129162910972" /></p><p>可以通过对容器进行设置伪类样式将其排列。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container::after</span> <span class="token punctuation">&#123;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token comment">/* 设置成一个子元素的宽度 */</span>  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/1/29/5c2a2120a1e20e4cad032798e43109ce.png" alt="image-20210129163012081" /></p></div></details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex3-5"><p><code>space-around</code>：伸缩项目会平均分布在一行中，两端保留一半的空间。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/848efdf5bcf7c9c876e5e2bcebfccaa7.png" alt="image-20210125160743719" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="设置沿侧轴线的对齐方式"><a class="markdownIt-Anchor" href="#设置沿侧轴线的对齐方式"></a> 设置沿侧轴线的对齐方式</h3><p>CSS <code>align-items</code> 属性适用于伸缩容器元素，用于设置伸缩项目所在行沿着侧轴线的对齐方式。</p><p>基础CSS样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token comment">/* 主轴对齐方式 */</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/1/25/1cffb7d71df4c341267517e04e634d94.png" alt="image-20210125184854429" /></p><div class="tabs" id="align-items"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#align-items-1">stretch</button></li><li class="tab"><button type="button" data-href="#align-items-2">center</button></li><li class="tab"><button type="button" data-href="#align-items-3">flex-start</button></li><li class="tab"><button type="button" data-href="#align-items-4">flex-end</button></li><li class="tab"><button type="button" data-href="#align-items-5">baseline</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="align-items-1"><p><code>stretch</code>：默认值，伸缩项目拉伸填充整个伸缩容器。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/45063f087bcef0f2da756137e27bed0d.png" alt="image-20210125162146943" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 侧轴对齐方式 */</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-items-2"><p><code>center</code>：伸缩项目向侧轴的中间位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/624fbce6d802f1d792af745771ab51a9.png" alt="image-20210125162237276" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 侧轴对齐方式 */</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-items-3"><p><code>flex-start</code>：伸缩项目向侧轴的起点位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/45063f087bcef0f2da756137e27bed0d.png" alt="image-20210125162146943" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 侧轴对齐方式 */</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-items-4"><p><code>flex-end</code>：伸缩项目向侧轴的终点位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/ee182a22b02e5b71410343411fe9a013.png" alt="image-20210125162455304" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 侧轴对齐方式 */</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-items-5"><p><code>baseline</code>：伸缩项目根据伸缩项目的基线对齐(第一行文字)。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192615.jpeg" alt="image-20210125191144903" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 侧轴对齐方式 */</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="设置单多行显示"><a class="markdownIt-Anchor" href="#设置单多行显示"></a> 设置单/多行显示</h3><p>CSS <code>flex-wrap</code> 属性适用于伸缩容器元素，用于设置伸缩容器的子元素是单行显示还是多行显示。</p><p>基础css样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token comment">/* 主轴对齐方式 */</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/1/25/6e5a1262cfa661dd7a633656a2639b4c.png" alt="image-20210125184821421" /></p><div class="tabs" id="flex-wrap"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flex-wrap-1">nowrap</button></li><li class="tab"><button type="button" data-href="#flex-wrap-2">wrap</button></li><li class="tab"><button type="button" data-href="#flex-wrap-3">wrap-reverse</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flex-wrap-1"><p><code>nowrap</code>：设置伸缩项目单行显示。这种方式可能导致溢出伸缩容器。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/f44c75285737bc115ce759d8da66c29a.png" alt="image-20210125163058707" /></p><blockquote><p>可见，容器宽度900px，容器内一共9个子元素，每个120px，他们紧紧的排列在一起。</p></blockquote><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-wrap-2"><p><code>wrap</code>：设置伸缩项目多行显示。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/6a7a66335ef131c61852a1da4ea223e0.png" alt="image-20210125163225279" /></p><blockquote><p>当多行显示时，第一行放不下的元素会被放到<strong>下一行</strong>（第二行），因为设置了主轴对齐方式为<code>space-between</code>，所以多出来的两个元素分别到了两端。</p></blockquote><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-wrap-3"><p><code>wrap-reverse</code>：与 wrap 相反。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/68f3e9345e97d6168e135a0a57b72767.png" alt="image-20210125163428589" /></p><blockquote><p>当多行显示时，第一行放不下的元素会被放到<strong>上一行</strong>（第二行），因为设置了主轴对齐方式为<code>space-between</code>，所以多出来的两个元素分别到了两端。</p></blockquote><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap-reverse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="设置伸缩行的对齐方式"><a class="markdownIt-Anchor" href="#设置伸缩行的对齐方式"></a> 设置伸缩行的对齐方式</h3><p>CSS <code>align-content</code> 属性适用于伸缩容器元素，用于设置浏览器如何沿着弹性盒子布局的纵轴和网格布局的主轴在内容项之间和周围分配空间。**该属性对单行弹性盒子模型无效。（即：带有 <code>flex-wrap: nowrap</code>）。**更多参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-content">MDN</a></p><p>基础CSS样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>  <span class="token comment">/* 将当前元素设置为弹性盒子模型的伸缩容器 */</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token comment">/* justify-content属性表示项目在主轴的对其方式 */</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>  <span class="token comment">/* 设置伸缩项目是单行显示还是多行显示 */</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/1/25/6c9545234e1c4bc826f896f2df3bffac.png" alt="image-20210125184919489" /></p><div class="tabs" id="align-content"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#align-content-1">stretch</button></li><li class="tab"><button type="button" data-href="#align-content-2">center</button></li><li class="tab"><button type="button" data-href="#align-content-3">flex-start</button></li><li class="tab"><button type="button" data-href="#align-content-4">flex-end</button></li><li class="tab"><button type="button" data-href="#align-content-5">space-between</button></li><li class="tab"><button type="button" data-href="#align-content-6">space-around</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="align-content-1"><p><code>stretch</code>：默认值，各行将会伸展以占用额外的空间。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/3c1090dbd41ba0eba17c7898c87e998a.png" alt="image-20210125165443121" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* align-content属性设置伸缩项目所在行的对齐方式 */</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-content-2"><p><code>center</code>：各行向伸缩容器的中间位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/805a28e03655fbd3119c4afdcb9c4ed1.png" alt="image-20210125165530820" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* align-content属性设置伸缩项目所在行的对齐方式 */</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-content-3"><p><code>flex-start</code>：各行向伸缩容器的起点位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/d30affd9e07a03e34346a8edaaa7a003.png" alt="image-20210125165550793" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* align-content属性设置伸缩项目所在行的对齐方式 */</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-content-4"><p><code>flex-end</code>：各行向伸缩容器的终点位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/0e35ad282dcd38703964d990508fe8cc.png" alt="image-20210125165606310" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* align-content属性设置伸缩项目所在行的对齐方式 */</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-content-5"><p><code>space-between</code>：各行会平均分布在一行中。第一项与起始点齐平，最后一项与终止点齐平。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/dfdf45e4d48810985cc5931aa556b6f2.png" alt="image-20210125165641772" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* align-content属性设置伸缩项目所在行的对齐方式 */</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-content-6"><p><code>space-around</code>：各行会平均分布在一行中，两端保留一半的空间。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/a0b03d2eca5689738240e2dbc22175a3.png" alt="image-20210125165729566" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* align-content属性设置伸缩项目所在行的对齐方式 */</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="flex-flow"><a class="markdownIt-Anchor" href="#flex-flow"></a> <code>flex-flow</code></h3><p>CSS flex-flow 属性适用于伸缩容器元素，该属性是 <code>flex-direction</code> 和 <code>flex-wrap</code> 的简写。</p><p>其语法：<code>flex-flow: &lt;'flex-direction'&gt; || &lt;'flex-wrap'&gt;</code>，示例：<code>flex-flow: row wrap</code></p><h2 id="项目属性"><a class="markdownIt-Anchor" href="#项目属性"></a> 项目属性</h2><h3 id="flex-属性"><a class="markdownIt-Anchor" href="#flex-属性"></a> <code>flex</code> 属性</h3><p><code>flex</code>属性是的属性简称。用于定义剩余空间的分配。更多参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex">MDN</a></p><ul><li><p><code>flex-grow</code></p><p>属性定义项目的放大比例(<strong>剩余空间按比例分配</strong>)。默认为0，即如果存在剩余空间，也不放大。</p><p>其属性的取值为数字。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/c2e4f379f5fe91245eee27eabc7c67b2.png" alt="image-20210125185100165" /></p></li><li><p><code>flex-shrink</code></p><p>属性定义了<strong>项目的缩小比例</strong>，默认为1，即如果空间不足，该项目将缩小。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/ae80f26c2897a68994540eb38de25f3a.png" alt="image-20210125185119475" /></p><blockquote><p>如果所有项目的flex-shrink属性都为1(默认)，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。<strong>负值对该属性无效。</strong></p></blockquote></li><li><p><code>flex-basis</code></p><p>属性定义了在分配多余空间之前，项目占据的主轴空间（main size） 和width有一定的关系，大部分情况和width表现一致，如果两者同时使用flex-basis优先级会高一些</p><details class="toggle" style="border: 1px solid #feefee "><summary class="toggle-button" style="background-color: #feefee ;color:  #4C4948">使用注意</summary><div class="toggle-content"><ol><li>单独使用<code>width</code>，正常使用</li><li>如果单独使用<code>flex-basis</code>，超过会自动变大，不会限制，相当于<code>flex-basis</code>是最小宽度。</li><li>如果同时使用，<strong>实际宽度</strong>为限制<code>flex-basis</code>和<code>width</code>两者的最大者，并且会限制，内容超出直接溢出（不使用break-all）</li><li>如果有<code>max-width</code>和<code>min-width</code>，<code>flex-basis</code>受到这两个属性的限制，<code>flex-basis = max-width</code>，<code>flex-basis = max-width</code></li></ol></div></details><p>如果<code>flex-basis</code>没有设置，<code>flex-basis = width</code>；如果<code>width</code>也没有设置，<code>flex-basis = content</code>的宽度</p></li></ul><div class="note warning flat"><p>三个值的取值以及含义参考博文：<a href="https://blog.csdn.net/m0_37058714/article/details/80765562">css弹性盒子</a></p></div><div class="tabs" id="flex"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flex-1">单值语法</button></li><li class="tab"><button type="button" data-href="#flex-2">双值语法</button></li><li class="tab"><button type="button" data-href="#flex-3">三值语法</button></li><li class="tab"><button type="button" data-href="#flex-4">示例</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flex-1"><ul><li><p>一个无单位数(<number>): 它会被当作<code>flex:&lt;number&gt; 1 0</code>; <code>&lt;flex-shrink&gt;</code>的值被假定为1，然后<code>&lt;flex-basis&gt;</code> 的值被假定为0。</p></li><li><p>一个有效的宽度(width)值: 它会被当作 <flex-basis>的值。</p></li><li><p>关键字none，auto或initial.</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-2"><p>第一个值必须为一个无单位数，并且它会被当作 <code>&lt;flex-grow&gt;</code> 的值。第二个值必须为以下之一：</p><ul><li>一个无单位数：它会被当作 <code>&lt;flex-shrink&gt;</code> 的值。</li><li>一个有效的宽度值: 它会被当作 <code>&lt;flex-basis&gt;</code> 的值。</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-3"><ul><li><p>第一个值必须为一个无单位数，并且它会被当作 <code>&lt;flex-grow&gt;</code> 的值。</p></li><li><p>第二个值必须为一个无单位数，并且它会被当作  <code>&lt;flex-shrink&gt;</code> 的值。</p></li><li><p>第三个值必须为一个有效的宽度值， 并且它会被当作 <code>&lt;flex-basis&gt;</code> 的值。</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flex-4"><details class="toggle" ><summary class="toggle-button" style="">平均分配，中间大左右小</summary><div class="toggle-content"><p><img src="https://file.acs.pw/picGo/2021/1/25/8e3b501d76557f96e16a95ba579c631f.png" alt="image-20210125175448393" /></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>    <span class="token comment">/* 将当前元素设置为弹性盒子模型的伸缩容器 */</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.container div:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">flex</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgray</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightpink</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>将每个div配1等份，而第二个div分配2等份即可。</p></blockquote></div></details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="设置自身元素在侧轴的对齐方式"><a class="markdownIt-Anchor" href="#设置自身元素在侧轴的对齐方式"></a> 设置自身元素在侧轴的对齐方式</h3><p>CSS <code>align-self</code> 属性适用于伸缩容器元素，用于设置伸缩项目自身元素在侧轴的对齐方式。实际上效果与容器属性<code>align-content</code>较为类似</p><p>基础样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>  <span class="token comment">/* 将当前元素设置为弹性盒子模型的伸缩容器 */</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token comment">/* justify-content属性表示项目在主轴的对其方式 */</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>  <span class="token comment">/* 设置伸缩项目是单行显示还是多行显示 */</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="align-self"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#align-self-1">stretch</button></li><li class="tab"><button type="button" data-href="#align-self-2">center</button></li><li class="tab"><button type="button" data-href="#align-self-3">flex-start</button></li><li class="tab"><button type="button" data-href="#align-self-4">flex-end</button></li><li class="tab"><button type="button" data-href="#align-self-5">baseline</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="align-self-1"><p><code>stretch</code>：默认值，伸缩项目拉伸填充整个伸缩容器。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/1/25/3c1090dbd41ba0eba17c7898c87e998a.png" alt="image-20210125165443121" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-self-2"><p><code>center</code>：伸缩项目向侧轴的中间位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/805a28e03655fbd3119c4afdcb9c4ed1.png" alt="image-20210125165530820" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-self-3"><p><code>flex-start</code>：伸缩项目向侧轴的起点位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/d30affd9e07a03e34346a8edaaa7a003.png" alt="image-20210125165550793" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-self-4"><p><code>flex-end</code>：伸缩项目向侧轴的终点位置对齐。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/0e35ad282dcd38703964d990508fe8cc.png" alt="image-20210125165606310" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="align-self-5"><p><code>baseline</code>：伸缩项目根据伸缩项目的基线对齐。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192648.jpeg" alt="image-20210125191732822" /></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container span</span> <span class="token punctuation">&#123;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="设置布局时的顺序"><a class="markdownIt-Anchor" href="#设置布局时的顺序"></a> 设置布局时的顺序</h3><p>CSS <code>order</code> 属性适用于伸缩项目，用于设置伸缩项目在布局时的顺序。默认为0，值越大越靠后。</p><p><img src="https://file.acs.pw/picGo/2021/1/25/64573d89b16a59c241284a68d5a4fb67.png" alt="image-20210125183116414" /></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>    <span class="token comment">/* 将当前元素设置为弹性盒子模型的伸缩容器 */</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token comment">/* justify-content属性表示项目在主轴的对其方式 */</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>    <span class="token comment">/* 设置伸缩项目是单行显示还是多行显示 */</span>    <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.container div:nth-child(1)</span> <span class="token punctuation">&#123;</span>    <span class="token property">order</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.container div:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">order</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.container div:nth-child(3)</span> <span class="token punctuation">&#123;</span>    <span class="token property">order</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgray</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子1 - order:2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子2 - order:3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> lightpink</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>盒子3 - order:1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> HTML&amp;CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5中audio与video</title>
      <link href="/posts/b4f006e7/"/>
      <url>/posts/b4f006e7/</url>
      
        <content type="html"><![CDATA[<h2 id="音频"><a class="markdownIt-Anchor" href="#音频"></a> 音频</h2><p>HTML5中提供的音频API标签为<code>&lt;audio&gt;&lt;/audio&gt;</code>，使用示例如：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>野狼disco.m4a<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note danger flat"><p>兼容写法</p></div><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resource/audio/OUTPUT.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>audio/mpeg<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resource/audio/OUTPUT.aac<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>audio/aac; codecs=<span class="token punctuation">"</span>aac<span class="token punctuation">"</span><span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resource/audio/OUTPUT.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>audio/ogg; codecs=<span class="token punctuation">"</span>vorbis<span class="token punctuation">"</span><span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    您的浏览器不支持，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resource/audio/OUTPUT.mp3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当浏览器不支持或者当前音乐地址失效时会分别访问<code>source</code>提供的路径，如果全部失效则提示最下边的文本。</p><h3 id="音乐属性"><a class="markdownIt-Anchor" href="#音乐属性"></a> 音乐属性</h3><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>controls</code></td><td style="text-align:center">显示控件</td></tr><tr><td style="text-align:center"><code>autoplay</code></td><td style="text-align:center">自动播放</td></tr><tr><td style="text-align:center"><code>loop</code></td><td style="text-align:center">循环播放</td></tr><tr><td style="text-align:center"><code>preload</code></td><td style="text-align:center">预加载</td></tr><tr><td style="text-align:center"><code>muted</code></td><td style="text-align:center">静音</td></tr></tbody></table><h2 id="视频"><a class="markdownIt-Anchor" href="#视频"></a> 视频</h2><p>HTML5中提供的音频API标签为<code>&lt;video&gt;&lt;/video&gt;</code>，使用示例如：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>不能说的秘密.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note success flat"><p>兼容写法与音乐相同</p></div><h3 id="视频属性"><a class="markdownIt-Anchor" href="#视频属性"></a> 视频属性</h3><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>controls</code></td><td style="text-align:center">显示控件</td></tr><tr><td style="text-align:center"><code>autoplay</code></td><td style="text-align:center">自动播放</td></tr><tr><td style="text-align:center"><code>loop</code></td><td style="text-align:center">循环播放</td></tr><tr><td style="text-align:center"><code>muted</code></td><td style="text-align:center">静音</td></tr><tr><td style="text-align:center"><code>poster</code></td><td style="text-align:center">预览图片设置</td></tr><tr><td style="text-align:center"><code>preload</code></td><td style="text-align:center">预加载<br /><code>none</code>:不预先加载任何数据<br /><code>metadata</code>:只预先加载元数据 （视频总时长，第一帧画面图形等）<br /><code>auto</code>:预先加载视频<br /></td></tr></tbody></table><h2 id="音视频事件"><a class="markdownIt-Anchor" href="#音视频事件"></a> 音视频事件</h2><table><thead><tr><th style="text-align:center">事件名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>onloadedmetadata</code></td><td style="text-align:center">当音频元数据加载完毕时触发，作用<strong>在于获取音视频文件的总时长</strong></td></tr><tr><td style="text-align:center"><code>ontimeupdate</code></td><td style="text-align:center">当音频播放时间变化时触发</td></tr><tr><td style="text-align:center"><code>onvolumechange</code></td><td style="text-align:center">当声音改变时触发</td></tr></tbody></table><h2 id="音视频对象属性"><a class="markdownIt-Anchor" href="#音视频对象属性"></a> 音视频对象属性</h2><div class="note success modern"><p>可读可写属性</p></div><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>currentTime</code></td><td style="text-align:center">音频已经播放时长（返回未格式化的秒）</td></tr><tr><td style="text-align:center"><code>volume</code></td><td style="text-align:center">控制音量。值为0 ~ 1的任意值。</td></tr><tr><td style="text-align:center"><code>muted</code></td><td style="text-align:center">布尔值。静音。（ture表示静音，false表示非静音）</td></tr><tr><td style="text-align:center"><code>playbackRate</code></td><td style="text-align:center">播放速率</td></tr></tbody></table><div class="note danger modern"><p>只读属性</p></div><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>duration</code></td><td style="text-align:center">音频总时长（返回未格式化的秒）</td></tr><tr><td style="text-align:center"><code>paused</code></td><td style="text-align:center">布尔值。音频文件是否暂停。（ture表示暂停，false表示播放）</td></tr><tr><td style="text-align:center"><code>ended</code></td><td style="text-align:center">布尔值。音频文件播放结束（ture表示播放结束，false表示播放中或者暂停）</td></tr></tbody></table><h2 id="音视频对象方法"><a class="markdownIt-Anchor" href="#音视频对象方法"></a> 音视频对象方法</h2><table><thead><tr><th style="text-align:center">方法名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>pause</code></td><td style="text-align:center">暂停</td></tr><tr><td style="text-align:center"><code>play</code></td><td style="text-align:center">播放</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> HTML&amp;CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> audio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github之Actions自动发布GitHub Release</title>
      <link href="/posts/18c087cf/"/>
      <url>/posts/18c087cf/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>此文以node项目为例，目录存在<code>package.json</code>，其他项目如果参考本教程需自行创建json文件用于记录当前版本。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"version"</span><span class="token operator">:</span><span class="token string">"1.1.1"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="note danger modern"><p>上述代码仅作为JSON文件示例。</p></div><p>先来看看actions官方提供的发布demo</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 创建GitHub Release  <span class="token key atrule">id</span><span class="token punctuation">:</span> create_release  <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/create<span class="token punctuation">-</span>release@latest  <span class="token key atrule">env</span><span class="token punctuation">:</span>    <span class="token key atrule">GITHUB_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.GITHUB_TOKEN <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token key atrule">with</span><span class="token punctuation">:</span>    <span class="token key atrule">tag_name</span><span class="token punctuation">:</span> tag的名称    <span class="token key atrule">release_name</span><span class="token punctuation">:</span> 发布的名字    <span class="token key atrule">body</span><span class="token punctuation">:</span> 发布的内容    <span class="token key atrule">draft</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">prerelease</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上几个需要我们自己填写的只有<code>tag_name</code>、<code>release_name</code>、<code>body</code>。因此我们只需要动态获取这三个变量即可实现按照我们的需求进行发布。</p><h2 id="获取tag_name"><a class="markdownIt-Anchor" href="#获取tag_name"></a> 获取tag_name</h2><p>tag_name一般指的是版本号，也就是需要在我们的JSON文件中读取的信息。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 读取当前版本号  <span class="token key atrule">id</span><span class="token punctuation">:</span> version  <span class="token key atrule">uses</span><span class="token punctuation">:</span> ashley<span class="token punctuation">-</span>taylor/read<span class="token punctuation">-</span>json<span class="token punctuation">-</span>property<span class="token punctuation">-</span>action@v1.0  <span class="token key atrule">with</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> ./package.json    <span class="token key atrule">property</span><span class="token punctuation">:</span> version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>path</code></p><p>表示Json文件的路径</p></li><li><p><code>property</code></p><p>json文件里的属性名。</p></li></ul><p>所以上述步骤表示读取<code>./package.json</code>文件里的<code>version</code>字段，也就是开头JSON示例中<code>1.1.1</code>值。</p><h2 id="获取release_name"><a class="markdownIt-Anchor" href="#获取release_name"></a> 获取release_name</h2><p>也就是发布release的名称，一般为<code>xxx-</code>版本号这样的格式，因此我们可以直接用版本号作为发布名。</p><h2 id="获取body"><a class="markdownIt-Anchor" href="#获取body"></a> 获取body</h2><p>由于body的内容较多，因此我们单独创建一个文件用于记录本次发布的内容。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 读取描述文件  <span class="token key atrule">id</span><span class="token punctuation">:</span> description  <span class="token key atrule">uses</span><span class="token punctuation">:</span> juliangruber/read<span class="token punctuation">-</span>file<span class="token punctuation">-</span>action@v1  <span class="token key atrule">with</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> ./description.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>path</code></p><p>表示文件的路径</p></li></ul><p>这样下来我们的三个字段就全部获取完了。接下来只需要发布即可</p><h2 id="发布release"><a class="markdownIt-Anchor" href="#发布release"></a> 发布release</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 创建GitHub Release  <span class="token key atrule">id</span><span class="token punctuation">:</span> create_release  <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/create<span class="token punctuation">-</span>release@latest  <span class="token key atrule">env</span><span class="token punctuation">:</span>    <span class="token key atrule">GITHUB_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.GITHUB_TOKEN <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token key atrule">with</span><span class="token punctuation">:</span>    <span class="token key atrule">tag_name</span><span class="token punctuation">:</span> v$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>steps.version.outputs.value<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token key atrule">release_name</span><span class="token punctuation">:</span> v$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>steps.version.outputs.value<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token key atrule">body</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>steps.description.outputs.content<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token key atrule">draft</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">prerelease</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$&#123;&#123;steps.version.outputs.value&#125;&#125;</code>可以输出获取json文件时读取到的值，<code>$&#123;&#123;steps.description.outputs.content&#125;&#125;</code>可以输出获取文本内容时读取到的值。</p><h2 id="完整代码含npm包发布"><a class="markdownIt-Anchor" href="#完整代码含npm包发布"></a> 完整代码（含NPM包发布）</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Node.js Package<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">publish-npm</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">strategy</span><span class="token punctuation">:</span>      <span class="token key atrule">matrix</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>12.x<span class="token punctuation">]</span>    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token comment"># check it to your workflow can access it</span>      <span class="token comment"># from: https://github.com/actions/checkout</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 1. 检查master分支        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master      <span class="token comment"># from: https://github.com/actions/setup-node</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 2. 设置Node.js        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@master        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 3. 缓存        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v2        <span class="token key atrule">id</span><span class="token punctuation">:</span> cache<span class="token punctuation">-</span>dependencies        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> node_modules          <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>runner.OS<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>hashFiles('<span class="token important">**/yarn.lock')</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 4. 安装插件        <span class="token key atrule">if</span><span class="token punctuation">:</span> steps.cache<span class="token punctuation">-</span>dependencies.outputs.cache<span class="token punctuation">-</span>hit <span class="token tag">!=</span> 'true'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          export TZ='Asia/Shanghai'          yarn install</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 5. 生成文件        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          export TZ='Asia/Shanghai'          node index.js</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 6. 读取当前版本号        <span class="token key atrule">id</span><span class="token punctuation">:</span> version        <span class="token key atrule">uses</span><span class="token punctuation">:</span> ashley<span class="token punctuation">-</span>taylor/read<span class="token punctuation">-</span>json<span class="token punctuation">-</span>property<span class="token punctuation">-</span>action@v1.0        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> ./package.json          <span class="token key atrule">property</span><span class="token punctuation">:</span> version      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 7. 读取描述文件        <span class="token key atrule">id</span><span class="token punctuation">:</span> description        <span class="token key atrule">uses</span><span class="token punctuation">:</span> juliangruber/read<span class="token punctuation">-</span>file<span class="token punctuation">-</span>action@v1        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> ./description.txt      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 8. 发布NPM包        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN          npm publish</span>        <span class="token key atrule">env</span><span class="token punctuation">:</span>          <span class="token key atrule">NPM_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>secrets.NPM_TOKEN<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 9. 创建GitHub Release        <span class="token key atrule">id</span><span class="token punctuation">:</span> create_release        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/create<span class="token punctuation">-</span>release@latest        <span class="token key atrule">env</span><span class="token punctuation">:</span>          <span class="token key atrule">GITHUB_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.GITHUB_TOKEN <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">tag_name</span><span class="token punctuation">:</span> v$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>steps.version.outputs.value<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">release_name</span><span class="token punctuation">:</span> v$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>steps.version.outputs.value<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">body</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>steps.description.outputs.content<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">draft</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>          <span class="token key atrule">prerelease</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 10. 刷新缓存        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          curl https://purge.jsdelivr.net/npm/iemotion-pic@latest/dist/name.json</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 部署与构建 </category>
          
          <category> Github Actions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub release </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小康的butterfly主题使用文档</title>
      <link href="/posts/3b43914f/"/>
      <url>/posts/3b43914f/</url>
      
        <content type="html"><![CDATA[<h2 id="文件头"><a class="markdownIt-Anchor" href="#文件头"></a> 文件头</h2><h3 id="page-front-matter"><a class="markdownIt-Anchor" href="#page-front-matter"></a> Page Front-matter</h3><table><thead><tr><th style="text-align:center">写法</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">【必需】页面标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">【必需】页面创建日期</td></tr><tr><td style="text-align:center">type</td><td style="text-align:center">【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">【可选】页面更新日期</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">【可选】页面描述</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">【可选】页面关键字</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示页面评论模块(默认 true)</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">【可选】页面顶部图片</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧边栏 (默认 true)</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table><h3 id="post-front-matter"><a class="markdownIt-Anchor" href="#post-front-matter"></a> Post Front-matter</h3><table><thead><tr><th style="text-align:center">写法</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">【必需】文章标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">【必需】文章创建日期</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">【可选】文章更新日期</td></tr><tr><td style="text-align:center">tags</td><td style="text-align:center">【可选】文章标籤</td></tr><tr><td style="text-align:center">categories</td><td style="text-align:center">【可选】文章分类</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">【可选】文章关键字</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">【可选】文章描述</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">【可选】文章顶部图片</td></tr><tr><td style="text-align:center">cover</td><td style="text-align:center">【可选】文章缩略图(如果没有设置 top_img,文章页顶部将显示缩略图，可设为 false/图片地址/留空)</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示文章评论模块(默认 true)</td></tr><tr><td style="text-align:center">toc</td><td style="text-align:center">【可选】显示文章 TOC(默认为设置中 toc 的 enable 配置)</td></tr><tr><td style="text-align:center">toc_number</td><td style="text-align:center">【可选】显示 toc_number(默认为设置中 toc 的 number 配置)</td></tr><tr><td style="text-align:center">copyright</td><td style="text-align:center">【可选】显示文章版权模块(默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td style="text-align:center">copyright_author</td><td style="text-align:center">【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td style="text-align:center">copyright_author_href</td><td style="text-align:center">【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td style="text-align:center">copyright_url</td><td style="text-align:center">【可选】文章版权模块的<code>文章连结</code>链接</td></tr><tr><td style="text-align:center">copyright_info</td><td style="text-align:center">【可选】文章版权模块的<code>版权声明</code>文字</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧边栏 (默认 true)</td></tr><tr><td style="text-align:center">hide</td><td style="text-align:center">【可选】隐藏文章</td></tr><tr><td style="text-align:center">sticky</td><td style="text-align:center">【可选】文章置顶，值越大越考上</td></tr></tbody></table><h2 id="外挂标签"><a class="markdownIt-Anchor" href="#外挂标签"></a> 外挂标签</h2><h3 id="相册"><a class="markdownIt-Anchor" href="#相册"></a> 相册</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% gallery %&#125;markdown 图片格式&#123;% endgallery %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="fj-gallery"><p><img src="https://tva1.sinaimg.cn/large/832afe33ly1gbi87185y4g209g09gmy4.gif" alt="loading5.gif" /><br /><img src="https://tva1.sinaimg.cn/large/832afe33ly1gbi8718jtpg20r00lc776.gif" alt="loading1.gif" /><br /><img src="https://tva1.sinaimg.cn/large/832afe33ly1gbi8718495g20b40b4weq.gif" alt="loading2.gif" /><br /><img src="https://tva1.sinaimg.cn/large/832afe33ly1gbi8718vdsg20ee0d4gmz.gif" alt="loading3.gif" /><br /><img src="https://tva1.sinaimg.cn/large/832afe33ly1gbi87195tcg20m80godif.gif" alt="loading4.gif" /></p>          </div><h3 id="相册图库"><a class="markdownIt-Anchor" href="#相册图库"></a> 相册图库</h3><p>写法</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery-group-main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  &#123;% galleryGroup name description link img-url %&#125; &#123;% galleryGroup name  description link img-url %&#125; &#123;% galleryGroup name description link img-url %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>name：图库名字</li><li>description：图库描述</li><li>link：连接到对应相册的地址</li><li>img-url：图库封面的地址</li></ul><p>示例</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery-group-main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  &#123;% galleryGroup '壁纸' '收藏的一些壁纸' '/Gallery/wallpaper'  https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %&#125; &#123;% galleryGroup '漫威'  '关于漫威的图片' '/Gallery/marvel'  https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %&#125; &#123;% galleryGroup 'OH MY  GIRL' '关于OH MY GIRL的图片' '/Gallery/ohmygirl'  https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/22/20200322082005.png" alt="" /></p><h3 id="note"><a class="markdownIt-Anchor" href="#note"></a> Note</h3><h4 id="内置图标"><a class="markdownIt-Anchor" href="#内置图标"></a> 内置图标</h4><div class="tabs" id="built-inicons"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#built-inicons-1">simple</button></li><li class="tab"><button type="button" data-href="#built-inicons-2">modern</button></li><li class="tab"><button type="button" data-href="#built-inicons-3">flat</button></li><li class="tab"><button type="button" data-href="#built-inicons-4">disabled</button></li><li class="tab"><button type="button" data-href="#built-inicons-5">no-icon</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="built-inicons-1"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="built-inicons-2"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> note modern <span class="token operator">%</span><span class="token punctuation">&#125;</span>默认 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note <span class="token keyword">default</span> modern <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token keyword">default</span> 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note primary modern <span class="token operator">%</span><span class="token punctuation">&#125;</span>primary 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note success modern <span class="token operator">%</span><span class="token punctuation">&#125;</span>success 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note info modern <span class="token operator">%</span><span class="token punctuation">&#125;</span>info 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note warning modern <span class="token operator">%</span><span class="token punctuation">&#125;</span>warning 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note danger modern <span class="token operator">%</span><span class="token punctuation">&#125;</span>danger 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="built-inicons-3"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> note flat <span class="token operator">%</span><span class="token punctuation">&#125;</span>默认 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note <span class="token keyword">default</span> flat <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token keyword">default</span> 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note primary flat <span class="token operator">%</span><span class="token punctuation">&#125;</span>primary 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note success flat <span class="token operator">%</span><span class="token punctuation">&#125;</span>success 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note info flat <span class="token operator">%</span><span class="token punctuation">&#125;</span>info 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note warning flat <span class="token operator">%</span><span class="token punctuation">&#125;</span>warning 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> note danger flat <span class="token operator">%</span><span class="token punctuation">&#125;</span>danger 提示块标签<span class="token punctuation">&#123;</span><span class="token operator">%</span> endnote <span class="token operator">%</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="built-inicons-4"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="built-inicons-5"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="自定义图标"><a class="markdownIt-Anchor" href="#自定义图标"></a> 自定义图标</h4><div class="tabs" id="customicon"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#customicon-1">sample</button></li><li class="tab"><button type="button" data-href="#customicon-2">modern</button></li><li class="tab"><button type="button" data-href="#customicon-3">flat</button></li><li class="tab"><button type="button" data-href="#customicon-4">disabled</button></li><li class="tab"><button type="button" data-href="#customicon-5">no-icon</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="customicon-1"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note 'fab fa-cc-visa' simple %&#125;你是刷 Visa 还是是 UnionPay&#123;% endnote %&#125;&#123;% note red 'fas fa-bullhorn' simple %&#125;2021 年快到了....&#123;% endnote %&#125;&#123;% note pink 'fas fa-car-crash' simple %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note green 'fas fa-fan' simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange 'fas fa-battery-half' simple %&#125;该充电了哦！&#123;% endnote %&#125;&#123;% note purple 'far fa-hand-scissors' simple %&#125;剪刀石頭布&#123;% endnote %&#125;&#123;% note blue 'fab fa-internet-explorer' simple %&#125;前端最討厭的瀏覽器&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是是 UnionPay</p></div><div class="note red icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了…</p></div><div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note green icon simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>该充电了哦！</p></div><div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note blue icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="customicon-2"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note 'fab fa-cc-visa' modern %&#125;你是刷 Visa 还是是 UnionPay&#123;% endnote %&#125;&#123;% note red 'fas fa-bullhorn' modern %&#125;2021 年快到了....&#123;% endnote %&#125;&#123;% note pink 'fas fa-car-crash' modern %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note green 'fas fa-fan' modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange 'fas fa-battery-half' modern %&#125;该充电了哦！&#123;% endnote %&#125;&#123;% note purple 'far fa-hand-scissors' modern %&#125;剪刀石頭布&#123;% endnote %&#125;&#123;% note blue 'fab fa-internet-explorer' modern %&#125;前端最討厭的瀏覽器&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是是 UnionPay</p></div><div class="note red icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了…</p></div><div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>该充电了哦！</p></div><div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note blue icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="customicon-3"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note 'fab fa-cc-visa' flat %&#125;你是刷 Visa 还是是 UnionPay&#123;% endnote %&#125;&#123;% note red 'fas fa-bullhorn' flat %&#125;2021 年快到了....&#123;% endnote %&#125;&#123;% note pink 'fas fa-car-crash' flat %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note green 'fas fa-fan' flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange 'fas fa-battery-half' flat %&#125;该充电了哦！&#123;% endnote %&#125;&#123;% note purple 'far fa-hand-scissors' flat %&#125;剪刀石頭布&#123;% endnote %&#125;&#123;% note blue 'fab fa-internet-explorer' flat %&#125;前端最討厭的瀏覽器&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是是 UnionPay</p></div><div class="note red icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了…</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note green icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>该充电了哦！</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note blue icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="customicon-4"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note 'fab fa-cc-visa' disabled  %&#125;你是刷 Visa 还是是 UnionPay&#123;% endnote %&#125;&#123;% note red 'fas fa-bullhorn' disabled  %&#125;2021 年快到了....&#123;% endnote %&#125;&#123;% note pink 'fas fa-car-crash' disabled  %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note green 'fas fa-fan' disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange 'fas fa-battery-half' disabled  %&#125;该充电了哦！&#123;% endnote %&#125;&#123;% note purple 'far fa-hand-scissors' disabled  %&#125;剪刀石頭布&#123;% endnote %&#125;&#123;% note blue 'fab fa-internet-explorer' disabled  %&#125;前端最討厭的瀏覽器&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="customicon-5"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue no-icon %&#125;2021 年快到了....&#123;% endnote %&#125;&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021 年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="自定义图标阿里图标及颜色"><a class="markdownIt-Anchor" href="#自定义图标阿里图标及颜色"></a> 自定义图标（阿里图标）及颜色</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">/* default */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note icon custom iconfont icon-QQ2<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> #777<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>/* success */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note icon custom iconfont icon-QQ2<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background</span><span class="token punctuation">:</span> #eff8f0<span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> #5cb85c<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>/* primary */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note icon custom iconfont icon-QQ2<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background</span><span class="token punctuation">:</span> #f5f0fa<span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> #6f42c1<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>primary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>/* info */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note icon custom iconfont icon-QQ2<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background</span><span class="token punctuation">:</span> #eef7fa<span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> #428bca<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>/* warning */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note icon custom iconfont icon-QQ2<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background</span><span class="token punctuation">:</span> #fdf8ea<span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> #f0ad4e<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>warning<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>/* danger */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note icon custom iconfont icon-QQ2<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background</span><span class="token punctuation">:</span> #fcf1f2<span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> #d9534f<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>danger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note  icon custom iconfont icon-QQ2" style="background: #f7f7f7;border-left-color: #777;"><p>default</p></div><div class="note  icon custom iconfont icon-QQ2" style="background: #eff8f0;border-left-color: #5cb85c;"><p>success</p></div><div class="note  icon custom iconfont icon-QQ2" style="background: #f5f0fa;border-left-color: #6f42c1;"><p>primary</p></div><div class="note  icon custom iconfont icon-QQ2" style="background: #eef7fa;border-left-color: #428bca;"><p>info</p></div><div class="note icon custom iconfont icon-QQ2" style="background: #fdf8ea;border-left-color: #f0ad4e;"><p>warning</p></div><div class="note  icon custom iconfont icon-QQ2" style="background: #fcf1f2;border-left-color: #d9534f;"><p>danger</p></div><h3 id="自定义小标签"><a class="markdownIt-Anchor" href="#自定义小标签"></a> 自定义小标签</h3><div class="snote red"><p>默认red</p></div><div class="snote quote"><p>quote</p></div><div class="snote info"><p>info</p></div><div class="snote done"><p>done</p></div><div class="snote success"><p>success</p></div><div class="snote danger"><p>danger</p></div><div class="snote error"><p>error</p></div><div class="snote radiation"><p>radiation</p></div><div class="snote bug"><p>bug</p></div><div class="snote idea yellow"><p>idea-yellow</p></div><div class="snote link blue"><p>link- blue</p></div><div class="snote paperclip"><p>paperclip</p></div><div class="snote todo"><p>todo</p></div><div class="snote msg cyan"><p>msg cyan</p></div><div class="snote guide"><p>guide</p></div><div class="snote download"><p>download</p></div><div class="snote up"><p>up</p></div><div class="snote undo"><p>undo</p></div><div class="snote quote"><p class='p subtitle'>引用框</p><p>引用内容</p></div><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>默认red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote quote<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>quote<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote done<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>done<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>danger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>error<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote radiation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>radiation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote bug<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>bug<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote idea yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>idea-yellow<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote link blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>link- blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote paperclip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>paperclip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote todo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote msg cyan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>msg cyan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote guide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>guide<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote download<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>download<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote undo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>undo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>/* 引用 */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>snote quote<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p subtitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  这是个引用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于颜色及标记控制</p><ul><li><p>彩色图标</p><pre class="line-numbers language-Code" data-language="Code"><code class="language-Code">quote, info, warning, done&#x2F;success, error&#x2F;dangerquote     蓝色引号info      蓝色叹号warning   黄色叹号done      绿色打钩success   绿色打钩error     红色禁止danger    红色打叉<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>灰色图标</p><p>也可以指定颜色</p><pre class="line-numbers language-code" data-language="code"><code class="language-code">radiation, bug, idea, link, paperclip, todo, msg, guide, download, up, undoradiation    核标记bug            爬虫idea        电灯泡link        锁链paperclip   回形针todo        勾选框msg         向右箭头guide       指路牌download    下载标记up          上传标记undo        回转箭头标记<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>颜色</p><pre class="line-numbers language-code" data-language="code"><code class="language-code">clear, light, gray, red, yellow, green, cyan, blue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><h3 id="渐变背景标签"><a class="markdownIt-Anchor" href="#渐变背景标签"></a> 渐变背景标签</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>默认情况<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>error<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip warning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>warning<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip font5 fas fa-atom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>自定义font5图标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip custom icon-QQ2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>自定义iconfont图标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip wtgo font5 fas fa-bolt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip ban font5 fas fa-ban<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip home font5 fas fa-home<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip important font5 fas fa-home<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>魔改标签4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip ref font5 fas fa-sync<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>魔改标签5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip ffa font5 fas fa-cogs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>魔改标签6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip key font5 fas fa-key<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>魔改标签7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip socd font5 fas fa-bell<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>魔改标签8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip qq font5 fab fa-qq<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>魔改标签9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class='tip' ><p>默认情况<p></div><div class='tip info'><p>info<p></div><div class='tip success'><p>success<p></div><div class='tip error'><p>error<p></div><div class='tip warning'><p>warning<p></div><div class='tip font5 fas fa-atom'><p>自定义fontawesome5图标<p></div><div class='tip font5 fab fa-qq'><p>自定义fontawesome5图标<p></div><div class='tip custom icon-QQ2'><p>自定义iconfont图标<p></div><div class="tip wtgo font5 fas fa-bolt"><p>文字</p><p></p></div><div class="tip ban font5 fas fa-ban"><p>文字</p><p></p></div><div class="tip home font5 fas fa-home"><p>文字</p><p></p></div><div class="tip important font5 fas fa-home"><p>魔改标签4</p><p></p></div><div class="tip ref font5 fas fa-sync"><p>魔改标签5</p><p></p></div><div class="tip ffa font5 fas fa-cogs"><p>魔改标签6</p><p></p></div><div class="tip key font5 fas fa-key"><p>魔改标签7</p><p></p></div><div class="tip socd font5 fas fa-bell"><p>魔改标签8</p><p></p></div><div class="tip qq font5 fab fa-qq"><p>魔改标签9</p><p></p></div><h3 id="小标签及边框颜色"><a class="markdownIt-Anchor" href="#小标签及边框颜色"></a> 小标签及边框颜色</h3><p><span class="inline-tag red">红色小标签</span> <span class="inline-tag green">绿色小标签</span> <span class="inline-tag blue">蓝色小标签</span> <span class="inline-tag yellow">黄色小标签</span> <span class="inline-tag grey">灰色小标签</span></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-tag [red|green|blue|yellow|grey]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>语法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-tag red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>红色小标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-tag green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>绿色小标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-tag blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>蓝色小标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-tag yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>黄色小标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-tag grey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>灰色小标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义颜色</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-tag<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">--Color</span><span class="token punctuation">:</span>#881B12</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>自定义颜色小标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="tabs" id="text-label"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#text-label-1">示例</button></li><li class="tab"><button type="button" data-href="#text-label-2">代码</button></li><li class="tab"><button type="button" data-href="#text-label-3">语法</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="text-label-1"><p>臣亮言：<mark class="hl-label default">先帝</mark> 創業未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此誠<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈於內；<mark class="hl-label purple">忠志之士</mark> ，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。<br />宮中、府中，俱為一體；陟罰臧否，不宜異同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-label-2"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">臣亮言：&#123;% label 先帝 %&#125;創業未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此誠&#123;% label 危急存亡之秋 red %&#125;也！然侍衞之臣，不懈於內；&#123;% label 忠志之士 purple %&#125;，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。宮中、府中，俱為一體；陟罰臧否，不宜異同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-label-3"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% label text color %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">text</td><td style="text-align:center">文字</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">可选背景颜色，默认<code>default</code><br />default/blue/pink/red/purple/orange/green</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p class="div-border top red">上边框</p><p class="div-border right red">右边框</p><p class="div-border bottom red">下边框</p><p class="div-border left red">左边框</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border [left|right|top|bottom] [red|green|blue|yellow|grey]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  语法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border top red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border right red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border bottom red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>下边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border left red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>预设颜色分别为<code>red</code>、<code>green</code>、<code>blue</code>、<code>yellow</code>、<code>grey</code>也就是小标签的五种颜色</p><p>自定义颜色</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class="div-border</span> <span class="token attr-name">left</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">--Color</span><span class="token punctuation">:</span>#881B12</span><span class="token punctuation">"</span></span></span><span class="token attr-name">"</span><span class="token punctuation">></span></span>左边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="全边框及自定义颜色"><a class="markdownIt-Anchor" href="#全边框及自定义颜色"></a> 全边框及自定义颜色</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>82<span class="token punctuation">,</span>196<span class="token punctuation">,</span>26<span class="token punctuation">,</span>.1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid #52c41a<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 0.4rem<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  全边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>/* 或者如下写法 */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>82<span class="token punctuation">,</span>196<span class="token punctuation">,</span>26<span class="token punctuation">,</span>.1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid #52c41a<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 0.4rem<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  全边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>/* 内置样式 */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>绿色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>红色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>黄色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border grey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>灰色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div-border blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>蓝色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p class="div-border" style="background-color: rgba(82,196,26,.1);border: 1px solid #52c41a;border-radius: 0.4rem;">全边框</p><p class='div-border green'>绿色</p><p class='div-border red'>红色</p><p class='div-border yellow'>黄色</p><p class='div-border grey'>灰色</p><p class='div-border blue'>蓝色</p><h3 id="行内小标签"><a class="markdownIt-Anchor" href="#行内小标签"></a> 行内小标签</h3><div class="tabs" id="inline-label"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#inline-label-1">下划线</button></li><li class="tab"><button type="button" data-href="#inline-label-2">着重线</button></li><li class="tab"><button type="button" data-href="#inline-label-3">波浪线</button></li><li class="tab"><button type="button" data-href="#inline-label-4">删除线</button></li><li class="tab"><button type="button" data-href="#inline-label-5">按键</button></li><li class="tab"><button type="button" data-href="#inline-label-6">隐藏框</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="inline-label-1"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><u>下划线</u></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-2"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>emp</span><span class="token punctuation">></span></span>着重线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>emp</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><emp>着重线</emp></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-3"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wavy</span><span class="token punctuation">></span></span>波浪线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wavy</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><wavy>波浪线</wavy></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-4"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><del>删除线</del></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-5"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>command<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><kbd>command</kbd></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-6"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>psw</span><span class="token punctuation">></span></span>这里没有验证码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>psw</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><psw>这里没有验证码</psw></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="时间线"><a class="markdownIt-Anchor" href="#时间线"></a> 时间线</h3><div class="tabs" id="inline-label"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#inline-label-1">语法</button></li><li class="tab"><button type="button" data-href="#inline-label-2">示例</button></li><li class="tab"><button type="button" data-href="#inline-label-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="inline-label-1"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% timeline 时间节点标题,颜色 %&#125;<span class="token comment">&lt;!-- timeline 时间节点 --></span>正文内容<span class="token comment">&lt;!-- endtimeline --></span>&#123;% endtimeline %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-2"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% timeline 2022,red %&#125;<span class="token comment">&lt;!-- timeline 01-02 --></span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --></span>&#123;% endtimeline %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-3"><div class="timeline red"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>這是測試頁面</p></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="link"><a class="markdownIt-Anchor" href="#link"></a> Link</h3><div class="tabs" id="inline-label"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#inline-label-1">语法</button></li><li class="tab"><button type="button" data-href="#inline-label-2">示例</button></li><li class="tab"><button type="button" data-href="#inline-label-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="inline-label-1"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% link 标题, 链接, 图片 %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-2"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% link 小康博客, http://www.antmoe.com/, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inline-label-3"><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><div style="display: inline-block;"><a class='link-card' target="_blank" rel="external nofollow noopener noreferrer" title='http://www.antmoe.com/' href='http://www.antmoe.com/'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg></div><div class='right'><p class='text'>小康博客</p><p class='url'>http://www.antmoe.com/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="flink"><a class="markdownIt-Anchor" href="#flink"></a> flink</h3><div class="tabs" id="flink"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flink-1">语法</button></li><li class="tab"><button type="button" data-href="#flink-2">示例</button></li><li class="tab"><button type="button" data-href="#flink-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flink-1"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% flink %&#125;xxxxxx&#123;% endflink %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flink-2"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% flink %&#125;<span class="token list punctuation">-</span> class_name: 友情鏈接  class_desc: 那些人，那些事  link_list:  <span class="token list punctuation">-</span> name: JerryC    link: https://jerryc.me/    avatar: https://jerryc.me/img/avatar.png    descr: 今日事,今日畢  <span class="token list punctuation">-</span> name: Hexo    link: https://hexo.io/zh-tw/    avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg    descr: 快速、簡單且強大的網誌框架<span class="token list punctuation">-</span> class_name: 網站  class_desc: 值得推薦的網站  link_list: - name: Youtube  link: https://www.youtube.com/  avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png  descr: 視頻網站 - name: Weibo  link: https://www.weibo.com/  avatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png  descr: 中國最大社交分享平臺 - name: Twitter  link: https://twitter.com/  avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png  descr: 社交分享平臺  &#123;% endflink %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flink-3"><div class="flink"><div class="flink-name">友情鏈接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror='this.onerror=null;this.src="https://cdn1.tianli0.top/npm/kang-static/Hexo/img/friend_404.gif"' alt="JerryC" />              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日畢">今日事,今日畢</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror='this.onerror=null;this.src="https://cdn1.tianli0.top/npm/kang-static/Hexo/img/friend_404.gif"' alt="Hexo" />              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、簡單且強大的網誌框架">快速、簡單且強大的網誌框架</div>            </a>          </div></div><div class="flink-name">網站</div><div class="flink-desc">值得推薦的網站</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://www.youtube.com/" title="Youtube" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png" onerror='this.onerror=null;this.src="https://cdn1.tianli0.top/npm/kang-static/Hexo/img/friend_404.gif"' alt="Youtube" />              </div>              <div class="flink-item-name">Youtube</div>               <div class="flink-item-desc" title="視頻網站">視頻網站</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://www.weibo.com/" title="Weibo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png" onerror='this.onerror=null;this.src="https://cdn1.tianli0.top/npm/kang-static/Hexo/img/friend_404.gif"' alt="Weibo" />              </div>              <div class="flink-item-name">Weibo</div>               <div class="flink-item-desc" title="中國最大社交分享平臺">中國最大社交分享平臺</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://twitter.com/" title="Twitter" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png" onerror='this.onerror=null;this.src="https://cdn1.tianli0.top/npm/kang-static/Hexo/img/friend_404.gif"' alt="Twitter" />              </div>              <div class="flink-item-name">Twitter</div>               <div class="flink-item-desc" title="社交分享平臺">社交分享平臺</div>            </a>          </div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="隐藏内容"><a class="markdownIt-Anchor" href="#隐藏内容"></a> 隐藏内容</h3><p>隐藏一些内容，需要点击才能插看</p><p><code>inline</code> 在文本里面添加按钮隐藏内容，只限文字</p><p>( content 不能包含当引号，可用 <code>&amp;apos;</code>)</p><p><code>block</code> 独立的 block 隐藏内容，可以隐藏很多内容，包括图片，`代码块等等</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% hideInline content,display,bg,color %&#125;&#123;% hideBlock display,bg,color %&#125;content&#123;% endhideBlock %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>content: 文本内容</li><li>display: 按钮显示的文字 (可选)</li><li>bg: 按钮的背景颜色 (可选)</li><li>color: 按钮文字的颜色 (可选)</li></ul><p>示例：</p><p>隐藏 inline 内容 <span class="hide-inline"><button type="button" class="hide-button" style="">Click  </button><span class="hide-content">这是隐藏内容</span></span></p><p>隐藏 block 内容<div class="hide-block"><button type="button" class="hide-button" style="">这是隐藏内容    </button><div class="hide-content"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></div></p><h3 id="hidetoggle"><a class="markdownIt-Anchor" href="#hidetoggle"></a> hideToggle</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% hideToggle display,bg,color %&#125;content&#123;% endhideToggle %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hide-toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hide-button toggle-title<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-caret-right fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hide-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>默认效果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>content: 文本内容</li><li>display: 显示的文字 (可选)</li><li>bg: 背景颜色 (可选)</li><li>color: 文字的颜色 (可选)</li></ul><details class="toggle" ><summary class="toggle-button" style="">文字</summary><div class="toggle-content"><p>默认效果</p></div></details><h3 id="mermaid"><a class="markdownIt-Anchor" href="#mermaid"></a> mermaid</h3><p>使用 mermaid 标签可以绘制 Flowchart（流程图）、Sequence diagram（时序图 ）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和 Pie Chart（圆形图），具体可以查看<a href="https://mermaid-js.github.io/mermaid/#/">mermaid 文档</a></p><p>写法</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% mermaid %&#125;内容&#123;% endmermaid %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>示例</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% mermaid %&#125;pietitle Key elements in Product X"Calcium" : 42.96"Potassium" : 50.05"Magnesium" : 10.01"Iron" : 5&#123;% endmermaid %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="checkbox-radio"><a class="markdownIt-Anchor" href="#checkbox-radio"></a> Checkbox &amp; Radio</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数列表：</p><ul><li><p>颜色</p><p><code>red, yellow, green, cyan, blue</code></p></li><li><p>样式</p><p><code>plus, minus, times</code></p></li><li><p>选中状态</p><p><code>checked</code></p></li></ul><p>tag 标签格式</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% checkbox 纯文本测试 %&#125;&#123;% checkbox checked, 支持简单的 <span class="token url">[<span class="token content">markdown</span>](<span class="token url">https://guides.github.com/features/mastering-markdown/</span>)</span> 语法 %&#125;&#123;% checkbox red, 支持自定义颜色 %&#125;&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;&#123;% checkbox plus green checked, 增加 %&#125;&#123;% checkbox minus yellow checked, 减少 %&#125;&#123;% checkbox times red checked, 叉 %&#125;&#123;% radio 纯文本测试 %&#125;&#123;% radio checked, 支持简单的 <span class="token url">[<span class="token content">markdown</span>](<span class="token url">https://guides.github.com/features/mastering-markdown/</span>)</span> 语法 %&#125;&#123;% radio red, 支持自定义颜色 %&#125;&#123;% radio green, 绿色 %&#125;&#123;% radio yellow, 黄色 %&#125;&#123;% radio cyan, 青色 %&#125;&#123;% radio blue, 蓝色 %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>html 格式</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>纯文本测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    支持简单的    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>      <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://guides.github.com/features/mastering-markdown/<span class="token punctuation">"</span></span>      <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>      <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>markdown<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>    <span class="token punctuation">></span></span>    语法  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>支持自定义颜色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox green checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>绿色 + 默认选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox yellow checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>黄色 + 默认选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox cyan checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>青色 + 默认选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox blue checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>蓝色 + 默认选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox plus green checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>增加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox minus yellow checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>减少<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox times red checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>叉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>纯文本测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    支持简单的    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>      <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://guides.github.com/features/mastering-markdown/<span class="token punctuation">"</span></span>      <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>      <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>markdown<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>    <span class="token punctuation">></span></span>    语法  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>支持自定义颜色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>绿色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>黄色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox cyan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>青色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>蓝色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><h3 id="按钮"><a class="markdownIt-Anchor" href="#按钮"></a> 按钮</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% btn [url],[text],[icon],<span class="token url">[<span class="token content">color</span>] [<span class="token variable">style</span>]</span> <span class="token url">[<span class="token content">layout</span>] [<span class="token variable">position</span>]</span> [size] %&#125;[url] : 链接[text] : 按钮文字[icon] : [可选] 图标[color] : [可选] 按钮背景顔色(默认 style 时）按钮字体和边框顔色(outline 时)default/blue/pink/red/purple/orange/green[style] : [可选] 按钮样式 默认实心outline/留空[layout] : [可选] 按钮佈局 默认为 lineblock/留空[position] : [可选] 按钮位置 前提是设置了 layout 为 block 默认为左边center/right/留空[size] : [可选] 按钮大小larger/留空<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="demo1"><a class="markdownIt-Anchor" href="#demo1"></a> demo1</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">This is my website, click the button &#123;% btn 'http://www.antmoe.com',小康博客 %&#125;This is my website, click the button &#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right %&#125;This is my website, click the button &#123;% btn 'http://www.antmoe.com',小康博客,,outline %&#125;This is my website, click the button &#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline %&#125;This is my website, click the button &#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,larger %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated <span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated <span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-hand-point-right fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated outline<span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated outline<span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-hand-point-right fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated larger<span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-hand-point-right fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a class="btn-beautify button--animated " href="http://www.antmoe.com" target="_blank" rel="noopener" title="小康博客">小康博客 </a></p><p><a class="btn-beautify button--animated " href="http://www.antmoe.com" target="_blank" rel="noopener" title="小康博客"><i class="far fa-hand-point-right fa-fw"></i> 小康博客 </a></p><p><a class="btn-beautify button--animated outline" href="http://www.antmoe.com" target="_blank" rel="noopener" title="小康博客">小康博客 </a></p><p><a class="btn-beautify button--animated outline" href="http://www.antmoe.com" target="_blank" rel="noopener" title="小康博客"><i class="far fa-hand-point-right fa-fw"></i> 小康博客 </a></p><p><a class="btn-beautify button--animated larger" href="http://www.antmoe.com" target="_blank" rel="noopener" title="小康博客"><i class="far fa-hand-point-right fa-fw"></i> 小康博客 </a></p><h4 id="demo2"><a class="markdownIt-Anchor" href="#demo2"></a> demo2</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,block %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,block center larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,block right outline larger %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated block<span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-hand-point-right fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated block center larger<span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-hand-point-right fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-beautify button--animated block right outline larger<span class="token punctuation">"</span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.antmoe.com<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小康博客<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-hand-point-right fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 小康博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a class="btn-beautify button--animated block" href="http://www.antmoe.com" title="小康博客"><i class="far fa-hand-point-right fa-fw"></i> 小康博客 </a></p><p><a class="btn-beautify button--animated block center larger" href="http://www.antmoe.com" title="小康博客"><i class="far fa-hand-point-right fa-fw"></i> 小康博客 </a></p><p><a class="btn-beautify button--animated block right outline larger" href="http://www.antmoe.com" title="小康博客"><i class="far fa-hand-point-right fa-fw"></i> 小康博客 </a></p><h4 id="demo3"><a class="markdownIt-Anchor" href="#demo3"></a> demo3</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,blue larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,pink larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,red larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,purple larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,orange larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,green larger %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><a class="btn-beautify larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify blue larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify pink larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify red larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify purple larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify orange larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify green larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a>#### demo4<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline blue larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline pink larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline red larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline purple larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline orange larger %&#125;&#123;% btn 'http://www.antmoe.com',小康博客,far fa-hand-point-right,outline green larger %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="btn-center"><a class="btn-beautify outline larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify outline blue larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify outline pink larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify outline red larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify outline purple larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify outline orange larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a><a class="btn-beautify outline green larger" href="http://www.antmoe.com"   title="小康博客"><i class="far fa-hand-point-right"></i><span>小康博客</span></a></div>### 富文本按钮<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% btns 样式参数 %&#125;&#123;% cell 标题, 链接, 图片或者图标 %&#125;&#123;% cell 标题, 链接, 图片或者图标 %&#125;&#123;% endbtns %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>参数列表：- 圆角样式  `rounded, circle`- 布局方式  默认为自动宽度，适合视野内只有一两个的情况。  |  参数  |                   含义                   |  | :----: | :--------------------------------------: |  |  wide  |               宽一点的按钮               |  |  fill  | 填充布局，自动铺满至少一行，多了会换行。 |  | center |        居中，按钮之间是固定间距。        |  | around |                 居中分散                 |  | grid2  | 等宽最多 2 列，屏幕变窄会适当减少列数。  |  | grid3  | 等宽最多 3 列，屏幕变窄会适当减少列数。  |  | grid4  | 等宽最多 4 列，屏幕变窄会适当减少列数。  |  | grid5  | 等宽最多 5 列，屏幕变窄会适当减少列数。  |- 增加文字样式  可以在容器内增加 `标题` 和 `描述文字`<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% btns circle grid5 %&#125;&#123;% cell Dreamy.TZK, https://www.antmoe.com, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;&#123;% cell Dreamy.TZK, https://www.antmoe.com, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;&#123;% cell Dreamy.TZK, https://www.antmoe.com, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;&#123;% cell Dreamy.TZK, https://www.antmoe.com, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;&#123;% cell Dreamy.TZK, https://www.antmoe.com, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;&#123;% endbtns %&#125;&#123;% btns rounded grid5 %&#125;&#123;% cell 下载源码, /, fa fa-download %&#125;&#123;% cell 查看文档, /, fa fa-book %&#125;&#123;% endbtns %&#125;&#123;% btns circle center grid5 %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>fa fa-apple<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>心率管家<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>&#123;% p red, 专业版 %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>fa fa-apple<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>心率管家<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>&#123;% p green, 免费版 %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>&#123;% endbtns %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="btns circle grid5">            <a href='https://www.antmoe.com' title='Dreamy.TZK'><img src='https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg'>Dreamy.TZK</a><a href='https://www.antmoe.com' title='Dreamy.TZK'><img src='https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg'>Dreamy.TZK</a><a href='https://www.antmoe.com' title='Dreamy.TZK'><img src='https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg'>Dreamy.TZK</a><a href='https://www.antmoe.com' title='Dreamy.TZK'><img src='https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg'>Dreamy.TZK</a><a href='https://www.antmoe.com' title='Dreamy.TZK'><img src='https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg'>Dreamy.TZK</a>          </div><div class="btns rounded grid5">            <a href='/' title='下载源码'><i class='fa fa-download'></i>下载源码</a><a href='/' title='查看文档'><i class='fa fa-book'></i>查看文档</a>          </div><div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'><i class='fa fa-apple'></i><b>心率管家</b><p class='p red'>专业版</p><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'><i class='fa fa-apple'></i><b>心率管家</b><p class='p green'>免费版</p><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><h3 id="tab"><a class="markdownIt-Anchor" href="#tab"></a> Tab</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% tabs Unique name, [index] %&#125;<span class="token comment">&lt;!-- tab [Tab caption] [@icon] --></span>Any content (support inline tags too).<span class="token comment">&lt;!-- endtab --></span>&#123;% endtabs %&#125;Unique name : Unique name of tabs block tag without comma.Will be used in #id's as prefix for each tab with their index numbers.If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.Only for current url of post/page must be unique![index] : Index number of active tab.If not specified, first tab (1) will be selected.If index is -1, no tab will be selected. It's will be something like spoiler.Optional parameter.[Tab caption] : Caption of current tab.If not caption specified, unique name with tab index suffix will be used as caption of tab.If not caption specified, but specified icon, caption will empty.Optional parameter.[@icon] : FontAwesome icon name (full-name, look like 'fas fa-font')Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.Optional parameter.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>tab-id</p><p>必填，如果一个页面有多个 tabs 时，tab-id 不能重复。</p></li><li><p>tab-name</p><p>标签文本。</p></li></ul><div class="tabs" id="tab-id"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-id-1">tab-name</button></li><li class="tab"><button type="button" data-href="#tab-id-2">tab-name</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-id-1"><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-id-2"><p>这里面写内容，支持的语法格式有限，请尽量<u>不要</u>写太过复杂的东西。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案-1预设选择第一个默认"><a class="markdownIt-Anchor" href="#预设方案-1预设选择第一个默认"></a> 预设方案 1：预设选择第一个【默认】</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% tabs test1 %&#125;<span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 1.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 2.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 3.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span>&#123;% endtabs %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案-2预设选择-tabs"><a class="markdownIt-Anchor" href="#预设方案-2预设选择-tabs"></a> 预设方案 2：预设选择 tabs</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% tabs test2, 3 %&#125;<span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 1.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 2.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 3.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span>&#123;% endtabs %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案-3没有预设值"><a class="markdownIt-Anchor" href="#预设方案-3没有预设值"></a> 预设方案 3：没有预设值</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% tabs test3, -1 %&#125;<span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 1.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 2.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 3.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span>&#123;% endtabs %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案-4自定义-tab-名-只有-icon-icon-和-tab-名"><a class="markdownIt-Anchor" href="#预设方案-4自定义-tab-名-只有-icon-icon-和-tab-名"></a> 预设方案 4：自定义 Tab 名 + 只有 icon + icon 和 Tab 名</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% tabs test4 %&#125;<span class="token comment">&lt;!-- tab 第一个Tab --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">tab 名字为第一个 Tab</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab @fab fa-apple-pay --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">只有图标 没有 Tab 名字</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span><span class="token comment">&lt;!-- tab 炸弹@fas fa-bomb --></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">名字+icon</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --></span>&#123;% endtabs %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab 名字为第一个 Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有 Tab 名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="folding"><a class="markdownIt-Anchor" href="#folding"></a> Folding</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% folding 参数（可选）, 标题 %&#125;![](https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png)&#123;% endfolding %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>html 格式语法</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>查看图片测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>      <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/loading.gif</span>      <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png<span class="token punctuation">"</span></span>      <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span> <span class="token attr-name">cyan</span> <span class="token attr-name">open</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>查看默认打开的折叠框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个默认打开的折叠框。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span> <span class="token attr-name">green</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>查看代码测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span> <span class="token attr-name">yellow</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>查看列表测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>haha<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hehe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span> <span class="token attr-name">red</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>查看嵌套测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span> <span class="token attr-name">blue</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>查看嵌套测试2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>查看嵌套测试3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>              hahaha              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>                <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/loading.gif</span>                <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png<span class="token punctuation">'</span></span>                <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span>24px</span><span class="token punctuation">'</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>              <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参数位置可以填写颜色和状态，多个参数用空格隔开。</p><ul><li><p>颜色</p><p><code>blue, cyan, green, yellow, red</code></p></li><li><p>状态</p><p>状态填写 <code>open</code> 代表默认打开。</p></li></ul><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% folding 查看图片测试 %&#125;![](https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png)&#123;% endfolding %&#125;&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;这是一个默认打开的折叠框。&#123;% endfolding %&#125;&#123;% folding green, 查看代码测试 %&#125;&#123;% endfolding %&#125;&#123;% folding yellow, 查看列表测试 %&#125;<span class="token list punctuation">-</span> haha<span class="token list punctuation">-</span> hehe&#123;% endfolding %&#125;&#123;% folding red, 查看嵌套测试 %&#125;&#123;% folding blue, 查看嵌套测试2 %&#125;&#123;% folding 查看嵌套测试3 %&#125;hahaha <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png<span class="token punctuation">'</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span>24px</span><span class="token punctuation">'</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>&#123;% endfolding %&#125;&#123;% endfolding %&#125;&#123;% endfolding %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><details ><summary> <p>查看图片测试</p> </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png" alt="" /></p>              </div>            </details><details cyan open><summary> <p>查看默认打开的折叠框</p> </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> <p>查看代码测试</p> </summary>              <div class='content'>                            </div>            </details><details yellow><summary> <p>查看列表测试</p> </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details red><summary> <p>查看嵌套测试</p> </summary>              <div class='content'>              <details blue><summary> <p>查看嵌套测试2</p> </summary>              <div class='content'>              <details ><summary> <p>查看嵌套测试3</p> </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><h3 id="fancybox"><a class="markdownIt-Anchor" href="#fancybox"></a> Fancybox</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% fancybox 参数, 列数 %&#125;<span class="token url"><span class="token operator">!</span>[<span class="token content">图片描述</span>](<span class="token url">https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg</span>)</span>![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/67239FBB-E15D-4F4F-8EE8-0F1C9F3C4E7C.jpeg)&#123;% endfancybox %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>对齐方向</p><p><code>left</code>, <code>center</code>, <code>right</code></p></li><li><p>缩放</p><p><code>stretch</code></p></li><li><p>列数</p><p>逗号后面直接写列数，支持 2 ～ 8 列。设定列列数之后就是「多行多图」布局，此时图片默认左对齐。为了避免图片大小不一，建议搭配 <code>stretch</code> 来时图片放大填充。</p></li></ul><h4 id="单张图片"><a class="markdownIt-Anchor" href="#单张图片"></a> 单张图片</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fancybox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg<span class="token punctuation">"</span></span>            <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片描述<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image-caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            图片描述        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- TAG写法（不建议）&#123;% fancybox %&#125;![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)&#123;% endfancybox %&#125;--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="gallery ">    <p>    <div class="fancybox">        <img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg"            alt="图片描述">        <span class="image-caption">            图片描述        </span>    </div>    </p></div><h4 id="一行多个图片不换行"><a class="markdownIt-Anchor" href="#一行多个图片不换行"></a> 一行多个图片（不换行）</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fancybox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg<span class="token punctuation">"</span></span>             <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片描述<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image-caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片描述<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fancybox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg<span class="token punctuation">"</span></span>             <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片描述<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image-caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片描述<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fancybox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg<span class="token punctuation">"</span></span>             <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片描述<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image-caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片描述<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- TAG写法 不推荐&#123;% fancybox %&#125;![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg)![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/67239FBB-E15D-4F4F-8EE8-0F1C9F3C4E7C.jpeg)![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/00E0F0ED-9F1C-407A-9AA6-545649D919F4.jpeg)&#123;% endfancybox %&#125;--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="gallery ">    <p>    <div class="fancybox">        <img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"            alt="图片描述">        <span class="image-caption">图片描述</span>    </div><br>    <div class="fancybox">        <img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"            alt="图片描述">        <span class="image-caption">图片描述</span>    </div><br>    <div class="fancybox">        <img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"            alt="图片描述">        <span class="image-caption">图片描述</span>    </div>    </p></div><h2 id="文章内音乐"><a class="markdownIt-Anchor" href="#文章内音乐"></a> 文章内音乐</h2><h3 id="aplayer"><a class="markdownIt-Anchor" href="#aplayer"></a> Aplayer</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>% aplayerlist %<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>    <span class="token property">"narrow"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// （可选）播放器袖珍风格</span>    <span class="token property">"autoplay"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">// （可选) 自动播放，移动端浏览器暂时不支持此功能</span>    <span class="token property">"mode"</span><span class="token operator">:</span> <span class="token string">"random"</span><span class="token punctuation">,</span><span class="token comment">// （可选）曲目循环类型，有 'random'（随机播放）, 'single' (单曲播放), 'circulation' (循环播放), 'order' (列表播放)， 默认：'circulation'</span>    <span class="token property">"showlrc"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token comment">// （可选）歌词显示配置项，可选项有：1,2,3</span>    <span class="token property">"mutex"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">// （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span>    <span class="token property">"theme"</span><span class="token operator">:</span> <span class="token string">"#e6d0b2"</span><span class="token punctuation">,</span><span class="token comment">// （可选）播放器风格色彩设置，默认：#b7daff</span>    <span class="token property">"preload"</span><span class="token operator">:</span> <span class="token string">"metadata"</span><span class="token punctuation">,</span><span class="token comment">// （可选）音乐文件预载入模式，可选项： 'none' 'metadata' 'auto', 默认: 'auto'</span>    <span class="token property">"listmaxheight"</span><span class="token operator">:</span> <span class="token string">"513px"</span><span class="token punctuation">,</span><span class="token comment">// (可选) 该播放列表的最大长度</span>    <span class="token property">"music"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"CoCo"</span><span class="token punctuation">,</span>            <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Jeff Williams"</span><span class="token punctuation">,</span>            <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"caffeine.mp3"</span><span class="token punctuation">,</span>            <span class="token property">"pic"</span><span class="token operator">:</span> <span class="token string">"caffeine.jpeg"</span><span class="token punctuation">,</span>            <span class="token property">"lrc"</span><span class="token operator">:</span> <span class="token string">"caffeine.txt"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"アイロニ"</span><span class="token punctuation">,</span>            <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"鹿乃"</span><span class="token punctuation">,</span>            <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"irony.mp3"</span><span class="token punctuation">,</span>            <span class="token property">"pic"</span><span class="token operator">:</span> <span class="token string">"irony.jpg"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>% endaplayerlist %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单示例</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>% meting <span class="token string">"60198"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>    <div id="aplayer-pcbZUiNI" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2802022828" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>进阶示例</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>% meting <span class="token string">"60198"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> <span class="token string">"autoplay"</span> <span class="token string">"mutex:false"</span> <span class="token string">"listmaxheight:340px"</span> <span class="token string">"preload:none"</span> <span class="token string">"theme:#ad7a86"</span>%<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="audio"><a class="markdownIt-Anchor" href="#audio"></a> Audio</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">__idm_id__</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>269361153<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span>    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://music.163.com/song/media/outer/url?id=574566207.mp3<span class="token punctuation">"</span></span>    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>audio/mp3<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>  Your browser does not support the audio tag.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><audio controls="" preload="" __idm_id__="269361153"><source src="http://music.163.com/song/media/outer/url?id=574566207.mp3" type="audio/mp3">Your browser does not support the audio tag.</audio></p>]]></content>
      
      
      <categories>
          
          <category> 参考手册 </category>
          
          <category> 食用手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何为评论系统快速添加表情</title>
      <link href="/posts/91a1b4e4/"/>
      <url>/posts/91a1b4e4/</url>
      
        <content type="html"><![CDATA[<p><img src="https://file.acs.pw/picGo/2022/03/06/20220306190948.png" alt="image-20210117130542428" /></p><h2 id="项目特点"><a class="markdownIt-Anchor" href="#项目特点"></a> 项目特点</h2><div class="checkbox green checked">  <input type="checkbox" checked />  <p>即使预览图片</p></div><div class="checkbox green checked">  <input type="checkbox" checked />  <p>一键复制图片链接、img标签、markdown格式</p></div><div class="checkbox green checked">  <input type="checkbox" checked />  <p>提供Twikoo格式的表情格式</p></div><div class="checkbox green checked">  <input type="checkbox" checked />  <p>提供Valine格式的表情格式</p></div><div class="checkbox green checked">  <input type="checkbox" checked />  <p>提供Waline格式的表情格式</p></div><div class="checkbox green checked">  <input type="checkbox" checked />  <p>表情存放在多个位置，不仅仅在GitHub</p></div><div class="checkbox green checked">  <input type="checkbox" checked />  <p>包含大多数表情包，且支持用户自己添加</p></div><p>项目地址： <a class="btn-beautify red larger" href="https://emotion.xiaokang.me/#/"   title="表情速查"><i class="far fa-hand-point-right"></i><span>表情速查</span></a></p><h2 id="适配twikoo"><a class="markdownIt-Anchor" href="#适配twikoo"></a> 适配Twikoo</h2><p>Twikoo的表情使用<code>OwO</code>，表情的配置为一个json文件。例如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"Heo"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image"</span><span class="token punctuation">,</span>    <span class="token property">"container"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"Heo-亲亲"</span><span class="token punctuation">,</span>        <span class="token property">"icon"</span><span class="token operator">:</span> <span class="token string">"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/Heo/亲亲.png'>"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>json文件对格式要求很严格，例如键与值都需要使用<strong>双引号</strong>进行包裹，如果是最后一项那么结尾不能包含逗号。。。。</p></blockquote><p>当你适配Twikoo评论时，请注意每种表情的末尾是否需要添加逗号。例如我想添加<code>biliTV</code>和<code>阿鲁</code>两种表情到我的<code>OwO.json</code>。那么我应该复制下来的内容如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"bilibili_tv_gif"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image"</span><span class="token punctuation">,</span>    <span class="token property">"container"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"bilibili_tv_gif-doge"</span><span class="token punctuation">,</span>        <span class="token property">"icon"</span><span class="token operator">:</span> <span class="token string">"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/bilibili_tv_gif/doge.gif'>"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"阿鲁"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"image"</span><span class="token punctuation">,</span>    <span class="token property">"container"</span><span class="token operator">:</span><span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"aru-1"</span><span class="token punctuation">,</span>        <span class="token property">"icon"</span><span class="token operator">:</span> <span class="token string">"&lt;img src='https://cdn.jsdelivr.net/gh/Dreamy-TZK/iemotion-pic@latest/img/aru/1.png'>"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>以上代码仅仅是一个示例。具体请自己喜欢的表情包进行添加。</p></blockquote><p>最后附上作者的<a href="https://cdn.jsdelivr.net/gh/tzki/tzki.github.io/owo.json">OwO.json</a>供各位博主参考。</p><h2 id="valine-waline"><a class="markdownIt-Anchor" href="#valine-waline"></a> Valine、Waline</h2><p>这种评论添加表情的方式是一个对象格式，且不支持表情分类。格式如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span>  <span class="token string">"图片名"</span><span class="token operator">:</span> <span class="token string">"图片链接"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>可能部分主题（例如butterfly）会将添加表情的方式修改为创建<code>valine.json</code>文件，这样的情况就相当于编辑JSON文件了。</p></blockquote><p>因此对于这种评论添加<code>biliTV</code>和<code>阿鲁</code>两种表情格式是这样的。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"哔哩-doge"</span><span class="token operator">:</span> <span class="token string">"https://7.dusays.com/2021/01/15/3de5568861758.gif"</span><span class="token punctuation">,</span>  <span class="token property">"阿鲁-1"</span><span class="token operator">:</span> <span class="token string">"https://7.dusays.com/2021/01/15/3c76dffbc08a5.png"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果键名重复，则会导致后边的覆盖前边的。</p></blockquote><h2 id="如何快速生成对应的格式"><a class="markdownIt-Anchor" href="#如何快速生成对应的格式"></a> 如何快速生成对应的格式</h2><ol><li><p>进入<a href="https://emotion.xiaokang.me/">表情速查</a></p></li><li><p>选择你要查看的表情分类后即可看到该分类下的表情包预览以及各种评论的表情包格式</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306190955.jpeg" alt="image-20210117134014386" /></p></li></ol><h2 id="如何添加表情包"><a class="markdownIt-Anchor" href="#如何添加表情包"></a> 如何添加表情包</h2><p>此项目所使用的<a href="https://github.com/Dreamy-TZK/iemotion-pic">表情包仓库</a>，如果想要添加自己的表情包可以任选下方所述方法其中一种即可。</p><ol><li><p>通过提交Pull Request：将表情包放入此仓库<code>img</code>目录下即可，注意按照格式。</p><blockquote><p>适合提交图片的用户</p></blockquote></li><li><p>通过提交Pull Request：将你的表情包JSON文件放入仓库<code>user_json</code>目录下即可，注意按照格式</p><blockquote><p>适合自己存储表情包的用户</p></blockquote></li><li><p>直接将表情包发送给作者</p><blockquote><p>适合懒人</p></blockquote></li></ol><h3 id="快速生成json"><a class="markdownIt-Anchor" href="#快速生成json"></a> 快速生成JSON</h3><blockquote><p>注意，这里的JSON不是指的评论系统所需要的JSON，而是指你向表情速查提供表情包的JSON。</p></blockquote><p>表情速查需要的JSON格式如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"表情包的分类名"</span><span class="token punctuation">,</span>  <span class="token property">"power"</span><span class="token operator">:</span> <span class="token string">"你的版权链接"</span><span class="token punctuation">,</span>  <span class="token property">"common"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"all"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"这个表情的名称（不可重复）"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"该表情的地址"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你可以通过自己写脚本生成该格式的JSON文件，也可以使用作者提供的几个脚本生成。</p><ol><li><p>TXT文件</p><p>根据TXT文件生成JSON脚本，txt文件格式：</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">表情包名|表情包地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建一个文件夹，名为<code>user_text</code>，将以下脚本保存为<code>js</code>文件，并与<code>user_text</code>文件夹放在同一级目录。<code>user_text</code>存放你的txt文本。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @description: 根据用户的txt文本生成json文件，生成的name字段为文件名 * @author: 小康 * @url: https://xiaokang.me * @Date: 2021-01-14 20:26:31 * @LastEditTime: 2021-01-14 20:26:31 * @LastEditors: 小康 */</span><span class="token keyword">const</span> fse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs-extra'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">generateJsonByText</span><span class="token punctuation">(</span><span class="token parameter">fileBasePath<span class="token punctuation">,</span> fileName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>fileBasePath <span class="token operator">+</span> fileName<span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> contentList <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> fileName<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    common<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    all<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  contentList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> imageObj <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>    obj<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> imageObj<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      url<span class="token operator">:</span> imageObj<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'/r'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> flag <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">pathExists</span><span class="token punctuation">(</span><span class="token string">'./user_text_temp/'</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">'./user_text_temp/'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">writeJSON</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./user_text_temp/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>fileName<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.json</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span><span class="token string">'./user_text/'</span><span class="token punctuation">)</span>  fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">generateJsonByText</span><span class="token punctuation">(</span><span class="token string">'./user_text/'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过命令<code>npm i</code>安装脚本后，即可运行。</p></blockquote></li><li><p>本地图片文件</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/* * @description: 通过图片生成json * @author: 小康 * @url: https://xiaokang.me * @Date: 2021-01-16 09:25:29 * @LastEditTime: 2021-01-16 09:25:34 * @LastEditors: 小康 */</span><span class="token keyword">const</span> fse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs-extra'</span><span class="token punctuation">)</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token comment">// 图片地址前缀修饰</span><span class="token keyword">const</span> imgPrefix <span class="token operator">=</span> <span class="token string">'https://twikoo-magic.oss-cn-hangzhou.aliyuncs.com/'</span><span class="token comment">// 版权</span><span class="token keyword">const</span> power <span class="token operator">=</span> <span class="token string">'https://noionion.top/'</span><span class="token comment">/** * 获取文件列表 * @author 小康 * @param &#123;string&#125; 图片目录的父级目录 * @returns &#123;Object&#125; 所有图片对象 * &#123; *    图片目录名:[’图片名‘] * &#125; */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getFilesList</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// 图片目录列表</span>  <span class="token keyword">const</span> picDirs <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> picDirs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    obj<span class="token punctuation">[</span>picDirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> picDirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> obj<span class="token punctuation">&#125;</span><span class="token comment">// 入口函数</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> fileObj <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFilesList</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> category <span class="token keyword">in</span> fileObj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> category<span class="token punctuation">,</span>      power<span class="token punctuation">,</span>      common<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      all<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fileObj<span class="token punctuation">[</span>category<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      obj<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> fileObj<span class="token punctuation">[</span>category<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>imgPrefix<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>category<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>fileObj<span class="token punctuation">[</span>category<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    fse<span class="token punctuation">.</span><span class="token function">writeJson</span><span class="token punctuation">(</span><span class="token string">'./user_json_temp/'</span> <span class="token operator">+</span> category <span class="token operator">+</span> <span class="token string">'.json'</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'生成完毕'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token string">'./user_img'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li><p>创建文件夹<code>user_img</code>、<code>user_json_temp</code>和js文件，并写入上述脚本。</p></li><li><p>将你的表情放入<code>user_img</code>。注意存放位置。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191000.jpeg" alt="image-20210117140111027" /></p></li><li><p>运行命令<code>npm i</code>后运行脚本即可。</p></li></ol></blockquote></li><li><p>上传去不图床</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @description: 将图片上传到图床并生成JSON * @author: 小康 * @url: https://xiaokang.me * @Date: 2021-01-14 21:13:20 * @LastEditTime: 2021-01-14 21:13:20 * @LastEditors: 小康 */</span><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'axios'</span><span class="token punctuation">)</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> fse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs-extra'</span><span class="token punctuation">)</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> FormData <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'form-data'</span><span class="token punctuation">)</span><span class="token comment">// 图床TOKEN</span><span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token string">''</span><span class="token comment">// 上传后json输出位置</span><span class="token keyword">const</span> outpath <span class="token operator">=</span> <span class="token string">'user_json_temp'</span><span class="token comment">// 上传地址</span><span class="token comment">// const url = 'https://pic.alexhchu.com/api/upload'</span><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">'https://7bu.top/api/upload'</span><span class="token comment">/** * 获取文件列表 * @author 小康 * @param &#123;string&#125; 图片目录的父级目录 * @returns &#123;Object&#125; 所有图片对象 * &#123; *    图片目录名:[’图片名‘] * &#125; */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getFilesList</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// 图片目录列表</span>  <span class="token keyword">const</span> picDirs <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> picDirs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    obj<span class="token punctuation">[</span>picDirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> picDirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> obj<span class="token punctuation">&#125;</span><span class="token comment">/** * 将图片上传到图床 * @author 小康 * @param &#123;object&#125; 图片对象 * @returns &#123;any&#125; */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">uploadImg</span><span class="token punctuation">(</span><span class="token parameter">filePath<span class="token punctuation">,</span> imgObj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">in</span> imgObj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> item<span class="token punctuation">,</span>      power<span class="token operator">:</span> <span class="token string">'https://emotion.xiaokang.me/'</span><span class="token punctuation">,</span>      common<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      all<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> imgObj<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">upload</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> item<span class="token punctuation">,</span> imgObj<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      obj<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> imgObj<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        url<span class="token operator">:</span> data<span class="token punctuation">.</span>url      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 保存json文件</span>    <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">writeJson</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>outpath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.json</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 入口函数</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">imgPath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> imgObj <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFilesList</span><span class="token punctuation">(</span>imgPath<span class="token punctuation">)</span>  <span class="token keyword">await</span> <span class="token function">uploadImg</span><span class="token punctuation">(</span>imgPath<span class="token punctuation">,</span> imgObj<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token string">'./upload_img'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token parameter">imgPath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> localFile <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>imgPath<span class="token punctuation">)</span>  <span class="token keyword">var</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> localFile<span class="token punctuation">)</span>  formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">,</span> <span class="token string">'test'</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> headers <span class="token operator">=</span> formData<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//获取headers</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">//获取form-data长度</span>    formData<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> length</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">//设置长度，important!!!</span>      headers<span class="token punctuation">[</span><span class="token string">'content-length'</span><span class="token punctuation">]</span> <span class="token operator">=</span> length      headers<span class="token punctuation">[</span><span class="token string">'token'</span><span class="token punctuation">]</span> <span class="token operator">=</span> token      <span class="token keyword">await</span> axios        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> formData<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> headers <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>imgPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">上传成功=></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url<span class="token punctuation">)</span>          <span class="token comment">// obj = res.data.data</span>          <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li><p>创建<code>upload_img</code>、<code>user_json_temp</code>和js脚本并写入上述代码。</p></li><li><p>修改脚本中的TOKEN为你自己的TOKEN</p></li><li><p>将你的图片放入<code>upload_img</code>文件夹下。注意格式</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191004.jpeg" alt="image-20210117140431887" /></p></li><li><p>运行<code>npm i</code>命令，然后运行脚本即可。</p></li></ol></blockquote></li></ol><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>如果遇到问题，请在下方留言。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 评论系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评论表情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github之Actions自动发布npm包</title>
      <link href="/posts/8c0d5ccc/"/>
      <url>/posts/8c0d5ccc/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>在将我们的源代码推送到GitHub时并希望他能自动构建并将包发布到npm。</p><p>其实做法也简单，大致思路：获取仓库源代码-&gt;安装插件-&gt;构建-&gt;推送</p><h2 id="一-生成token"><a class="markdownIt-Anchor" href="#一-生成token"></a> 一、生成TOKEN</h2><p>这一步很重要，在<a href="https://www.npmjs.com/">npm</a>中生成自己的TOKEN。TOKEN类型<strong>一定要选择Automation</strong>，生成后将其保存，因为一会儿要在GitHub密钥中填写这个值。</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20210112082211.png?w=1280&amp;fmt=jpg" alt="image-20210112082211684" /></p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20210112082232.png?w=1280&amp;fmt=jpg" alt="image-20210112082232783" /></p><h2 id="二-配置仓库secrets"><a class="markdownIt-Anchor" href="#二-配置仓库secrets"></a> 二、配置仓库secrets</h2><ol><li><p>进入你的代码仓库，单击设置</p></li><li><p>点击<code>Secrets</code>，并新建一个键为<code>NPM_TOKEN</code>，值为上一步生成的TOKEN的密钥</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20210112082621.png?w=1280&amp;fmt=jpg" alt="image-20210112082622903" /></p></li></ol><h2 id="三-编写构建配置"><a class="markdownIt-Anchor" href="#三-编写构建配置"></a> 三、编写构建配置</h2><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Node.js Package<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">publish-npm</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">strategy</span><span class="token punctuation">:</span>      <span class="token key atrule">matrix</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>12.x<span class="token punctuation">]</span>    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token comment"># from: https://github.com/actions/checkout</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 1. 检查master分支        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master      <span class="token comment"># from: https://github.com/actions/setup-node</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 2. 设置Node.js        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@master        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token comment"># from: https://github.com/actions/cache</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 3. 缓存        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v2        <span class="token key atrule">id</span><span class="token punctuation">:</span> cache<span class="token punctuation">-</span>dependencies        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> node_modules          <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>runner.OS<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>hashFiles('<span class="token important">**/package-lock.json')</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 4. 安装插件        <span class="token key atrule">if</span><span class="token punctuation">:</span> steps.cache<span class="token punctuation">-</span>dependencies.outputs.cache<span class="token punctuation">-</span>hit <span class="token tag">!=</span> 'true'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          export TZ='Asia/Shanghai'          npm install</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 5. 生成文件        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          export TZ='Asia/Shanghai'          npm run build</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 6. 发布包        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN          npm publish</span>        <span class="token key atrule">env</span><span class="token punctuation">:</span>          <span class="token key atrule">NPM_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>secrets.NPM_TOKEN<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="完成"><a class="markdownIt-Anchor" href="#完成"></a> 完成</h2><p>此时当向<code>master</code>分支提交代码时就会自动触发构建任务并发布到npm</p>]]></content>
      
      
      <categories>
          
          <category> 部署与构建 </category>
          
          <category> Github Actions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gulp4简单使用</title>
      <link href="/posts/61248f6/"/>
      <url>/posts/61248f6/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>gulp是前端自动化打包构建工具，所谓打包可以理解为把文件压缩, 整合, 移动, 混淆。gulp是一种基于流的打包构建工具。</p><p>文档：<a href="https://www.gulpjs.com.cn/docs/api/concepts/">https://www.gulpjs.com.cn/docs/api/concepts/</a></p><p>使用gulp，首先要全局安装<code>gulp</code>，全局安装只是可以使用其命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装</span><span class="token function">npm</span> <span class="token function">install</span> --global gulp<span class="token comment"># 卸载</span><span class="token function">npm</span> uninstall --global gulp<span class="token comment"># 查看版本</span>gulp -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>也可以局部安装，通过<code>scripts</code>运行。</p></blockquote><h2 id="常用api"><a class="markdownIt-Anchor" href="#常用api"></a> 常用API</h2><ol><li><p><code>task()</code></p><p>创建一个基于流的任务</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'htmlHandler'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 找到 html 源文件, 进行压缩, 打包, 放入指定目录</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><code>src()</code></p><p>找到源文件</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 找到指定一个文件</span>gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./a/b.html'</span><span class="token punctuation">)</span><span class="token comment">// 找到指定目录下, 指定后缀的文件</span>gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./a/*.html'</span><span class="token punctuation">)</span><span class="token comment">// 找到指令目录下的所有文件</span>gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./a/**'</span><span class="token punctuation">)</span><span class="token comment">// 找到 a 目录下所有子目录里面的所有文件</span>gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./a/** /*'</span><span class="token punctuation">)</span><span class="token comment">// 找到 a 目录下所有子目录里面的所有 .html 文件</span>gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./a/** /*.html'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>dest()</code></p><p>把一个内容放入指定目录内</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./abc'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>watch()</code></p><p>监控指定目录下的文件, 一旦发生变化, 从新执行后面的任务</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">'./src/pages/*.html'</span><span class="token punctuation">,</span> htmlHandler<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>series()</code></p><p>逐个执行多个任务, 前一个任务结束, 第二个任务开始</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>任务<span class="token number">1</span><span class="token punctuation">,</span> 任务<span class="token number">2</span><span class="token punctuation">,</span> 任务<span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>parallel()</code></p><p>并行开始多个任务</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span>任务<span class="token number">1</span><span class="token punctuation">,</span> 任务<span class="token number">2</span><span class="token punctuation">,</span> 任务<span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>pipe()</code></p><p>管道函数，所有的 gulp API 都是基于流。接收当前流, 进入下一个流过程的管道函数</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>压缩任务<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>转码<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="常用插件"><a class="markdownIt-Anchor" href="#常用插件"></a> 常用插件</h2><ol><li><p><code>gulp-cssmin</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i gulp-cssmin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>导入以后得到一个处理流文件的函数</p><p><a href="https://www.npmjs.com/package/gulp-cssmin">https://www.npmjs.com/package/gulp-cssmin</a></p></li><li><p><code>gulp-autoprefixer</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i gulp-autoprefixer -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>导入以后得到一个处理流文件的函数，直接再管道函数里面使用, 需要传递参数</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span> browsers<span class="token operator">:</span> <span class="token punctuation">[</span>要兼容的浏览器<span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://www.npmjs.com/package/gulp-autoprefixer">https://www.npmjs.com/package/gulp-autoprefixer</a></p></li><li><p><code>gulp-sass</code></p><p>编译<code>scss</code>和<code>sass</code>文件为<code>css</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i gulp-sass -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>导入后直接使用即可</p></li><li><p><code>gulp-less</code></p><p>与<code>gulp-sass</code>类似，编译<code>less</code>文件为<code>css</code>文件</p></li><li><p><code>gulp-uglify</code></p><p>压缩<code>js</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i -D gulp-uglify<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此压缩不可以压缩<code>ES6</code>，因此如果有ES6代码，需要先转为<code>ES5</code></p></li><li><p><code>gulp-babel</code></p><p>专门进行 ES6 转 ES5 的插件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> gulp-babel @babel/core  @babel/preset-env -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>gulp-babel有两个版本，8主要用于gulp4中，7主要用于gulp3中。默认安装最新版。</p></blockquote></li><li><p><code>gulp-htmlmin</code></p><p>压缩html</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i -D gulp-htmlmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>del</code></p><p>删除文件目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> del -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>gulp-connect</code></p><p>启动一个服务器，用于自动构建。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> gulp-connect -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>gulp-pug</code></p><p>编译<code>pug</code>为<code>html</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> gulp-pug -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>gulp-concat</code></p><p>合并<code>js/css</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> gulp-concat -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="常用示例"><a class="markdownIt-Anchor" href="#常用示例"></a> 常用示例</h2><h3 id="构建js"><a class="markdownIt-Anchor" href="#构建js"></a> 构建JS</h3><p>将含有ES6代码的js文件合并并压缩。</p><p>安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> gulp-concat gulp-uglify gulp-rename gulp-babel @babel/core  @babel/preset-env -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编写构建任务</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token keyword">var</span> concat <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-concat'</span><span class="token punctuation">)</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token keyword">var</span> rename <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-rename'</span><span class="token punctuation">)</span><span class="token keyword">var</span> babel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-babel'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">js</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    gulp      <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'src/js/*.js'</span><span class="token punctuation">)</span>      <span class="token comment">// .pipe(concat('build.js')) // 参数为合并完的文件名</span>      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>        <span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span>      <span class="token comment">// .pipe(gulp.dest('dist/js/')) // 临时输出文件到本地</span>      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 压缩文件</span>      <span class="token comment">// .pipe(rename(&#123; suffix: '.min' &#125;)) // 重命名</span>      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/js/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出文件</span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span>exports<span class="token punctuation">.</span>default <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span>js<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="css-less-scss-sass"><a class="markdownIt-Anchor" href="#css-less-scss-sass"></a> css、less、scss、sass</h3><p>安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> gulp-less gulp-sass gulp-clean-css gulp-concat del gulp-rename  -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编写任务代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 编译scss</span><span class="token keyword">const</span> <span class="token function-variable function">scssTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/scss/*.scss'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">sass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./src/css/scss/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 编译less</span><span class="token keyword">const</span> <span class="token function-variable function">lessTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/less/*.less'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">less</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./src/css/less/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 删除 less 和 scss 产生的文件夹</span><span class="token keyword">const</span> <span class="token function-variable function">delLessScss</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./src/css/less/'</span><span class="token punctuation">,</span> <span class="token string">'./src/css/scss/'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 处理css文件</span><span class="token keyword">const</span> <span class="token function-variable function">cssTask</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/css/**/*.css'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'build.css'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> suffix<span class="token operator">:</span> <span class="token string">'.min'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cssClean</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> compatibility<span class="token operator">:</span> <span class="token string">'ie8'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/css/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>exports<span class="token punctuation">.</span>default <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>  gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span>scssTask<span class="token punctuation">,</span> lessTask<span class="token punctuation">)</span><span class="token punctuation">,</span>  cssTask<span class="token punctuation">,</span>  delLessScss<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编译pug-压缩html"><a class="markdownIt-Anchor" href="#编译pug-压缩html"></a> 编译pug、压缩html</h3><p>安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> gulp-htmlmin gulp-pug del -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编写压缩任务</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 删除dist目录</span><span class="token keyword">const</span> <span class="token function-variable function">delDest</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./dist/'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 编译pug任务</span><span class="token keyword">const</span> <span class="token function-variable function">pugTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/pug/*.pug'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">pug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./dist/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 压缩html</span><span class="token keyword">const</span> <span class="token function-variable function">htmlminTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./dist/**/*.html'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>    <span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//清除HTML注释</span>      collapseWhitespace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩HTML</span>      collapseBooleanAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input checked /></span>      removeEmptyAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>      removeScriptTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;script>的type="text/javascript"</span>      removeStyleLinkTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;style>和&lt;link>的type="text/css"</span>      minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面JS</span>      minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//压缩页面CSS</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span>exports<span class="token punctuation">.</span>default <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>delDest<span class="token punctuation">,</span> pugTask<span class="token punctuation">,</span> htmlminTask<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自动化示例"><a class="markdownIt-Anchor" href="#自动化示例"></a> 自动化示例</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @description: * @author: 小康 * @url: https://xiaokang.me * @Date: 2020-12-26 17:11:49 * @LastEditTime: 2020-12-26 17:11:49 * @LastEditors: 小康 */</span><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token keyword">var</span> pug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-pug'</span><span class="token punctuation">)</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token keyword">var</span> less <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-less'</span><span class="token punctuation">)</span><span class="token keyword">var</span> sass <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-sass'</span><span class="token punctuation">)</span><span class="token keyword">var</span> cssClean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token keyword">var</span> babel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-babel'</span><span class="token punctuation">)</span><span class="token keyword">var</span> concat <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-concat'</span><span class="token punctuation">)</span><span class="token keyword">var</span> rename <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-rename'</span><span class="token punctuation">)</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'del'</span><span class="token punctuation">)</span><span class="token keyword">var</span> connect <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-connect'</span><span class="token punctuation">)</span><span class="token keyword">var</span> open <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'open'</span><span class="token punctuation">)</span><span class="token comment">// 删除dist目录</span><span class="token keyword">const</span> <span class="token function-variable function">delDest</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./dist/'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 删除 less 和 scss 产生的文件夹</span><span class="token keyword">const</span> <span class="token function-variable function">delLessScss</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./src/css/less/'</span><span class="token punctuation">,</span> <span class="token string">'./src/css/scss/'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 编译pug任务</span><span class="token keyword">const</span> <span class="token function-variable function">pugTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/pug/*.pug'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">pug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./dist/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 压缩html</span><span class="token keyword">const</span> <span class="token function-variable function">htmlminTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./dist/**/*.html'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>      <span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//清除HTML注释</span>        collapseWhitespace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩HTML</span>        collapseBooleanAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input checked /></span>        removeEmptyAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;script>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;style>和&lt;link>的type="text/css"</span>        minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面JS</span>        minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//压缩页面CSS</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 编译scss</span><span class="token keyword">const</span> <span class="token function-variable function">scssTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/scss/*.scss'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">sass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./src/css/scss/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 编译less</span><span class="token keyword">const</span> <span class="token function-variable function">lessTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/less/*.less'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">less</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./src/css/less/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 处理css文件</span><span class="token keyword">const</span> <span class="token function-variable function">cssTask</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./src/css/**/*.css'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'build.css'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> suffix<span class="token operator">:</span> <span class="token string">'.min'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cssClean</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> compatibility<span class="token operator">:</span> <span class="token string">'ie8'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/css/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 编译js</span><span class="token keyword">const</span> <span class="token function-variable function">jsTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'src/js/*.js'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>      <span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 压缩文件</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/js/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出文件</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>connect<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">server</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'src/scss/**/*.scss'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>scssTask<span class="token punctuation">)</span><span class="token punctuation">)</span>  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'src/less/**/*.less'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>lessTask<span class="token punctuation">)</span><span class="token punctuation">)</span>  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'src/css/**/*.css'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>cssTask<span class="token punctuation">)</span><span class="token punctuation">)</span>  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'src/pug/**/*.pug'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>pugTask<span class="token punctuation">)</span><span class="token punctuation">)</span>  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'src/js/**/*.js'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>jsTask<span class="token punctuation">)</span><span class="token punctuation">)</span>  connect<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    root<span class="token operator">:</span> <span class="token string">'dist/'</span><span class="token punctuation">,</span>    livereload<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    port<span class="token operator">:</span> <span class="token number">5000</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'http://localhost:5000/'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>  <span class="token string">'build'</span><span class="token punctuation">,</span>  gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>    delDest<span class="token punctuation">,</span>    pugTask<span class="token punctuation">,</span>    htmlminTask<span class="token punctuation">,</span>    scssTask<span class="token punctuation">,</span>    lessTask<span class="token punctuation">,</span>    cssTask<span class="token punctuation">,</span>    jsTask<span class="token punctuation">,</span>    delLessScss  <span class="token punctuation">)</span><span class="token punctuation">)</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'server'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span><span class="token string">'build'</span><span class="token punctuation">,</span> server<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关于任务执行顺序"><a class="markdownIt-Anchor" href="#关于任务执行顺序"></a> 关于任务执行顺序</h2><p>同步执行即按顺序执行</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">exports<span class="token punctuation">.</span>default <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span><span class="token string">'js'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'less'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>异步执行即不会按照顺序去执行</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">exports<span class="token punctuation">.</span>default <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'js'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'less'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这两个方法支持任意层次的嵌套。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">exports<span class="token punctuation">.</span>default <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'js'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'less'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 部署与构建 </category>
          
          <category> Gulp </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AppStore降价监控</title>
      <link href="/posts/77e27eac/"/>
      <url>/posts/77e27eac/</url>
      
        <content type="html"><![CDATA[<h2 id="项目说明"><a class="markdownIt-Anchor" href="#项目说明"></a> 项目说明</h2><p>限免是个好东西，为了不错过心爱App的限免活动，因此写下这个脚本用于监控自己心爱的App是否发生了价格变动。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192917.jpeg" alt="img" /></p><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><ol><li><p>fork项目</p><p>地址：<a href="https://github.com/Dreamy-TZK/AppStorePrice">https://github.com/Dreamy-TZK/AppStorePrice</a></p><p>点击右上角的fork即可，难度系数为0</p></li><li><p>打开actions设置</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192920.jpeg" alt="image-20201122165951606" /></p><p>点击绿色的按钮即可。</p></li><li><p>添加server酱提醒</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192923.jpeg" alt="image-20201122170101662" /></p><p>填入你的server酱中的<code>SCKEY</code>即可</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192925.jpeg" alt="image-20201122170211537" /></p></li><li><p>修改监控app</p><p>找到<code>src/list.json</code>文件，点击编辑。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192928.jpeg" alt="image-20201122170309585" /></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> App的ID<span class="token punctuation">,</span>        <span class="token property">"country"</span><span class="token operator">:</span> 国区<span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> 可不填，主要是为了方便用户分辨该id是什么app    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1161125462</span><span class="token punctuation">,</span>        <span class="token property">"country"</span><span class="token operator">:</span> <span class="token string">"cn"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"p站助手"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>请注意：文件使用json格式，请确保你填写的内容是正确的。如不确定可以到<a href="http://json.cn/">json.cn</a>进行编辑，然后在复制。</p><p>id可以通过分享APP-&gt;复制链接。链接最后边的数字即该APP的链接</p></blockquote></li><li><p>进入Actions选项卡，打开workflow</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192931.jpeg" alt="image-20201122171119165" /></p></li><li><p>为fork的项目点个star，然后刷新页面</p></li></ol><h2 id="项目说明-2"><a class="markdownIt-Anchor" href="#项目说明-2"></a> 项目说明</h2><p>项目逻辑非常简单，由于是自用，而我的需求很简单，只需要提醒我是否发生了价格变动即可。因此可以滥用GitHub Actions定时监控App价格。</p><ol><li>请求app，查询其价格</li><li>对比本地保存的上一次查询的价格</li><li>如果发生了变化则提醒</li></ol><p>项目地址：<a href="https://github.com/Dreamy-TZK/AppStorePrice">https://github.com/Dreamy-TZK/AppStorePrice</a></p><p>由于使用了server酱的提醒，因此需要添加<code>Secrets</code>。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192935.jpeg" alt="image-20201121203408650" /></p><ul><li><p><code>/src/list.json</code></p><p>此文件是添加App的文件，按照格式填写需要监控的App。</p><p>app的id可以分享app，链接最后边的数字即是该app的id</p></li></ul><h2 id="项目中的问题"><a class="markdownIt-Anchor" href="#项目中的问题"></a> 项目中的问题</h2><p>如果你在使用此项目可能会遇到如下几个问题</p><ol><li><p>actions运行失败</p><p>如果变动了<code>list.json</code>文件（新增或减少App），依然还是失败，那么请检查你的<code>list.json</code>是否符合json规范。</p><p>如果第一次接收到了定时任务运行失败，那么说明当前监控的APP并无价格变化。</p></li><li><p>任务频率</p><p>默认没30分钟运行一次，但是因为acions有延迟，因此时间可能略有差异。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> AppStore </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AppStore </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈蘑菇丁自动打卡</title>
      <link href="/posts/b27c1244/"/>
      <url>/posts/b27c1244/</url>
      
        <content type="html"><![CDATA[<h2 id="项目说明"><a class="markdownIt-Anchor" href="#项目说明"></a> 项目说明</h2><p>对于本项目第一次是基于圈x的每日任务实现的自动签到，因为圈x要跑多个签到脚本，但后来由于各种原因最终放弃了使用圈x在本地跑。因此修改为利用GitHubActions自动完成打卡任务。</p><p>项目地址：<a href="https://github.com/Dreamy-TZK/MoGuDingAutoCheckIn/">MoGuDingAutoCheckIn</a></p><p>食用方式任选下面两种中的一个即可。</p><h2 id="快速开始-coding"><a class="markdownIt-Anchor" href="#快速开始-coding"></a> 快速开始-Coding</h2><p>使用Coding的原因主要是因为GitHub自动任务存在延迟，几分钟，几小时甚至不执行。因此建议使用Coding。</p><blockquote><p>这里不会讲解如何注册Coding，请自行了解。</p></blockquote><ol><li><p>新建项目</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108113955.png?w=1280&amp;fmt=jpg" alt="image-20201108113947860" /></p><p>选择代码托管项目</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114028.png?w=1280&amp;fmt=jpg" alt="image-20201108114028888" /></p><p>然后名称路径随便写即可。</p></li><li><p>新建代码仓库</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114125.png?w=1280&amp;fmt=jpg" alt="image-20201108114125634" /></p><p>按照下图提示输入对应的内容</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114358.png?w=1280&amp;fmt=jpg" alt="image-20201108114357894" /></p><p>项目地址：<a href="https://e.coding.net/imtzk/mogudingAuto/code.git">https://e.coding.net/imtzk/mogudingAuto/code.git</a></p></li><li><p>是否导入成功</p><p>导入成功后你应该看到类似这样的界面</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114440.png?w=1280&amp;fmt=jpg" alt="image-20201108114440151" /></p></li><li><p>开启持续继承功能</p><ul><li><p>点击项目左下角的项目设置</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114517.png" alt="image-20201108114517259" /></p></li><li><p>打开持续集成功能</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114558.png?w=1280&amp;fmt=jpg" alt="image-20201108114558417" /></p></li><li><p>返回到主页面</p></li></ul></li><li><p>添加自动任务</p><p>接下来你将在主页面左边导航栏看到一个持续集成的选择，选择他并选择构建计划。</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114705.png?w=1280&amp;fmt=jpg" alt="image-20201108114705149" /></p><p>选择最下方的自定义构建过程</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114722.png?w=1280&amp;fmt=jpg" alt="image-20201108114722695" /></p><p>构建计划名随便写即可。代码源选择CODING，代码仓库就选刚才创建的仓库。配置来源选择代码库中的<code>Jenkinsfile</code>。点击确定即可。</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108114837.png?w=1280&amp;fmt=jpg" alt="image-20201108114837124" /></p></li><li><p>配置信息</p><p>选择变量与缓存，进行相关配置</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108115113.png?w=1280&amp;fmt=jpg" alt="image-20201108115113647" /></p></li><li><p>测试</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108115155.png?w=1280&amp;fmt=jpg" alt="image-20201108115155188" /></p><p>点击保存并构建，如果成功则会向你发送一个微信提醒。如果构建失败，请参照失败原因并再次查看本文档排查错误。</p></li><li><p>设置自动触发</p><p>如果你测试成功了，那么可以添加自动触发任务了。</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201108115351.png?w=1280&amp;fmt=jpg" alt="image-20201108115351488" /></p><p>按需添加自己的触发规则即可。</p><blockquote><p>默认判断18点以后为下班卡，其余时间都为上班卡。如需修改请自行修改源代码。</p></blockquote></li></ol><h2 id="快速开始-github"><a class="markdownIt-Anchor" href="#快速开始-github"></a> 快速开始-Github</h2><ol><li><p>fork本项目</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106215802.png" alt="" /></p></li><li><p>进入设置添加密钥</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106215832.png" alt="image-20201106215832261" /></p><ul><li><p>PHONE（必填）</p><p>顾名思义，为你登陆蘑菇丁的手机号</p></li><li><p>PASSWORD（必填）</p><p>顾名思义，为你登录蘑菇丁的密码</p></li><li><p>SCKEY（建议填）</p><p><a href="http://sc.ftqq.com/3.version">Server酱</a>的密钥。</p><blockquote><p>每次签到结果会通过微信通知你<strong>签到结果</strong>，建议填。</p></blockquote></li><li><p>TOKEN（选填）</p><p>即认证信息，通过抓包获得。主要是为了解决通过账号密码登录的方式会造成手机APP中账号退出的问题。如何获取后文会介绍。</p></li></ul><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106220416.png" alt="image-20201106220416176" /></p></li><li><p>Actions如果没有开启（第一次使用）需要按照提示打开actions功能。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/25/91a79177e21e2a49d28be09cc676ad7a.png" alt="image-20200525093352663" /></p></li><li><p>手动触发</p><p>自动触发是每天的8点和晚上18点会自动触发。但是为了验证你的配置是否生效，可以修改一下readme.md文件然后提交。</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106221426.png" alt="image-20201106221425982" /></p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106221647.png" alt="image-20201106221647288" /></p><p>接下来点击Actions查看运行状态</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106221719.png" alt="image-20201106221719808" /></p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106222132.png" alt="image-20201106222132012" /></p><p>看到类似提示则说明签到成功了，此时查看你的蘑菇丁即可。</p></li></ol><h2 id="token"><a class="markdownIt-Anchor" href="#token"></a> TOKEN</h2><p>对于这一项本来是不需要提供的，但是我不想每次打开蘑菇丁都要重新登录，因此只能使用TOKEN来验证。蘑菇丁验证信息来源于登录。</p><p>当你登录成功时，会返回一个TOKEN，这个TOKEN则代表你的身份。利用此TOKEN将其添加到header请求头即可。因此如果你想使用TOKEN，那么首先你需要会使用手机抓包软件，我以IOS为例，安卓自行寻找抓包软件。</p><ol><li><p>下载抓包软件，我使用的是<code>Stream</code>，按照提示自行配置HTTPS抓包</p></li><li><p>开启抓包</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106222920.jpg" alt="1" /></p></li><li><p>登录蘑菇丁（如果你已经登陆了，那么请退出重新登录）</p></li><li><p>登录成功后，返回抓包软件，点击停止抓包。点击抓包历史,点击右上角的搜索按钮，输入<code>login</code></p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106223035.jpg" alt="2" /></p></li><li><p>如果能够过滤出蘑菇丁的请求，则说明成功了！点击去查看即可。</p><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/20201106223358.png" alt="image-20201106223358657" /></p></li><li><p>复制TOKEN填入即可。</p><p>这里需要注意下，即使使用TOKEN也需要填入手机号和密码（即使不对也要填）。因为有占位符的作用。</p></li></ol><h2 id="没有微信提醒"><a class="markdownIt-Anchor" href="#没有微信提醒"></a> 没有微信提醒</h2><p>微信提醒使用第三方服务server酱，请自行到官方参考官方的配置文档进行设置。并测试官方接口发送后能否收到消息。</p><p><a href="http://sc.ftqq.com/?c=code">http://sc.ftqq.com/?c=code</a></p>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> MoGuDingAutoCheckIn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蘑菇丁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发中GIT的常用操作</title>
      <link href="/posts/d874bc69/"/>
      <url>/posts/d874bc69/</url>
      
        <content type="html"><![CDATA[<h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><h3 id="配置当前项目"><a class="markdownIt-Anchor" href="#配置当前项目"></a> 配置当前项目</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config user.name <span class="token string">'你的名字'</span><span class="token function">git</span> config user.email <span class="token string">'你的邮箱'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="修改全局配置"><a class="markdownIt-Anchor" href="#修改全局配置"></a> 修改全局配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> --global config user.name <span class="token string">'你的名字'</span><span class="token function">git</span> --global config user.email <span class="token string">'你的邮箱'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="检查配置"><a class="markdownIt-Anchor" href="#检查配置"></a> 检查配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 打印所有config</span><span class="token function">git</span> config --list<span class="token comment"># 打印指定config</span><span class="token function">git</span> config user.name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="仓库"><a class="markdownIt-Anchor" href="#仓库"></a> 仓库</h2><h3 id="初始化仓库"><a class="markdownIt-Anchor" href="#初始化仓库"></a> 初始化仓库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192448.jpeg" alt="image-20201029094138532" /></p><h3 id="添加工作区文件到暂存区"><a class="markdownIt-Anchor" href="#添加工作区文件到暂存区"></a> 添加工作区文件到暂存区</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加单个文件</span><span class="token function">git</span> <span class="token function">add</span> <span class="token number">1</span>.txt<span class="token comment"># 添加多个文件</span><span class="token function">git</span> <span class="token function">add</span> <span class="token number">2</span>.txt <span class="token number">3</span>.txt<span class="token comment"># 添加整个目录</span><span class="token function">git</span> <span class="token function">add</span> ./a<span class="token comment"># 添加多个目录</span><span class="token function">git</span> <span class="token function">add</span> ./b ./c<span class="token comment"># 添加所有文件</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建版本"><a class="markdownIt-Anchor" href="#创建版本"></a> 创建版本</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token string">'xxx'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以上命令会直接添加本次提交的备注，一般用于改动不大的情况。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以上命令会调用出默认的编辑器去编辑信息。</p></blockquote><h4 id="修改默认的编辑器"><a class="markdownIt-Anchor" href="#修改默认的编辑器"></a> 修改默认的编辑器</h4><p>以vacode为例（Windows）。首先在命令行输入<code>code</code>，如果能正常出现vscode编辑器，那么直接输入以下命令即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config core.editor notepad<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果不能出现vscode编辑器，那么将VSCode目录下的<code>bin</code>目录添加到环境变量，然后运行上面的命令即可。</p><blockquote><p>MAC及Linux环境下配置。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加 vscode 编辑器 - mac</span><span class="token comment"># 通过 vim 打开环境变量配置文件</span><span class="token function">vim</span> ~/.bash_profile<span class="token comment"># 添加环境变量</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/Applications/Visual<span class="token punctuation">\</span> Studio<span class="token punctuation">\</span> Code.app/Contents/Resources/app/bin:<span class="token environment constant">$PATH</span><span class="token comment"># 保存退出</span><span class="token builtin class-name">source</span> ~/.bash_profile<span class="token comment"># 测试：在终端中直接通过命令 code 调用 vscode</span><span class="token function">git</span> config --global core.editor <span class="token string">"code --wait"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="查看状态"><a class="markdownIt-Anchor" href="#查看状态"></a> 查看状态</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="提交日志"><a class="markdownIt-Anchor" href="#提交日志"></a> 提交日志</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 完整格式<span class="token function">git</span> log// 简要格式（单行）<span class="token function">git</span> log --oneline<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192454.jpeg" alt="image-20201029095951370" /></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192457.jpeg" alt="image-20201029095957852" /></p><h2 id="乱码"><a class="markdownIt-Anchor" href="#乱码"></a> 乱码</h2><h3 id="git-status-显示乱码"><a class="markdownIt-Anchor" href="#git-status-显示乱码"></a> git status 显示乱码</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global core.quotepath <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="终端乱码"><a class="markdownIt-Anchor" href="#终端乱码"></a> 终端乱码</h3><p>菜单 -&gt; 设置 -&gt; 文本 -&gt; 本地 / 编码</p><p>或修改配置文件</p><pre class="line-numbers language-none"><code class="language-none">[gui]      encoding &#x3D; utf-8      # 代码库统一使用utf-8  [i18n]      commitencoding &#x3D; utf-8      # log编码[svn]      pathnameencoding &#x3D; utf-8      # 支持中文路径[core]    quotepath &#x3D; false     # status引用路径不再是八进制（反过来说就是允许显示中文了）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修复提交"><a class="markdownIt-Anchor" href="#修复提交"></a> 修复提交</h2><p>修复（替换上一次）提交，在不增加一个新的提交版本的情况下将新修改的代码追加到前一次的提交中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit --amend -m 提交<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 从 git 仓库与工作区中删除指定文件</span><span class="token function">git</span> <span class="token function">rm</span> 文件<span class="token comment"># 只删除 git 仓库中的文件</span><span class="token function">git</span> <span class="token function">rm</span> --cached 文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>rm 以后，需要 commit 这次操作，否则 rm 将保留在暂存区<code>git commit -m 修正</code></p></blockquote><h2 id="撤销重置"><a class="markdownIt-Anchor" href="#撤销重置"></a> 撤销重置</h2><h3 id="从暂存区中撤销到工作区"><a class="markdownIt-Anchor" href="#从暂存区中撤销到工作区"></a> 从暂存区中撤销到工作区</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 从暂存区中撤销一个指定文件<span class="token function">git</span> reset HEAD 文件名称// 从暂存区中撤销所有文件<span class="token function">git</span> reset HEAD <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="该命令既可以用于回退版本"><a class="markdownIt-Anchor" href="#该命令既可以用于回退版本"></a> 该命令既可以用于回退版本</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 回退到指定的 commitID 版本</span><span class="token function">git</span> reset --hard commitID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="比较"><a class="markdownIt-Anchor" href="#比较"></a> 比较</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 比较 工作区和暂存区</span><span class="token function">git</span> <span class="token function">diff</span> 文件 <span class="token comment"># 比较 暂存区和仓库</span><span class="token function">git</span> <span class="token function">diff</span> --cached <span class="token punctuation">[</span>commitId<span class="token punctuation">]</span> 文件<span class="token comment"># 比较 工作区和仓库</span><span class="token function">git</span> <span class="token function">diff</span> commitId filename<span class="token comment"># 比较 仓库不同版本</span><span class="token function">git</span> <span class="token function">diff</span> commitId1 commitId2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分支"><a class="markdownIt-Anchor" href="#分支"></a> 分支</h2><p>我们的开发就像是游戏的任务，默认是在主线（master）上进行开发的。许多时候，还有各种支线任务，git 支持我们创建分支来进行项目开发</p><h3 id="查看分支"><a class="markdownIt-Anchor" href="#查看分支"></a> 查看分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="创建分支"><a class="markdownIt-Anchor" href="#创建分支"></a> 创建分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch 分支名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="切换分支"><a class="markdownIt-Anchor" href="#切换分支"></a> 切换分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout 分支名称<span class="token comment"># 也可以使用 checkout -b 来新建分支</span><span class="token function">git</span> checkout -b 分支名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="分支合并"><a class="markdownIt-Anchor" href="#分支合并"></a> 分支合并</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># B 合并到 A，需要切换到 A 分支</span><span class="token function">git</span> merge 被合并分支<span class="token comment"># 查看已经合并的分支</span><span class="token function">git</span> branch --merged<span class="token comment"># 查看未合并的分支</span><span class="token function">git</span> branch --no-merged<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192508.jpeg" alt="image-20201029104640818" /></p><blockquote><p>例如将pay分支的内容合并到master分支，那么先切换到master分支，然后运行<code>git merge pay</code>命令。</p></blockquote><h3 id="删除分支"><a class="markdownIt-Anchor" href="#删除分支"></a> 删除分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 如果分支为未合并状态，则不允许删除</span><span class="token function">git</span> branch -d 分支名称<span class="token comment"># 强制删除</span><span class="token function">git</span> branch -D 分支名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="合并记录"><a class="markdownIt-Anchor" href="#合并记录"></a> 合并记录</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 合并 HEAD 前两个祖先记录</span><span class="token function">git</span> rebase -i HEAD~2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><code>~</code>和<code>^</code>，前者表示纵向，后者表示横向。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192503.jpeg" alt="1566209448773" /></p></blockquote><h3 id="rebase-操作"><a class="markdownIt-Anchor" href="#rebase-操作"></a> rebase 操作</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># p, pick = use commit => 使用</span><span class="token comment"># r, reword = use commit, but edit the commit message => 使用，但重新编辑说明</span><span class="token comment"># e, edit = use commit, but stop for amending => 使用</span><span class="token comment"># s, squash = use commit, but meld into previous commit => 使用，但合并上一次</span><span class="token comment"># f, fixup = like "squash", but discard this commit's log message => 就像 squash 那样，但会抛弃这个 Commit 的 Commit message</span><span class="token comment"># x, exec = run command (the rest of the line) using shell => 执行脚本</span><span class="token comment"># d, drop = remove commit => 移除</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> rebase -i HEAD~3<span class="token comment"># 弹出编辑器，根据需要的进行修改，然后保存</span><span class="token comment"># 如果为 r，s 则会再次弹出编辑器，修改新的 commit message，修改之后保存</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>如果出现一些问题，可以通过 <code>git rebase --edit-todo</code> 和 <code>git rebase --continue</code> 进行重新编辑保存</p></blockquote><p>关于合并记录的更多实例：<a href="https://www.antmoe.com/posts/5fe7c05a/index.html#commit">https://www.antmoe.com/posts/5fe7c05a/index.html#commit</a></p><h2 id="合并冲突"><a class="markdownIt-Anchor" href="#合并冲突"></a> 合并冲突</h2><p>有的时候，不同的分支可能会对同一个文件内容和位置上进行操作，这样在合并的过程中就会产生冲突</p><ul><li>查看冲突文件</li><li>修复冲突内容</li><li>提交</li></ul><h2 id="标签"><a class="markdownIt-Anchor" href="#标签"></a> 标签</h2><p>有的时候，我们希望给某一个特定的历史提交打上一些标签</p><h3 id="新建-tag"><a class="markdownIt-Anchor" href="#新建-tag"></a> 新建 tag</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag -a v1.0.0 HEAD/commitId<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看-tag"><a class="markdownIt-Anchor" href="#查看-tag"></a> 查看 tag</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="远程仓库"><a class="markdownIt-Anchor" href="#远程仓库"></a> 远程仓库</h2><h3 id="生成密钥"><a class="markdownIt-Anchor" href="#生成密钥"></a> 生成密钥</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"i@xiaokang.me"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成的密钥默认在用户目录的<code>.ssh</code>文件下。</p><h3 id="添加远程仓库"><a class="markdownIt-Anchor" href="#添加远程仓库"></a> 添加远程仓库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> 仓库别名 仓库地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="提交同步远程"><a class="markdownIt-Anchor" href="#提交同步远程"></a> 提交（同步远程）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push -u origin master<span class="token comment"># -u 简化后续操作</span><span class="token function">git</span> push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="远程分支"><a class="markdownIt-Anchor" href="#远程分支"></a> 远程分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 提交到远程（分支）</span><span class="token function">git</span> push origin <span class="token punctuation">[</span>本地分支名称<span class="token punctuation">]</span>:<span class="token punctuation">[</span>远程分支名称<span class="token punctuation">]</span><span class="token comment"># 远程先创建好分支然后拉取到本地</span><span class="token function">git</span> checkout -b <span class="token punctuation">[</span>本地分支名称<span class="token punctuation">]</span> origin/<span class="token punctuation">[</span>远程分支名称<span class="token punctuation">]</span><span class="token comment"># 拉取远程分支到本地</span><span class="token function">git</span> pull origin <span class="token punctuation">[</span>远程分支名称<span class="token punctuation">]</span>:<span class="token punctuation">[</span>本地分支名称<span class="token punctuation">]</span><span class="token comment"># 查看远程仓库</span><span class="token function">git</span> remote show origin<span class="token comment"># 查看本地分支</span><span class="token function">git</span> branch<span class="token comment"># 查看远程分支</span><span class="token function">git</span> branch -r<span class="token comment"># 查看所有分支</span><span class="token function">git</span> branch -a<span class="token comment"># 删除本地分支</span><span class="token function">git</span> branch -d <span class="token punctuation">[</span>本地分支名称<span class="token punctuation">]</span><span class="token comment"># 删除远程分支</span><span class="token function">git</span> push origin --delete <span class="token punctuation">[</span>远程分支名称<span class="token punctuation">]</span><span class="token comment"># or</span><span class="token function">git</span> push origin :<span class="token punctuation">[</span>远程分支名称<span class="token punctuation">]</span><span class="token comment"># 设置默认提交分支</span><span class="token function">git</span> branch --set-upstream-to<span class="token operator">=</span>origin/<span class="token punctuation">[</span>远程分支名称<span class="token punctuation">]</span> <span class="token punctuation">[</span>本地分支名称<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="扩展工作流-git-work-flow"><a class="markdownIt-Anchor" href="#扩展工作流-git-work-flow"></a> 扩展：工作流 - git work flow</h2><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192518.jpeg" alt="img" /></p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Commit表情符号使用指南</title>
      <link href="/posts/34ede0da/"/>
      <url>/posts/34ede0da/</url>
      
        <content type="html"><![CDATA[<style>    .copy:hover{        color:#f47466;    }    </style><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>写此文的目的仅仅是为了在<code>commit</code>操作时方便快速查找表情符号。因此参考互联网中同类型文章整理此文。参考文章/网站在本文末尾处已列出。</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>在使用命令行提交<code>commit</code>消息时，可以通过<code>:关键字:</code>的方式进行使用表情。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token string">":tada: Initial commit"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="表情列表"><a class="markdownIt-Anchor" href="#表情列表"></a> 表情列表</h2><p>点击每行最右侧的复制会复制当前行的emoji代码。</p><table><thead><tr><th style="text-align:center">emoji</th><th style="text-align:center">emoji 代码</th><th style="text-align:center">commit 说明</th><th style="text-align:center">复制</th></tr></thead><tbody><tr><td style="text-align:center">🎨 (调色板)</td><td style="text-align:center"><code>:art:</code></td><td style="text-align:center">改进代码结构/代码格式</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">⚡️ (闪电) <br />🐎 (赛马)</td><td style="text-align:center"><code>:zap:</code> <code>:racehorse:</code></td><td style="text-align:center">提升性能</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔥 (火焰)</td><td style="text-align:center"><code>:fire:</code></td><td style="text-align:center">移除代码或文件</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🐛 (bug)</td><td style="text-align:center"><code>:bug:</code></td><td style="text-align:center">修复 bug</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🚑 (急救车)</td><td style="text-align:center"><code>:ambulance:</code></td><td style="text-align:center">重要补丁</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">✨ (火花)</td><td style="text-align:center"><code>:sparkles:</code></td><td style="text-align:center">引入新功能</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">📝 (备忘录)</td><td style="text-align:center"><code>:memo:</code></td><td style="text-align:center">撰写文档</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🚀 (火箭)</td><td style="text-align:center"><code>:rocket:</code></td><td style="text-align:center">部署功能</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">💄 (口红)</td><td style="text-align:center"><code>:lipstick:</code></td><td style="text-align:center">更新 UI 和样式文件</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🎉 (庆祝)</td><td style="text-align:center"><code>:tada:</code></td><td style="text-align:center">初次提交</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">✅ (白色复选框)</td><td style="text-align:center"><code>:white_check_mark:</code></td><td style="text-align:center">更新测试</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔒 (锁)</td><td style="text-align:center"><code>:lock:</code></td><td style="text-align:center">修复安全问题</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🍎 (苹果)</td><td style="text-align:center"><code>:apple:</code></td><td style="text-align:center">修复 macOS 下的问题</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🐧 (企鹅)</td><td style="text-align:center"><code>:penguin:</code></td><td style="text-align:center">修复 Linux 下的问题</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🏁 (旗帜)</td><td style="text-align:center"><code>:checkered_flag:</code></td><td style="text-align:center">修复 Windows 下的问题</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🤖（机器人）</td><td style="text-align:center"><code>:robot:</code></td><td style="text-align:center">修复 Android 下的问题</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🍏 (绿苹果)</td><td style="text-align:center"><code>:green_apple:</code></td><td style="text-align:center">修复 iOS 下的问题</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔖 (书签)</td><td style="text-align:center"><code>:bookmark:</code></td><td style="text-align:center">发行/版本标签</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🚨 (警车灯)</td><td style="text-align:center"><code>:rotating_light:</code></td><td style="text-align:center">移除 linter 警告</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🚧 (施工)</td><td style="text-align:center"><code>:construction:</code></td><td style="text-align:center">工作进行中</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">👷 (工人)</td><td style="text-align:center"><code>:construction_worker:</code></td><td style="text-align:center">添加 CI 构建系统</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">💚 (绿心)</td><td style="text-align:center"><code>:green_heart:</code></td><td style="text-align:center">修复 CI 构建问题</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">⬆️ (上升箭头)</td><td style="text-align:center"><code>:arrow_up:</code></td><td style="text-align:center">升级依赖</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">⬇️ (下降箭头)</td><td style="text-align:center"><code>:arrow_down:</code></td><td style="text-align:center">降级依赖</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">📌 (图钉)</td><td style="text-align:center"><code>:pushpin:</code></td><td style="text-align:center">将依赖项固定到特定版本</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">📈 (上升趋势图)</td><td style="text-align:center"><code>:chart_with_upwards_trend:</code></td><td style="text-align:center">添加分析或跟踪代码</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">♻️ （回收）</td><td style="text-align:center"><code>:recycle:</code></td><td style="text-align:center">重构代码</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🐳 (鲸鱼)</td><td style="text-align:center"><code>:whale:</code></td><td style="text-align:center">Docker 相关工作</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🌐 (带子午线的地球仪)</td><td style="text-align:center"><code>:globe_with_meridians:</code></td><td style="text-align:center">国际化与本地化</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">➕ (加号)</td><td style="text-align:center"><code>:heavy_plus_sign:</code></td><td style="text-align:center">增加一个依赖</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">➖ (减号)</td><td style="text-align:center"><code>:heavy_minus_sign:</code></td><td style="text-align:center">减少一个依赖</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔧 (扳手)</td><td style="text-align:center"><code>:wrench:</code></td><td style="text-align:center">修改配置文件</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔨 (锤子)</td><td style="text-align:center"><code>:hammer:</code></td><td style="text-align:center">重大重构</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">✏️ (铅笔)</td><td style="text-align:center"><code>:pencil2:</code></td><td style="text-align:center">修复 typo</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">💩 (粑粑…)</td><td style="text-align:center"><code>:hankey:</code></td><td style="text-align:center">写了辣鸡代码需要优化</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">⏪ (倒带)</td><td style="text-align:center"><code>:rewind:</code></td><td style="text-align:center">恢复更改</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔀 (交叉向右的箭头)</td><td style="text-align:center"><code>:twisted_rightwards_arrows:</code></td><td style="text-align:center">合并分支</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">📦 (包裹)</td><td style="text-align:center"><code>:package:</code></td><td style="text-align:center">更新编译的文件或包</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">👽 (外星人)</td><td style="text-align:center"><code>:alien:</code></td><td style="text-align:center">由于外部API更改而更新代码</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🚚 (货车)</td><td style="text-align:center"><code>:truck:</code></td><td style="text-align:center">移动或者重命名文件</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">📄 (正面朝上的页面)</td><td style="text-align:center"><code>:page_facing_up:</code></td><td style="text-align:center">增加或更新许可证书</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">💥 (爆炸)</td><td style="text-align:center"><code>:boom:</code></td><td style="text-align:center">引入突破性的变化</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🍱 (铅笔)</td><td style="text-align:center"><code>:bento:</code></td><td style="text-align:center">增加或更新资源</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">👌 (OK手势)</td><td style="text-align:center"><code>:ok_hand:</code></td><td style="text-align:center">由于代码审查更改而更新代码</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">♿️ (轮椅)</td><td style="text-align:center"><code>:wheelchair:</code></td><td style="text-align:center">改善无障碍交互</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">💡 (灯泡)</td><td style="text-align:center"><code>:bulb:</code></td><td style="text-align:center">给代码添加注释</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🍻 (啤酒)</td><td style="text-align:center"><code>:beers:</code></td><td style="text-align:center">醉醺醺地写代码…</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">💬 (消息气泡)</td><td style="text-align:center"><code>:speech_balloon:</code></td><td style="text-align:center">更新文本文档</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🗃 (卡片文件盒)</td><td style="text-align:center"><code>:card_file_box:</code></td><td style="text-align:center">执行与数据库相关的更改</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔊 (音量大)</td><td style="text-align:center"><code>:loud_sound:</code></td><td style="text-align:center">增加日志</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔇 (静音)</td><td style="text-align:center"><code>:mute:</code></td><td style="text-align:center">移除日志</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">👥 (轮廓中的半身像)</td><td style="text-align:center"><code>:busts_in_silhouette:</code></td><td style="text-align:center">增加贡献者</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🚸 (孩童通行)</td><td style="text-align:center"><code>:children_crossing:</code></td><td style="text-align:center">优化用户体验、可用性</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🏗 (建筑建造)</td><td style="text-align:center"><code>:building_construction:</code></td><td style="text-align:center">结构变动</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">📱 (iPhone)</td><td style="text-align:center"><code>:iphone:</code></td><td style="text-align:center">做响应式设计</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🤡 (小丑脸)</td><td style="text-align:center"><code>:clown_face:</code></td><td style="text-align:center">嘲弄事物（直译，这个没明白）</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🥚 (鸡蛋)</td><td style="text-align:center"><code>:egg:</code></td><td style="text-align:center">增加彩蛋</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🙈 (看不见邪恶)</td><td style="text-align:center"><code>:see_no_evil:</code></td><td style="text-align:center">增加或更改gitignore</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">📸 (照相机闪光灯)</td><td style="text-align:center"><code>:camera_flash:</code></td><td style="text-align:center">增加或更新截图</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">⚗️ (蒸馏器)</td><td style="text-align:center"><code>:alembic:</code></td><td style="text-align:center">尝试新东西</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🔍 (放大镜)</td><td style="text-align:center"><code>:mag:</code></td><td style="text-align:center">SEO优化</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">☸️ (船的方向盘)</td><td style="text-align:center"><code>:wheel_of_dharma:</code></td><td style="text-align:center">关于Kubernetes的工作</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr><tr><td style="text-align:center">🏷 (标签)</td><td style="text-align:center"><code>:label:</code></td><td style="text-align:center">增加类型（FLow、Typescript）</td><td style="text-align:center"><button class="copy" onclick="copy(this)">复制</button></td></tr></tbody></table><p>如果<kbd>复制</kbd>键无法使用请前往：<a href="https://www.antmoe.com/posts/34ede0da/index.html%E3%80%82">https://www.antmoe.com/posts/34ede0da/index.html。</a></p><p><button class="btn" data-clipboard-text="Just because you can doesn't mean you should — clipboard.js">    Copy to clipboard </button></p><script src="https://cdn.jsdelivr.net/npm/clipboard@2/dist/clipboard.min.js"></script><script>let clipboard = new ClipboardJS(".copy");function copy(obj) {  // 被复制的文本内容  let text = obj.parentNode.parentNode.children[1].firstElementChild.innerText;  // 添加需要复制的文本  obj.setAttribute("data-clipboard-text", text);}clipboard.on("success", function (e) {  alert(`复制成功-> ${e.text}`);});</script><h2 id="文章参考"><a class="markdownIt-Anchor" href="#文章参考"></a> 文章参考</h2><ul><li><a href="https://gitmoji.carloscuesta.me/">gitmoji</a></li><li><a href="https://blog.huqing.site/201902/8da9/">Git提交时的emoji表情使用指南</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编码规范 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> commit表情符号 </tag>
            
            <tag> 手册查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客如何选择图床</title>
      <link href="/posts/de414de5/"/>
      <url>/posts/de414de5/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>自2020年8月9日jsdelivr发表了“<a href="https://github.com/jsdelivr/jsdelivr/pull/18247/files">新规则</a>”后，便引起QQ群、v2ex、知乎等各大平台的议论。<a href="https://xiaokang.me">小康</a></p><p>新规则中有一条是这样说的：</p><pre class="line-numbers language-none"><code class="language-none">running an image hosting website and using jsDelivr as a storage for all uploaded images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>大概意思就是不允许作为图站使用。于是便有了歧义。要多少的图片才能算是图站？博客里面图片放里面算吗？上传的图片怎样才不行？</p><p>虽然到目前为止，我的曾使用的还没有被和谐，但为了长久，只能考虑其他图床。但互联网上这么多图床，我们改如何选择呢？</p><h2 id="公益图床"><a class="markdownIt-Anchor" href="#公益图床"></a> 公益图床</h2><p>所谓公益图床也就是免费图床，这里我熟知的也就是SM.MS和路过图床(不代表只有这两个，还有很多这里就不一一举例了)。不过根据自己实际的体验，SM.MS是真的慢。至于路过，时慢时快，听朋友说还会莫名其妙的删图。因此，要不要使用还得三思。</p><ul><li><p><a href="http://SM.MS">SM.MS</a></p><p><a href="https://sm.ms/">https://sm.ms/</a></p></li><li><p>路过图床</p><p><a href="https://imgchr.com/">https://imgchr.com/</a></p></li></ul><h2 id="基于对象存储自建"><a class="markdownIt-Anchor" href="#基于对象存储自建"></a> 基于对象存储自建</h2><p>基于对象存储自建也就是使用各大平台提供的对象存储服务来进行自己搭建。但是需要注意的是大多数是收费的，还有一部分会每个月赠送一些流量。例如七牛云会每个月送10的流量（不包含HTTPS）。虽然收费，但是能确保稳定😏。对于对象存储这里有个误区需要说明一下。</p><p>对象存储的收费一般都是各种费用的综合，例如：存储费用+请求费用+流量费用等。简单来说就是当你存储一个1m的图片，首先你的存储费用就会成为固定的（一般10G内免费），如果这一天没有人访问，那么你只需要付费1m的存储费即可。当然一般存储费用不会太贵。但是如果有一万个人请求了你的图片，你需要付出的费用就会加上1万的请求费用在加上10000*1m大小的流量费用。</p><p>个别平台HTTP请求和HTTPS请求是分开计费的。</p><p>这里列举几个常用的对象存储供参考。</p><p>虽然各个平台都可以购买资源包，但是个人博客如果这么做成本是不是会更高呢？</p><h3 id="阿里云"><a class="markdownIt-Anchor" href="#阿里云"></a> 阿里云</h3><p><img src="http://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/7877230061/p37270.png" alt="img" /></p><p>阿里云定价：<a href="https://www.aliyun.com/price/product?spm=5176.7933691.1309819.6.43482a66MzDtuH#/oss/detail">https://www.aliyun.com/price/product?spm=5176.7933691.1309819.6.43482a66MzDtuH#/oss/detail</a></p><h3 id="结合cloudflare"><a class="markdownIt-Anchor" href="#结合cloudflare"></a> 结合Cloudflare</h3><p>虽然单纯的使用OSS很贵，但是阿里云与CF合作后便可以白嫖。使用阿里oss香港或其他海外地区地址的OSS，在套上CF即可实现回源流量全面，每月1亿次免费请求和10TB的免费图片处理额度。</p><blockquote><ol><li>针对满足条件的客户，可享受从Cloudflare CDN回源OSS流量全免的福利。</li><li>针对满足条件的客户，可享受每个账号每个月1亿次的免费请求次数。</li><li>针对满足条件的客户，可享受每个账号每个月10TB的免费图片处理额度。</li></ol></blockquote><p><a href="https://www.aliyun.com/product/news/detail?spm=5176.8465980.home-side.4.4e701450FwVsmk&amp;id=17749">https://www.aliyun.com/product/news/detail?spm=5176.8465980.home-side.4.4e701450FwVsmk&amp;id=17749</a></p><details class="toggle" ><summary class="toggle-button" style="">如何使用</summary><div class="toggle-content"><ol><li><p>创建一个香港地区的Bucket</p><p><img src="https://file.acs.pw/picgo/2021/04/18/20210418215953.png" alt="image-20210418215945825" /></p></li><li><p>oss设置里绑定域名</p><p><img src="https://file.acs.pw/picgo/2021/04/18/20210418220100.png" alt="image-20210418220100391" /></p><blockquote><p>域名需要使用cloudflare。</p></blockquote></li></ol></div></details><h3 id="腾讯云"><a class="markdownIt-Anchor" href="#腾讯云"></a> 腾讯云</h3><p>腾讯云与阿里类似，详情可参考:<a href="https://cloud.tencent.com/document/product/436/36522">https://cloud.tencent.com/document/product/436/36522</a></p><table><thead><tr><th style="text-align:left">计费项</th><th style="text-align:left">计费项说明</th><th style="text-align:left">计费公式</th></tr></thead><tbody><tr><td style="text-align:left">存储容量费用</td><td style="text-align:left">根据存储容量的大小进行计算，不同存储类型的单价不同</td><td style="text-align:left">存储容量费用 = 存储容量单价 * 月存储容量</td></tr><tr><td style="text-align:left">请求费用</td><td style="text-align:left">请求费用根据请求次数进行计算，不同存储类型的请求单价不同</td><td style="text-align:left">请求费用 = 每万次请求单价 * 月累计请求次数 / 10000</td></tr><tr><td style="text-align:left">数据取回费用</td><td style="text-align:left">根据数据取回量进行计算，低频和归档存储类型下载时会计算该项费用，不同存储类型的取回单价不同</td><td style="text-align:left">数据取回费用 = 每 GB 单价 * 月数据取回量</td></tr><tr><td style="text-align:left">流量费用</td><td style="text-align:left">包括外网下行流量、CDN 回源流量、跨地域复制流量和全球加速流量，不同流量类型的费用不同</td><td style="text-align:left">流量费用 = 每 GB 单价 * 日累计流量</td></tr><tr><td style="text-align:left">管理功能费用</td><td style="text-align:left">管理功能费用指用户开启并使用了管理功能（如清单、检索、批量处理、对象标签等功能）后所产生的费用。目前管理功能费用有清单功能费用、检索功能费用、批量处理费用和对象标签费用</td><td style="text-align:left">清单功能费用 = 列出的对象数/百万 * 单价</td></tr><tr><td style="text-align:left">检索功能费用 = 每 GB 单价 * 日累计数据检索量</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">批量处理费用包括任务费用和对象处理费用。 任务费用 = 创建的任务数 * 单价 对象处理费用 = 每处理万个对象 * 单价</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">对象标签费用 = 每万个标签数 * 单价</td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table><p>但是幸运的是腾讯会赠送老用户每个月15G的CDN流量。</p><h3 id="又拍云"><a class="markdownIt-Anchor" href="#又拍云"></a> 又拍云</h3><p>又拍云算是可以免费使用的了，加入又拍云联盟会一次性赠送67元代金券。可以用其开通对象存储，所造成的费用会优先用代金券进行抵用。</p><p><img src="https://7.dusays.com/2020/10/07/01db1092a01b3.png" alt="image-20201007214858361" /></p><p>详情地址：<a href="https://7.dusays.com/2020/10/07/01db1092a01b3.png">https://7.dusays.com/2020/10/07/01db1092a01b3.png</a></p><h3 id="七牛云"><a class="markdownIt-Anchor" href="#七牛云"></a> 七牛云</h3><p>七牛云也会每个月赠送10G空间以及10G下载流量。但是下载流量不包括HTTPS请求，如果你用HTTPS还是需要交钱的。</p><p><img src="https://7.dusays.com/2020/10/07/1b7e385b49a77.png" alt="image-20201007215047842" /></p><p>七牛云：<a href="https://portal.qiniu.com/">https://portal.qiniu.com/</a></p><h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3><p>其他平台的对象存储差不多也是这个样子，至于如何选择还得看各位博主的需求。</p><h2 id="其他图床"><a class="markdownIt-Anchor" href="#其他图床"></a> 其他图床</h2><p>为什么说白嫖呢，其实所谓的白嫖也就是嫖一些开发者出于公益心里而搭建的图床供大家使用。但让了也可能日后会变成收费图床或者跑路。</p><h3 id="白嫖图床"><a class="markdownIt-Anchor" href="#白嫖图床"></a> 白嫖图床</h3><p>这里主要介绍的是早些时候的微博图床和阿里图床还有一个其他平台的图床。</p><p>先谈谈微博图床，这个图床是大家很早就开始嫖的了。直到有一次微博开始添加防盗链，导致大片图片无法正常显示，不过解决方法还是有的。但也稍许麻烦了点。虽然现在有解决方案可以解决403问题，但还是不太建议，指不定啥时候再来一下</p><p>至于阿里图床，这里是不建议的。因为最近开始阿里好像在删图片。以前的图片没有，但某个时间段后的图片几乎过几天就会被删除。</p><p>至于GitHub+jsd这里就不过多介绍了，是否能用全凭造化。</p><h3 id="开发者的公益图床"><a class="markdownIt-Anchor" href="#开发者的公益图床"></a> 开发者的公益图床</h3><p>也就是互联网上的好心人搭建的图床为我们使用。</p><ol><li><p><a href="https://pic.alexhchu.com/">晚风图床</a></p><p><strong>已跑路</strong>晚风图床为一开发者出资搭建，图片存储于各种对象存储中。</p><blockquote><p>个人搭建，毕竟能力有限。无论是金钱还是时间。作者也明确表过态，如果被恶意使用导致自己无法承受压力后，就跑路了。</p></blockquote></li><li><p><a href="https://7bu.top/">去不图床</a></p><p><strong>收费图床</strong><a href="https://dusays.com/">杜老师</a>搭建的图床。其本人声称服务器续费10年之久。但腾讯云官网并没有包年包月不限量的资源包，因此同样存在如果被恶意刷取导致跑路的风险。</p></li></ol><h3 id="团队的图床"><a class="markdownIt-Anchor" href="#团队的图床"></a> 团队的图床</h3><ol><li><p><a href="https://www.v2ex.com/t/659652">doge图床</a></p><p>多吉搜索团队搭建的图床。目前出于内测状态需要自行申请。但我曾对作者发送过E-Mail询问过是否可以当作博客图床长期使用。作者的回复是肯定的，但2021年后不排除会实行收费制（包含免费plan）。也就是说这个图传是需要自己掏腰包的。但目前还不知道免费plan的额度是多少。</p></li></ol><h2 id="使用picgo快速上传"><a class="markdownIt-Anchor" href="#使用picgo快速上传"></a> 使用PicGo快速上传</h2><p>PicGo可以配合typora实现自动上传。这个特性我曾在<a href="https://www.antmoe.com/posts/c765ad20/index.html">typora自动图片自动上传到图床</a>谈到过。这里只介绍PicGo如何配置。</p><ol><li><p>接口类</p><p>例如一些图床会提供接口，此时可以使用<code>web-uploader</code>插件进行。</p><p><img src="https://7.dusays.com/2020/10/07/582be815ba5df.png" alt="image-20201007221933113" /></p></li><li><p>基于lskypro程序搭建的图床</p><p>有好心的开发者开发了<code>lskypro</code>这个插件。因此只需要填写上传地址和TOKEN即可。</p><p><img src="https://7.dusays.com/2020/10/07/5f0a92bdfe39a.png" alt="image-20201007222124055" /></p></li><li><p>其他</p><p>可以参考是否存在插件可以上传。<a href="https://github.com/PicGo/Awesome-PicGo">https://github.com/PicGo/Awesome-PicGo</a></p></li></ol><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>以下总结仅代表<strong>个人观点</strong>。</p><table><thead><tr><th style="text-align:center">图床类型</th><th style="text-align:center">推荐度</th><th style="text-align:center">代表图床</th><th style="text-align:center">稳定性</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">公益图床</td><td style="text-align:center">⭐</td><td style="text-align:center"><a href="https://sm.ms/">SM.MS</a>、<a href="https://imgchr.com/">路过图床</a></td><td style="text-align:center">未知</td><td style="text-align:center">如果一些临时图片，我觉得还是可以用的</td></tr><tr><td style="text-align:center">对象存储</td><td style="text-align:center">⭐⭐</td><td style="text-align:center">主流平台都可以</td><td style="text-align:center">贼稳</td><td style="text-align:center">如果有钱还是可以用的。</td></tr><tr><td style="text-align:center">白嫖图床</td><td style="text-align:center">⭐⭐</td><td style="text-align:center">阿里图床、微博图床</td><td style="text-align:center">不稳</td><td style="text-align:center">这两个图床的问题文中已阐述。</td></tr><tr><td style="text-align:center">开发者的公益图床</td><td style="text-align:center">⭐⭐⭐</td><td style="text-align:center"><a href="https://7bu.top/">去不图床</a></td><td style="text-align:center">还算稳</td><td style="text-align:center">取决于是否有人恶意攻击，以及站长的钞能力</td></tr><tr><td style="text-align:center">团队的图床</td><td style="text-align:center">⭐⭐⭐⭐</td><td style="text-align:center"><a href="https://www.v2ex.com/t/659652">doge图床</a></td><td style="text-align:center">还算稳</td><td style="text-align:center">如果只是免费，那我个人觉得不会长期，但打算出付费套餐，那。。</td></tr></tbody></table><p>综上所属，个人建议的图床就算是开发者的图床还有多吉搜索的图床。目前<a href="https://www.antmoe.com/">小康博客</a>在jsd事件后使用的图床为：</p><ul><li><p>2021-04-06</p><p>博客更新阿里OSS+CF</p></li><li><p>2020-10-05</p><ul><li>下午：博客更换去不图床：<a href="https://7bu.top/">https://7bu.top/</a></li></ul></li><li><p>2020-08-12</p><ul><li>博客开始尝试使用晚风图床：<a href="https://pic.alexhchu.com/">https://pic.alexhchu.com/</a></li></ul></li></ul><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://blog.cyfan.top/p/eb490c73.html">图床的千层套路</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 优雅写作 </category>
          
          <category> 图床配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客每天定时提交网址给百度</title>
      <link href="/posts/b5e29de/"/>
      <url>/posts/b5e29de/</url>
      
        <content type="html"><![CDATA[<h2 id="项目说明"><a class="markdownIt-Anchor" href="#项目说明"></a> 项目说明</h2><p>首先说明下这是一个hexo的插件，和其他插件一样，只需要<code>npm i</code>即可安装。先说说我的需求：需求产生于建站之初，那时百度还搜索不到我的小康博客，因此借助Leancloud的环境搭建了一个每天定时提交的小程序，当时使用django框架进行的开发。后来由于各种原因，发现已经server 500了，不过不清楚原因，但无所谓了，因为我打算合理用actions进行重新开发。同样的出于原版的参考还是打算用python完成，但发现官网贴心的提供了一个<code>curl</code>命令提交。好吧，这就省下了很多事。因此开发了此插件。其原理：</p><p><img src="https://files.alexhchu.com/2020/10/01/c2d099b9902c4.png" alt="image-20201001220236773" /></p><h2 id="此项目适合什么样的人群"><a class="markdownIt-Anchor" href="#此项目适合什么样的人群"></a> 此项目适合什么样的人群</h2><ol><li><p>想要提高百度收录量</p><p>本人不打算扩展必应搜索，谷歌搜索等其他平台。因此在国内对于大多数人来说百度还是主力，而谷歌不需要你主动，他会自己找到你。</p></li><li><p>使用了持续集成服务</p><p>不适用于本地<code>hexo d</code>命令的人群，因此这个命令不会讲GitHub的配置文件添加进去。因此如果你没有使用持续集成服务，那么可以考虑使用持续集成或者进入public目录手动git提交。</p></li></ol><h2 id="插件如何使用"><a class="markdownIt-Anchor" href="#插件如何使用"></a> 插件如何使用</h2><ol><li><p>安装插件</p><p>在你博客的根目录打开命令行，安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-baidupush<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png" alt="image-20201001220758045" /></p></li><li><p>接下来生成内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cl <span class="token operator">&amp;&amp;</span> hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你会发现生成的public目录中多了一个文件和一个目录</p><p><img src="https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png" alt="image-20201001222058845" /></p><blockquote><p>如果没有，请检查插件是否成功安装。</p></blockquote></li><li><p>部署页面</p><p>此时的部署并不能使用<code>hexo d</code>命令，因为这个命令不能将<code>.github</code>这个文件添加。因此只能手动添加。如果你在持续集成中使用了此命令，请尝试替换为如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./public<span class="token function">git</span> init<span class="token function">git</span> config --global user.name <span class="token string">'name'</span> <span class="token function">git</span> config --global user.email <span class="token string">'yourEmail'</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"Update"</span><span class="token function">git</span> push --force --all 地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中地址跟你环境有关，如果是ssh认证推送，那么请填写你的ssh仓库地址。如果是密钥推送，那么GitHub的密钥格式为<code>https://TOKEN:地址</code>，例如：<code>https://aaaaa@github.com/tzki/tzki.github.io</code></p><blockquote><p>如果是本地<code>hexo d</code>用户可以参考上面命令做相同的操作。但这一定是繁琐的过程，建议更换持续集成或者放弃使用此插件。</p></blockquote></li><li><p>添加TOKEN</p><p>这里使用的是你推送的仓库，不是源码仓库。例如：<code>https://github.com/tzki/tzki.github.io</code>。然后添加密钥。（如果没有使用过actions，第一次需要开启，也就是点一下那个绿色的按钮。）</p><p><img src="https://files.alexhchu.com/2020/09/30/78782c5558d7d.png" alt="image-20200930190800396" /></p><p><img src="https://files.alexhchu.com/2020/09/30/473c7772e13fb.png" alt="image-20200930190943296" /></p></li><li><p>测试</p><p>接下来只需要对此仓库点个star即可看到有actions运行。</p><p><img src="https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png" alt="image-20201001223100700" /></p></li><li><p>提交的频率</p><p>插件默认提交的频率是一天两次，分别为早上八点和晚上六点。如果你想修改那么可以再根目录的配置文件添加字段<code>commit_cron</code>进行配置，值采用GitHub的cron表达式。默认为<code>0 0,10 * * *</code> 遵循UTC时间。举个例子：每天8点(北京时间)提交一次：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">commit_cron<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>GitHub的cron表达式没有秒这个单位，即第一位为分钟。</p></blockquote><p>当然这个配置是非必填项，不在配置文件写也不会引起报错的。</p></li></ol><h2 id="项目参考"><a class="markdownIt-Anchor" href="#项目参考"></a> 项目参考</h2><p>生成url部分代码参考插件了插件<a href="https://www.npmjs.com/package/hexo-baidu-url-submit">hexo-baidu-url-submit</a>，没有直接使用而是搞一个新的，是因为考虑到了并不是每个人都装有这个插件，因此只能在自己的插件中集成这个功能即生成文章URL的文件。</p>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> hexo-push </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node安装及更换源</title>
      <link href="/posts/a35be50a/"/>
      <url>/posts/a35be50a/</url>
      
        <content type="html"><![CDATA[<h2 id="nodejs的安装"><a class="markdownIt-Anchor" href="#nodejs的安装"></a> NodeJs的安装</h2><p>无论是何种系统进行安装，都需要到其<a href="https://nodejs.org/zh-cn/">官网</a>进行下载。</p><p><img src="https://files.alexhchu.com/2020/09/28/9376e116711dd.png" alt="image-20200928171937938" /></p><h3 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> Windows</h3><p>Windows版本以Windows10 64位为例，为了方便我选择msi安装方式进行安装。</p><ol><li><p>下载</p><p><img src="https://files.alexhchu.com/2020/09/28/7ebe76d36f15d.png" alt="image-20200928172703010" /></p></li><li><p>安装步骤</p><ul><li><p>选择安装位置</p><p><img src="https://files.alexhchu.com/2020/09/28/3ce8efc8c9b2c.png" alt="image-20200928173312063" /></p></li><li><p>下一步</p><p><img src="https://files.alexhchu.com/2020/09/28/3783363276438.png" alt="image-20200928173338162" /></p><p>接下来一路下一步即可。</p></li></ul></li><li><p>验证是否安装成功</p><p><img src="https://files.alexhchu.com/2020/09/28/ab0e545f77013.png" alt="image-20200928181405646" /></p><p>终端内输入命令<code>node -v</code>即可验证node是否安装成功。输入<code>npm -v</code>即可验证npm是否安装成功。</p></li></ol><h3 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> Linux</h3><ol><li><p>下载安装包</p><p><img src="https://tva1.sinaimg.cn/large/832afe33ly1g9jo1d2ta0j20ug0gumy6.jpg" alt="" /></p></li><li><p>如果是服务器，那么上传到服务器。如果是本地，那么直接解压即可。</p><p>解压命令参考<code>tar -xvf 文件名</code>。</p></li><li><p>切换用户，切换用户到root用户，并将解压出来的文件夹移动。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> node /usr/local/src/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>变基环境变量<br /><code>vi /etc/profile</code></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">export</span> <span class="token assign-left variable">NODE_HOME</span><span class="token operator">=</span>/usr/local/src/node<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$NODE_HOME</span>/bin:<span class="token environment constant">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://tva1.sinaimg.cn/large/832afe33ly1g9jo38c017j20in0gw750.jpg" alt="" /></p></li><li><p>运行命令<code>source /etc/profile</code>使配置生效</p></li></ol><h2 id="多版本管理"><a class="markdownIt-Anchor" href="#多版本管理"></a> 多版本管理</h2><p>对于node的多版本管理推荐使用nvm。其GitHub开源（Windows）地址：<a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p><p><img src="https://files.alexhchu.com/2020/09/28/7deec41f1ab42.png" alt="image-20200928183305331" /></p><p>为了方便起见推荐使用安装版本。</p><ol><li><p>双击安装二进制文件进行安装</p></li><li><p>管理问题</p><p><img src="https://files.alexhchu.com/2020/09/28/4ff595aa4bd1d.png" alt="image-20200928183437109" /></p><p>上面的原因是：nvm检测到已经安装了node12.18.4版本，正在询问是否使用nvm对这个版本进行管理。选择<strong>是</strong>即可。</p></li><li><p>安装完成</p><p>安装完成后，打开命令行输入<code>nvm v</code>即可看到安装的版本。</p><p><img src="https://files.alexhchu.com/2020/09/28/dee009e26620d.png" alt="image-20200928183628717" /></p></li></ol><h2 id="换源"><a class="markdownIt-Anchor" href="#换源"></a> 换源</h2><p>npm默认使用的是官方源，在国内使用非常不便。为了便于国内开发者下载包，有热心的开发者提供了nrm，即对npm源管理的工具。</p><ol><li><p>通过<code>npm install -g nrm</code>进行全局安装。</p><p><img src="https://files.alexhchu.com/2020/09/28/8efcad9b1fc57.png" alt="image-20200928185057491" /></p></li><li><p>查看当前源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nrm <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/28/de4a7bb431821.png" alt="image-20200928185152287" /></p></li><li><p>使用淘宝源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nrm use taobao<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/28/cfe1f3e1293ee.png" alt="image-20200928185225571" /></p></li><li><p>其他使用</p><p><img src="https://files.alexhchu.com/2020/09/28/e78732a80fc21.png" alt="image-20200928185517613" /></p></li></ol><h2 id="npm的替代工具yarn"><a class="markdownIt-Anchor" href="#npm的替代工具yarn"></a> NPM的替代工具YARN</h2><p>简单来说，Yarn 是为了弥补 npm 的一些缺陷而出现的。</p><ol><li><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g <span class="token function">yarn</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/28/8606c336336f4.png" alt="image-20200928185930302" /></p></li><li><p>验证版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/28/ae9b304f8d861.png" alt="image-20200928190007147" /></p></li><li><p>使用介绍</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">NPM</th><th style="text-align:center">YARN</th></tr></thead><tbody><tr><td style="text-align:center">初始化</td><td style="text-align:center"><code>npm init</code></td><td style="text-align:center"><code>yarn init</code></td></tr><tr><td style="text-align:center">默认安装依赖</td><td style="text-align:center"><code>npm install</code></td><td style="text-align:center"><code>yarn install</code></td></tr><tr><td style="text-align:center">安装某个依赖并保存</td><td style="text-align:center"><code>npm install xxxx -save</code></td><td style="text-align:center"><code>yarn add xxxx</code></td></tr><tr><td style="text-align:center">安装全局依赖</td><td style="text-align:center"><code>npm install -g xxxx</code></td><td style="text-align:center"><code>yarn global add xxxx</code></td></tr><tr><td style="text-align:center">移除依赖</td><td style="text-align:center"><code>npm uninstall xxxx -save</code></td><td style="text-align:center"><code>yarn remove xxxx</code></td></tr><tr><td style="text-align:center">更新依赖</td><td style="text-align:center"><code>npm update</code></td><td style="text-align:center"><code>yarn upgrade xxxx</code></td></tr><tr><td style="text-align:center">运行指令</td><td style="text-align:center"><code>npm run</code></td><td style="text-align:center"><code>yarn run</code></td></tr></tbody></table></li></ol><h3 id="关于yarn全局安装"><a class="markdownIt-Anchor" href="#关于yarn全局安装"></a> 关于yarn全局安装</h3><ol><li><p>修改全局安装目录, 先创建好目录。例如我的目录<code>F:\coding\nvm\yarn</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> prefix F:<span class="token punctuation">\</span>coding<span class="token punctuation">\</span>nvm<span class="token punctuation">\</span>yarn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改全局安装目录的bin目录位置, bin目录需要自己创建或者全局安装一个插件后自己会生成。为了能全局使用安装出的命令，还需要将其（bin目录）加入环境变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">"F:<span class="token entity" title="\c">\c</span>oding<span class="token entity" title="\n">\n</span>vm\yarn"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改全局缓存目录, 先创建好目录(cache), 和global放在同一层目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> cache-folder F:<span class="token punctuation">\</span>coding<span class="token punctuation">\</span>nvm<span class="token punctuation">\</span>yarn<span class="token punctuation">\</span>cache<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://rmt.ladydaily.com/fetch/tzk/storage/.png?w=1280&amp;fmt=jpg" alt="image-20201024111358451" /></p></li><li><p>全局安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> global <span class="token function">add</span> xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="源管理"><a class="markdownIt-Anchor" href="#源管理"></a> 源管理</h3><p>yarn也有类似的工具，即yrm。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g yrm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/28/e4d3c84f6c09b.png" alt="image-20200928190956058" /></p><p>使用方式与nrm类似。</p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> NodeJs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NodeJs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Speak开坑记录</title>
      <link href="/posts/3e39cf25/"/>
      <url>/posts/3e39cf25/</url>
      
        <content type="html"><![CDATA[<h2 id="项目说明"><a class="markdownIt-Anchor" href="#项目说明"></a> 项目说明</h2><p>一个基于Gitee的“说说”，通过在gitee仓库中的issue进行说说的展示。项目灵感来自于：<a href="https://tomotoes.com/blog/weibo/">微博</a></p><h2 id="开坑记录"><a class="markdownIt-Anchor" href="#开坑记录"></a> 开坑记录</h2><blockquote><p>项目最早写于2020年8月9日，但当时的做法是通过外部载入各种依赖（JQuery、marked等）进行的，虽然中间还有一次试图将其并入js内部，但采用的方式仅仅是通过jQuery的getScript方式，由于同时间所用Hexo博客主题作者更新了pjax，导致出现了一些出人意料地错误。直到9月20日，最终决定通过webpack打包，将其放在一起并放弃jQuery（为了减少体积）。</p><ul><li>2022年2月28日，基于kkapi的speak重新发版-4.2.0</li><li>2021年3月22日，通过vue重构整个项目</li></ul></blockquote><h2 id="4x"><a class="markdownIt-Anchor" href="#4x"></a> 4.x</h2><p>参考文档：<a href="https://kkapi.js.org/posts/ispeak/#%E4%BB%8B%E7%BB%8D">https://kkapi.js.org/posts/ispeak/#介绍</a></p><h2 id="3x"><a class="markdownIt-Anchor" href="#3x"></a> 3.x</h2><blockquote><p>预览地址： <a href="https://www.antmoe.com/speak/" target="_blank">https://www.antmoe.com/speak/</a></p></blockquote><p>关于数据源的几个问题：</p><ol><li><p>为什么选择Gitee/GitHub作为数据源，而不是直接自建？</p><p>选择Gitee/GitHub等现有平台主要因为这样就不需要考虑写身份验证，防刷机制等问题。只需要考虑将其数据读取并存储即可。</p></li><li><p>为什么选择MongoDB，而不是MySQL？</p><p>首先是因为MongoDB官网提供免费的512m的存储，其次身为前端程序员，MySQL这种关系型数据库的玩法早已万光。</p></li><li><p>为什么将Gitee/GitHub数据存储到数据库而不是在线获取？</p><p>Gitee/GitHub的API在未认证的情况下每小时只可以请求60次（GitHub未验证），这60次包含任何请求，为了避开这个限制，只能将数据存储到其他数据库。</p></li><li><p>API怎么搭建？</p><p>api使用koa2，因此你可以自由选择部署到服务器亦或者是vercel。</p></li></ol><h3 id="33"><a class="markdownIt-Anchor" href="#33"></a> 3.3</h3><blockquote><p>由于vercel部分情况下过于龟速，因此添加了代理功能，目前试用CF进行代理。用户可以根据自身情况决定试用何种CDN代理。</p></blockquote><p><img src="https://file.acs.pw/picGo/2021/3/22/fec9a52c7561cc957c9d9ca42a5a0ba0.jpg" alt="ispeak3.3流程图" /></p><p><img src="https://file.acs.pw/picGo/2021/3/22/53011f6726a7d81c99cae603f0964f40.png" alt="" /></p><blockquote><p>此浏览器插件修改自handsome时光机插件。</p></blockquote><h3 id="32"><a class="markdownIt-Anchor" href="#32"></a> 3.2</h3><blockquote><p>弃用爬虫项目，使用基于vercel部署的api服务获取数据。</p></blockquote><h3 id="31"><a class="markdownIt-Anchor" href="#31"></a> 3.1</h3><blockquote><p>改变3.0版本一次性加载全部数据为分批加载。</p></blockquote><h3 id="30"><a class="markdownIt-Anchor" href="#30"></a> 3.0</h3><blockquote><p>使用vue2.0重构项目，数据来源：爬虫项目爬取issue并发布到npm。</p></blockquote><h2 id="3x之前"><a class="markdownIt-Anchor" href="#3x之前"></a> 3.x之前</h2><blockquote><p>好像已经不能用了qwq</p></blockquote><h3 id="基本架构"><a class="markdownIt-Anchor" href="#基本架构"></a> 基本架构</h3><p>为了方便使用，采用了类似jQuery的写法。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入代码高亮模块</span><span class="token keyword">const</span> hljs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./js/highlight.min"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// // 导入marked解析模块</span><span class="token keyword">const</span> marked <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./js/marked.min"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">window<span class="token punctuation">,</span> undefiend</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> <span class="token function-variable function">Speak</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 传入一个对象</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Speak<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>init</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">Speak</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        constructor<span class="token operator">:</span> Speak<span class="token punctuation">,</span>        <span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 调用初始化方法</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    Speak<span class="token punctuation">.</span>extend <span class="token operator">=</span> <span class="token class-name">Speak</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">extend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 插入元素方法</span>    Speak<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 对象方法</span>    <span class="token class-name">Speak</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        s<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Speak</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>init<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">Speak</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>    window<span class="token punctuation">.</span>Speak <span class="token operator">=</span> Speak<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其好处就是在使用时只需要实例化Speak对象即可完成一切。</p><h3 id="第一个问题原生js发送异步请求"><a class="markdownIt-Anchor" href="#第一个问题原生js发送异步请求"></a> 第一个问题：原生JS发送异步请求</h3><p>由于一开始的写法是获取与创建是分开写的，即获取后返回一个promise对象，通过then方法在将获取到的数据进行创建（渲染）。因此放弃jQuery的Ajax方法后也要返回一个Promise对象，这样才能以最小的成本兼容以前的写法。</p><blockquote><p>参数<code>_this</code>调用时传入this</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">getSpeak</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_this</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> url <span class="token operator">=</span>            <span class="token string">"https://gitee.com/api/v5/repos/"</span> <span class="token operator">+</span>            _this<span class="token punctuation">.</span>owner <span class="token operator">+</span>            <span class="token string">"/"</span> <span class="token operator">+</span>            _this<span class="token punctuation">.</span>repo <span class="token operator">+</span>            <span class="token string">"/issues?state=open&amp;sort=created&amp;direction=desc&amp;page="</span> <span class="token operator">+</span>            _this<span class="token punctuation">.</span>page <span class="token operator">+</span>            <span class="token string">"&amp;per_page="</span> <span class="token operator">+</span>            _this<span class="token punctuation">.</span>per_page <span class="token operator">+</span>            <span class="token string">"&amp;creator="</span> <span class="token operator">+</span>            _this<span class="token punctuation">.</span>owner<span class="token punctuation">;</span>        <span class="token comment">// 创建核心对象</span>        <span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 发送请求</span>        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 监听请求</span>        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 如果成功则执行</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(2|3)\d&#123;2&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">let</span> date <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>                    _this<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    _this<span class="token punctuation">.</span>total_count <span class="token operator">=</span> xhr<span class="token punctuation">.</span><span class="token function">getResponseHeader</span><span class="token punctuation">(</span><span class="token string">"total_count"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    _this<span class="token punctuation">.</span>total_page <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>total_count <span class="token operator">/</span> _this<span class="token punctuation">.</span>per_page<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        date <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> date<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                            temp<span class="token punctuation">.</span>comments <span class="token operator">=</span> date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"comments"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            temp<span class="token punctuation">.</span>body <span class="token operator">=</span> Speak<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span>date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"body"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            temp<span class="token punctuation">.</span>labels <span class="token operator">=</span> Speak<span class="token punctuation">.</span><span class="token function">getLabels</span><span class="token punctuation">(</span>_this<span class="token punctuation">,</span> date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"labels"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            temp<span class="token punctuation">.</span>created_at <span class="token operator">=</span> Speak<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span>date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"created_at"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            temp<span class="token punctuation">.</span>html_url <span class="token operator">=</span> date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"html_url"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            _this<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token function">resolve</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> xhr<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 失败执行</span>                <span class="token function">reject</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">,</span> xhr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 发送请求数据</span>        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用API后，将返回的数据再次进行提取与处理即（<code>getBody</code>、<code>getLabels</code>等方法），并将结果放入一个临时的对象，将其对象添加到数组。等渲染时遍历此数组即可。因此这个数组大概是这样的：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 内容</span>        comments<span class="token operator">:</span><span class="token string">'内容'</span><span class="token punctuation">,</span>        labels<span class="token operator">:</span><span class="token string">'标签'</span><span class="token punctuation">,</span>        created_at<span class="token operator">:</span><span class="token string">'创建时间'</span><span class="token punctuation">,</span>        html_url<span class="token operator">:</span><span class="token string">'当前issue的地址'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 内容</span>        comments<span class="token operator">:</span><span class="token string">'内容'</span><span class="token punctuation">,</span>        labels<span class="token operator">:</span><span class="token string">'标签'</span><span class="token punctuation">,</span>        created_at<span class="token operator">:</span><span class="token string">'创建时间'</span><span class="token punctuation">,</span>        html_url<span class="token operator">:</span><span class="token string">'当前issue的地址'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第二个问题创建元素"><a class="markdownIt-Anchor" href="#第二个问题创建元素"></a> 第二个问题：创建元素</h3><p>jQuery的工厂函数过于好用，但为了减少体积，不得不抛弃。因此便遇到了另一个问题，dom元素的操作。</p><ol><li><p>由于gitee的图片是带有防盗链的，因此需要在头部插入一个标签meta标签，表示<code>no-referrer</code>才可以正常使用其防盗链图片。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">noRefer</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"meta"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    element<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"referrer"</span><span class="token punctuation">;</span>    element<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">"no-referrer"</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>外部CSS的嵌入</p><p>由于使用了打包工具，只需要通过<code>require</code>进行加载即可。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">loadingCss</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./css/loading.css"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"default"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">speakCss</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./css/Speak.css"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"default"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>按钮的插入</p><p>起初并不打算插入翻页按钮，因为嵌入到博客后，每个博客都会有自己的风格及按钮样式，但又为了初始化及使用方便，因此还是决定添加按钮和页码显示的label。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">createBtn</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_this</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'is-container'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    container<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">'afterend'</span><span class="token punctuation">,</span>_this<span class="token punctuation">.</span>prevBtn<span class="token punctuation">)</span>    container<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">'afterend'</span><span class="token punctuation">,</span>_this<span class="token punctuation">.</span>nextBtn<span class="token punctuation">)</span>    container<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">'afterend'</span><span class="token punctuation">,</span>_this<span class="token punctuation">.</span>pageLabel<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于<code>insertAdjacentHTML</code>方法可参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/insertAdjacentHTML">insertAdjacentHTML</a></p></li></ol><h3 id="第三个问题代码高亮插件highlight过大"><a class="markdownIt-Anchor" href="#第三个问题代码高亮插件highlight过大"></a> 第三个问题：代码高亮插件highlight过大</h3><p><code>highlight.min.js</code>文件已经100kb大小了，加上<code>marked.min.js</code>34kb，导致最后生成的文件大小150kb+。</p><blockquote><p>不过没办法，目前无解。</p></blockquote><h2 id="如何使用"><a class="markdownIt-Anchor" href="#如何使用"></a> 如何使用</h2><p>使用很简单，只需要一个class为<code>container</code>的容器和一个实例化的Speak对象即可。</p><blockquote><p>由于基于某个主题开发，部分样式可能存在细微差别。</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>is-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">new</span> <span class="token class-name">Speak</span><span class="token punctuation">(</span>        <span class="token punctuation">&#123;</span>            nickname<span class="token operator">:</span> <span class="token string">'🦄Dreamy.TZK'</span><span class="token punctuation">,</span>            per_page<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>            owner<span class="token operator">:</span> <span class="token string">"antmoe"</span><span class="token punctuation">,</span>            repo<span class="token operator">:</span> <span class="token string">"xiaokang.me"</span><span class="token punctuation">,</span>            defaultLabelName<span class="token operator">:</span> <span class="token string">"Default"</span><span class="token punctuation">,</span>            defaultLabelColor<span class="token operator">:</span> <span class="token string">"#ffc107"</span><span class="token punctuation">,</span>            <span class="token comment">// highlight样式</span>            highlightcss<span class="token operator">:</span>            <span class="token string">"https://cdn.bootcdn.net/ajax/libs/highlight.js/10.1.1/styles/monokai-sublime.min.css"</span><span class="token punctuation">,</span>            emojiLabel<span class="token operator">:</span>            <span class="token punctuation">&#123;</span>                Coder<span class="token operator">:</span> <span class="token string">"🎯"</span><span class="token punctuation">,</span>                日常<span class="token operator">:</span> <span class="token string">"💬"</span><span class="token punctuation">,</span>                Whoiam<span class="token operator">:</span> <span class="token string">'😶'</span><span class="token punctuation">,</span>                想法<span class="token operator">:</span> <span class="token string">"💫"</span><span class="token punctuation">,</span>                <span class="token constant">TODO</span><span class="token operator">:</span> <span class="token string">"🚧"</span><span class="token punctuation">,</span>                随便说说<span class="token operator">:</span> <span class="token string">"🎈"</span><span class="token punctuation">,</span>                测试<span class="token operator">:</span> <span class="token string">'👻'</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            prevBtn<span class="token operator">:</span><span class="token string">'&lt;a class="btn-beautify button--animated left larger prev red" href="#" title="上一页" style="display:none;float:left" data-pjax-state="">&lt;i class="far fa-hand-point-left fa-fw">&lt;/i> 上一页&lt;/a>'</span><span class="token punctuation">,</span>            nextBtn<span class="token operator">:</span><span class="token string">'&lt;a class="btn-beautify button--animated larger next red" href="#" title="下一页" style="float: right; display: block;" data-pjax-state="">&lt;i class="far fa-hand-point-right fa-fw">&lt;/i> 下一页&lt;/a>'</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>DEMO：<a href="https://www.antmoe.com/speak">Speak</a></p>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> Speak </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Speak </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript开发中的常用代码参考</title>
      <link href="/posts/b17c410c/"/>
      <url>/posts/b17c410c/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>此文记录项目开发中的通用代码块及编码方法的总结。</p><h2 id="一个最简单的服务器框架nodejs"><a class="markdownIt-Anchor" href="#一个最简单的服务器框架nodejs"></a> 一个最简单的服务器框架（NodeJS）</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入模块 （yarn add express 或 npm i express 安装）</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"express"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 实例化对象</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 定义端口号</span><span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span><span class="token comment">// 设置路由</span><span class="token comment">/** * 当访问根路径时返回Hello World */</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 监听端口</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Server running at  http://127.0.0.1:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当服务器创建完成后，通过<code>node server.js</code>进行启动服务器。</p><p><img src="https://files.alexhchu.com/2020/09/12/0ec777e49e3be.png" alt="image-20200912203247714" /></p><h2 id="静态目录"><a class="markdownIt-Anchor" href="#静态目录"></a> 静态目录</h2><p>所谓静态目录就是暴露出一个静态目录，常用于静态资源的引用。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">"/public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/12/f5eb72935e8b0.png" alt="image-20200912203945119" /></p><h2 id="设置请求头"><a class="markdownIt-Anchor" href="#设置请求头"></a> 设置请求头</h2><p>使用all方法表示所有请求都必须先通过此该中间件。</p><blockquote><p>须放在请求路由之前，如果放在逻辑路由后，会导致无法设置成功。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Credentials"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span>        <span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span>        <span class="token string">"Content-Type,Content-Length,Authorization,Accept,X-Requested-With"</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Methods"</span><span class="token punctuation">,</span> <span class="token string">"PUT,POST,GET,DELETE,OPTIONS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/12/2bcd8ae621ac0.png" alt="image-20200912204429859" /></p><h2 id="cookie-session插件的使用"><a class="markdownIt-Anchor" href="#cookie-session插件的使用"></a> cookie-session插件的使用</h2><p>使用此插件主要是为了保持会话。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入cookie-session模块（yarn add cookie-session 或 npm i cookie-session 安装）</span><span class="token keyword">const</span> cookieSession <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"cookie-session"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 为cookieSession设置属性</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  <span class="token function">cookieSession</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 建立cookie的名字</span>    name<span class="token operator">:</span> <span class="token string">"JDCJ"</span><span class="token punctuation">,</span>    <span class="token comment">// 设置session 的key</span>    <span class="token comment">// 是个数组 每一次请求会循环去一个数值进行加密</span>    keys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"123"</span><span class="token punctuation">,</span> <span class="token string">"456"</span><span class="token punctuation">,</span> <span class="token string">"xiaokang"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">// 过期事件 24小时过期</span>    maxAge<span class="token operator">:</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">69</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/cookie"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 设置Cookie</span>  req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"已建立ID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/12/475c7ce5beacb.png" alt="image-20200912210326530" /></p><p>清楚Cookie只需将其设置为<code>null</code>即可。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="模板引擎的使用"><a class="markdownIt-Anchor" href="#模板引擎的使用"></a> 模板引擎的使用</h2><p>服务器逻辑</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 设置模板（视图）存放目录</span>app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"views"</span><span class="token punctuation">,</span> <span class="token string">"./views"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置模板引擎</span>app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"view engine"</span><span class="token punctuation">,</span> <span class="token string">"pug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 渲染模板引擎</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/pug"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Hey"</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">"Hello there!"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>视图文件<code>index</code></p><pre class="line-numbers language-pug" data-language="pug"><code class="language-pug"><span class="token tag">html</span>  <span class="token tag">head</span>    <span class="token tag">title</span><span class="token punctuation">=</span><span class="token code"> title</span>  <span class="token tag">body</span>    <span class="token tag">h1</span><span class="token punctuation">=</span><span class="token code"> message</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/12/e09ba2711f422.png" alt="image-20200912212314156" /></p><h2 id="请求参数获取getpost"><a class="markdownIt-Anchor" href="#请求参数获取getpost"></a> 请求参数获取（GET/POST）</h2><h3 id="get"><a class="markdownIt-Anchor" href="#get"></a> GET</h3><p>get请求可以直接获取参数，通过<code>req.query</code>即可。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/get"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"query: "</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"id:"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/12/81b1c3a343589.png" alt="image-20200912220549164" /></p><h3 id="post"><a class="markdownIt-Anchor" href="#post"></a> POST</h3><p>post请求的参数不可以直接获取，需要使用<code>body-parser</code>模块进行解析。</p><p>关于<code>body-parser</code>更多使用参考：<a href="https://github.com/changeclass/nodejs-learning-guide/blob/master/%E8%BF%9B%E9%98%B6/body-parser.md">github</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入解析模块</span><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"body-parser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 解析urlencoded请求体</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> extended<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 解析JSON请求体</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取POST请求参数</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"/post"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/12/b3e9d90ea717c.png" alt="image-20200912221703979" /></p><h2 id="通过工具方法异步获取读取文件内容"><a class="markdownIt-Anchor" href="#通过工具方法异步获取读取文件内容"></a> 通过工具方法异步获取/读取文件内容</h2><p>此场景应用于：需要读取一个文件，其内容需要被某个功能使用，可以将其在程序运行时读取，然后附加到request请求上。例如如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> utils <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./utils"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 读取用户数据</span>  req<span class="token punctuation">.</span>userData <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"user.json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>async与await语法参考：<a href="https://docs.tzki.cn/es6/async.html">async 函数</a></p></blockquote><p>可以在工具库<code>utils</code>中写读取的逻辑，通过<code>await</code>函数等待工具库异步操作完成。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token parameter">fileName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/data/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>fileName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="导出一个模块"><a class="markdownIt-Anchor" href="#导出一个模块"></a> 导出一个模块</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> utils <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"666"</span><span class="token punctuation">,</span>  <span class="token function-variable function">log</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"log"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 将对象导出即可</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> utils<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在其他js文件只需要通过<code>require</code>引入这个文件即可.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> utils <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./utils.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>utils<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://files.alexhchu.com/2020/09/12/33dc21a92a4f5.png" alt="image-20200912223657079" /></p>]]></content>
      
      
      <categories>
          
          <category> 参考手册 </category>
          
          <category> 代码参考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码参考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次Hexo持续集成部署尝试</title>
      <link href="/posts/b7924c1d/"/>
      <url>/posts/b7924c1d/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>鉴于已经实现了Coding与Github的双部署，而目前使用了GitHub的actions作为主要的生成Hexo页面的环境，但是由于私有仓库使用时间收到了限制。因此考虑将token方式转换为ssh方式。</p><ol><li><p>GitHub可以通过自己的私钥通过ssh地址部署，但Coding不可以</p><blockquote><p>发现用户级别公钥可以实现本地的部署, 但是无法实现 repo 之间的部署, 一直出现<code>Permission denied (publickey)</code></p><p>因此只能使用token</p></blockquote></li><li><p>通过Coding的token尝试，发现了也可以在GitHub使用token，并且比较方便。</p></li></ol><h2 id="coding配置文件"><a class="markdownIt-Anchor" href="#coding配置文件"></a> Coding配置文件</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">pipeline <span class="token punctuation">&#123;</span>  agent any  stages <span class="token punctuation">&#123;</span>    stage('获取最新git提交') <span class="token punctuation">&#123;</span>      steps <span class="token punctuation">&#123;</span>        checkout(<span class="token punctuation">[</span><span class="token key atrule">$class</span><span class="token punctuation">:</span> <span class="token string">'GitSCM'</span><span class="token punctuation">,</span> <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">name</span><span class="token punctuation">:</span> env.GIT_BUILD_REF<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">userRemoteConfigs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">url</span><span class="token punctuation">:</span> env.GIT_REPO_URL<span class="token punctuation">,</span> <span class="token key atrule">credentialsId</span><span class="token punctuation">:</span> env.CREDENTIALS_ID<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>)      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    stage('安装依赖') <span class="token punctuation">&#123;</span>      steps <span class="token punctuation">&#123;</span>        sh 'npm install hexo<span class="token punctuation">-</span>cli <span class="token punctuation">-</span>g'        sh 'npm install gulp <span class="token punctuation">-</span>g'        sh 'npm install'      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    stage('生成页面并压缩') <span class="token punctuation">&#123;</span>      steps <span class="token punctuation">&#123;</span>        sh 'hexo cl <span class="token important">&amp;&amp;</span> hexo g <span class="token important">&amp;&amp;</span> gulp'      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    stage('发布网页') <span class="token punctuation">&#123;</span>      steps <span class="token punctuation">&#123;</span>        sh '''          pwd          cd ./public          pwd          git init          git config <span class="token punctuation">-</span><span class="token punctuation">-</span>global user.name \'$<span class="token punctuation">&#123;</span>GIT_USER<span class="token punctuation">&#125;</span>\'          git config <span class="token punctuation">-</span><span class="token punctuation">-</span>global user.email \'$<span class="token punctuation">&#123;</span>GIT_MAIL<span class="token punctuation">&#125;</span>\'          git add .          git commit <span class="token punctuation">-</span>m "Update"          git push <span class="token punctuation">-</span><span class="token punctuation">-</span>force <span class="token punctuation">-</span><span class="token punctuation">-</span>all https<span class="token punctuation">:</span>//$<span class="token punctuation">&#123;</span>CODING_TOKEN<span class="token punctuation">&#125;</span>@$<span class="token punctuation">&#123;</span>CODING_REPO<span class="token punctuation">&#125;</span>          git push <span class="token punctuation">-</span><span class="token punctuation">-</span>force <span class="token punctuation">-</span><span class="token punctuation">-</span>all https<span class="token punctuation">:</span>//$<span class="token punctuation">&#123;</span>GH_TOKEN<span class="token punctuation">&#125;</span>@$<span class="token punctuation">&#123;</span>GH_REPO<span class="token punctuation">&#125;</span>        '''      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中需要配置的环境变量：</p><ul><li><p><code>GH_TOKEN</code></p><p>GitHub的token。获取方式：<a href="https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token">Creating a personal access token</a></p></li><li><p><code>CODING_TOKEN</code></p><p>Coding的token。coding的token比较特殊，包含用户和密码。因此获取后将此字段填入的为<code>账户:密码</code>。例如：</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png" alt="image-20200626161411316" /></p><p>以上图为例的账户和密码，则此字段完整填入的为<code>abc:aabbcc</code></p><p>令牌获取方式参照：<a href="https://www.antmoe.com/posts/51b0fa77/index.html">Hexo 利用 coding 自动部署</a></p></li><li><p><code>GIT_USER</code></p><p>git的name。用于设置全局git基本信息</p></li><li><p><code>GIT_MAIL</code></p><p>git的email。用于设置全局git基本信息</p></li><li><p><code>GH_REPO</code></p><p>GitHub仓库地址。格式为HTTPS后边的地址。例如<code>github.com/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p></li><li><p><code>CODING_REPO</code></p><p>Coding的仓库地址。格式为HTTPS后边的地址。例如<code>e.coding.net/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p></li></ul><h2 id="github-actions配置文件"><a class="markdownIt-Anchor" href="#github-actions配置文件"></a> Github Actions配置文件</h2><div class="note info icon"><p>1. 密钥方式</p></div><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># workflow name</span><span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo Blog CI<span class="token comment"># master branch on push, auto run</span><span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">strategy</span><span class="token punctuation">:</span>      <span class="token key atrule">matrix</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>10.x<span class="token punctuation">]</span>    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token comment"># check it to your workflow can access it</span>      <span class="token comment"># from: https://github.com/actions/checkout</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 1. 检查master分支        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master      <span class="token comment"># from: https://github.com/actions/setup-node</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 2. 设置Node.js        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@master        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 3. 安装 Hexo CI        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          export TZ='Asia/Shanghai'          npm install hexo-cli -g          npm install gulp -g</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 4. 缓存        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v1        <span class="token key atrule">id</span><span class="token punctuation">:</span> cache<span class="token punctuation">-</span>dependencies        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> node_modules          <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>runner.OS<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>hashFiles('<span class="token important">**/package-lock.json')</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 5. 安装插件        <span class="token key atrule">if</span><span class="token punctuation">:</span> steps.cache<span class="token punctuation">-</span>dependencies.outputs.cache<span class="token punctuation">-</span>hit <span class="token tag">!=</span> 'true'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          npm install</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 6. 设置私钥信息        <span class="token key atrule">env</span><span class="token punctuation">:</span>          <span class="token comment"># HEXO_DEPLOY_PRIVATE_KEY: $&#123;&#123; secrets.HEXO_DEPLOY_PRIVATE_KEY &#125;&#125;</span>          <span class="token key atrule">CODEING_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.CODEING_KEY <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">GH_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.GH_KEY <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          mkdir -p ~/.ssh/          echo "$GH_KEY" > ~/.ssh/id_rsa          echo "$CODEING_KEY" > ~/.ssh/coding_rsa          chmod 600 ~/.ssh/id_rsa          chmod 600 ~/.ssh/coding_rsa          ssh-keyscan github.com >> ~/.ssh/known_hosts          ssh-keyscan e.coding.net >> ~/.ssh/known_hosts  # 注意，Coding的地址已经改成e.coding.net，很多教程中使用的地址都是旧的，导致无法完成部署</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 7. 设置git信息        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          git config --global user.name '$&#123;&#123; secrets.GIT_USER &#125;&#125;'           git config --global user.email '$&#123;&#123; secrets.GIT_MAIL &#125;&#125;'</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 8. hexo命令三连        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          hexo clean          hexo generate           gulp          hexo deploy</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>GIT_USER</code></p><p>git的name。用于设置全局git基本信息</p></li><li><p><code>GIT_MAIL</code></p><p>git的email。用于设置全局git基本信息</p></li><li><p><code>CODEING_KEY</code></p><p>向coding仓库推送的<strong>私钥</strong></p></li><li><p><code>GH_KEY</code></p><p>向github仓库推送的<strong>私钥</strong></p></li></ul><div class="note info icon"><p>2. Token方式</p></div><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># workflow name</span><span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo Blog CI<span class="token comment"># master branch on push, auto run</span><span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">strategy</span><span class="token punctuation">:</span>      <span class="token key atrule">matrix</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>10.x<span class="token punctuation">]</span>    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token comment"># check it to your workflow can access it</span>      <span class="token comment"># from: https://github.com/actions/checkout</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 1. 检查master分支        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master      <span class="token comment"># from: https://github.com/actions/setup-node</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 2. 设置Node.js        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@master        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 3. 安装 Hexo CI        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          export TZ='Asia/Shanghai'          npm install hexo-cli -g          npm install gulp -g</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 4. 缓存        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v1        <span class="token key atrule">id</span><span class="token punctuation">:</span> cache<span class="token punctuation">-</span>dependencies        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> node_modules          <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>runner.OS<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>hashFiles('<span class="token important">**/package-lock.json')</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 5. 安装插件        <span class="token key atrule">if</span><span class="token punctuation">:</span> steps.cache<span class="token punctuation">-</span>dependencies.outputs.cache<span class="token punctuation">-</span>hit <span class="token tag">!=</span> 'true'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          npm install</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 6. 生成页面并压缩        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          hexo cl &amp;&amp; hexo g &amp;&amp; gulp</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 7. 部署页面        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          cd ./public          ls          git init          git config --global user.name '$&#123;&#123; secrets.GIT_USER &#125;&#125;'           git config --global user.email '$&#123;&#123; secrets.GIT_MAIL &#125;&#125;'          git add .          git commit -m "Update"          git push --force --all https://$&#123;&#123; secrets.GH_TOKEN &#125;&#125;@$&#123;&#123; secrets.GH_REPO &#125;&#125;          git push --force --all https://$&#123;&#123; secrets.CODING_TOKEN &#125;&#125;@$&#123;&#123; secrets.CODING_REPO &#125;&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中需要配置的环境变量：</p><ul><li><p><code>GH_TOKEN</code></p><p>GitHub的token。获取方式：<a href="https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token">Creating a personal access token</a></p></li><li><p><code>CODING_TOKEN</code></p><p>Coding的token。coding的token比较特殊，包含用户和密码。因此获取后将此字段填入的为<code>账户:密码</code>。例如：</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png" alt="image-20200626161411316" /></p><p>以上图为例的账户和密码，则此字段完整填入的为<code>abc:aabbcc</code></p><p>令牌获取方式参照：<a href="https://www.antmoe.com/posts/51b0fa77/index.html">Hexo 利用 coding 自动部署</a></p></li><li><p><code>GIT_USER</code></p><p>git的name。用于设置全局git基本信息</p></li><li><p><code>GIT_MAIL</code></p><p>git的email。用于设置全局git基本信息</p></li><li><p><code>GH_REPO</code></p><p>GitHub仓库地址。格式为HTTPS后边的地址。例如<code>github.com/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p></li><li><p><code>CODING_REPO</code></p><p>Coding的仓库地址。格式为HTTPS后边的地址。例如<code>e.coding.net/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>规范JavaScript命名</title>
      <link href="/posts/8ae081ab/"/>
      <url>/posts/8ae081ab/</url>
      
        <content type="html"><![CDATA[<h2 id="驼峰命名法"><a class="markdownIt-Anchor" href="#驼峰命名法"></a> 驼峰命名法</h2><p>驼峰命名法按照第一个字母是否大写分为：</p><ol><li><p><strong>Pascal Case 大驼峰式命名法</strong>：首字母大写</p><p><code>StudentInfo</code>、<code>UserInfo</code>、<code>ProductInfo</code></p></li><li><p><strong>Camel Case 小驼峰式命名法</strong>：首字母小写</p><p><code>studentInfo</code>、<code>userInfo</code>、<code>productInfo</code></p></li></ol><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2><ul><li><p>命名方法：小驼峰式命名法</p></li><li><p>命名规范：前缀应当是名词。(函数的名字前缀为动词，以此区分变量和函数)</p></li><li><p>命名建议：尽量在变量名字中体现所属类型，如:length、count等表示数字类型；而包含name、title表示为字符串类型。</p></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 好的命名方式</span><span class="token keyword">var</span> maxCount <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">var</span> tableTitle <span class="token operator">=</span> <span class="token string">'LoginTable'</span><span class="token punctuation">;</span> <span class="token comment">// 不好的命名方式</span><span class="token keyword">var</span> setCount <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">var</span> getTitle <span class="token operator">=</span> <span class="token string">'LoginTable'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><ul><li><p>命名方法：小驼峰式命名法</p></li><li><p>命名规范：前缀应当为动词。</p></li><li><p>命名建议：可使用常见动词约定</p><table><thead><tr><th style="text-align:center">动词</th><th style="text-align:center">含义</th><th style="text-align:center">返回值</th></tr></thead><tbody><tr><td style="text-align:center"><code>can</code></td><td style="text-align:center">判断是否可执行某个动作(权限)</td><td style="text-align:center">函数返回一个布尔值。true：可执行；false：不可执行</td></tr><tr><td style="text-align:center"><code>has</code></td><td style="text-align:center">判断是否含有某个值</td><td style="text-align:center">函数返回一个布尔值。true：含有此值；false：不含有此值</td></tr><tr><td style="text-align:center"><code>is</code></td><td style="text-align:center">判断是否为某个值</td><td style="text-align:center">函数返回一个布尔值。true：为某个值；false：不为某个值</td></tr><tr><td style="text-align:center"><code>get</code></td><td style="text-align:center">获取某个值</td><td style="text-align:center">函数返回一个非布尔值</td></tr><tr><td style="text-align:center"><code>set</code></td><td style="text-align:center">设置某个值</td><td style="text-align:center">无返回值、返回是否设置成功或者返回链式对象</td></tr><tr><td style="text-align:center"><code>load</code></td><td style="text-align:center">加载某些数据</td><td style="text-align:center">无返回值或者返回是否加载完成的结果</td></tr></tbody></table></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 是否可阅读</span><span class="token keyword">function</span> <span class="token function">canRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 获取名称</span><span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h2><ul><li><p>命名方法：名称全部大写。</p></li><li><p>命名规范：使用大写字母和下划线来组合命名，下划线用以分割单词。</p></li><li><p>命名建议：无</p></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token constant">MAX_COUNT</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token constant">URL</span> <span class="token operator">=</span> <span class="token string">'http://www.baidu.com'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h2><ul><li><p>命名方法：大驼峰式命名法，首字母大写。</p></li><li><p>命名规范：前缀为名称。</p></li><li><p>命名建议：无。</p></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">var</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="类的成员"><a class="markdownIt-Anchor" href="#类的成员"></a> 类的成员</h2><p>① 公共属性和方法：跟变量和函数的命名一样。</p><p>② 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> _name <span class="token operator">=</span> name<span class="token punctuation">;</span> <span class="token comment">// 私有成员</span>     <span class="token comment">// 公共方法</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> _name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 公共方式</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">setName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        _name <span class="token operator">=</span> value<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>st<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">'jerry'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// => jerry：输出_name私有变量的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2><ol><li><a href="https://www.cnblogs.com/polk6/p/4660195.html">JavaScript开发规范</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编码规范 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手册查询 </tag>
            
            <tag> 命名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>规范JavaScript注释</title>
      <link href="/posts/424fc09d/"/>
      <url>/posts/424fc09d/</url>
      
        <content type="html"><![CDATA[<h2 id="行内注释"><a class="markdownIt-Anchor" href="#行内注释"></a> 行内注释</h2><ol><li><p>显示一个解释的评论</p><p><code>// 用来显示一个解释的评论</code></p></li><li><p>显示表达式的结果</p><p><code>// -&gt; 用来显示表达式的结果</code></p></li><li><p>显示 console 的输出结果</p><p><code>// &gt;用来显示 console 的输出结果</code></p></li></ol><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 测试函数</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hello World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// >Hello World!</span>    <span class="token keyword">return</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// ->5</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="snote idea yellow"><p>//(双斜线)与代码之间保留一个空格，并且//(双斜线)与注释文字之间保留一个空格。</p></div><h2 id="单行注释"><a class="markdownIt-Anchor" href="#单行注释"></a> 单行注释</h2><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 调用了一个函数；1)单独在一行</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="snote idea yellow"><p>单独一行：//(双斜线)与注释文字之间保留一个空格。</p></div><h2 id="普通多行注释"><a class="markdownIt-Anchor" href="#普通多行注释"></a> 普通多行注释</h2><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** 代码执行到这里后会调用setTitle()函数* setTitle()：设置title的值*/</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="snote idea yellow"><p>若开始<code>/*</code>和结束<code>*/</code>都在一行，推荐采用单行注释。若至少三行注释时，第一行为<code>/*</code>，最后行为<code>*/</code>，其他行以<code>*</code>开始，并且注释文字与<code>*</code>保留一个空格。</p></div><h2 id="函数多行注释"><a class="markdownIt-Anchor" href="#函数多行注释"></a> 函数多行注释</h2><p>函数(方法)注释也是多行注释的一种，但是包含了特殊的注释要求，参照JSDoc。</p><p>以下字段并不是全部，全部请参考<a href="https://www.html.cn/doc/jsdoc/index.html">JSDoc中文文档</a>或<a href="https://jsdoc.zcopy.site/">JSDoc中文文档</a></p><div class="snote info"><p>常用注释关键字</p></div><table><thead><tr><th style="text-align:center">注释名</th><th style="text-align:center">语法</th><th style="text-align:center">含义</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">@param</td><td style="text-align:center"><code>@param 参数名 &#123;参数类型&#125; 描述信息</code></td><td style="text-align:center">描述参数的信息</td><td style="text-align:center"><code>@param name &#123;String&#125; 传入名称</code></td></tr><tr><td style="text-align:center">@return</td><td style="text-align:center"><code>@return &#123;返回类型&#125; 描述信息</code></td><td style="text-align:center">描述返回值的信息</td><td style="text-align:center"><code>@return &#123;Boolean&#125; true:可执行;false:不可执行</code></td></tr><tr><td style="text-align:center">@author</td><td style="text-align:center"><code>@author 作者信息 [附属信息：如邮箱、日期]</code></td><td style="text-align:center">描述此函数作者的信息</td><td style="text-align:center"><code>@author 张三 2015/07/21</code></td></tr><tr><td style="text-align:center">@version</td><td style="text-align:center"><code>@version XX.XX.XX</code></td><td style="text-align:center">描述此函数的版本号</td><td style="text-align:center"><code>@version 1.0.3</code></td></tr><tr><td style="text-align:center">@example</td><td style="text-align:center"><code>@example 示例代码</code></td><td style="text-align:center">演示函数的使用</td><td style="text-align:center"><code>@example setTitle(‘测试’)</code></td></tr></tbody></table><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*** 合并Grid的行* @param grid &#123;Ext.Grid.Panel&#125; 需要合并的Grid* @param cols &#123;Array&#125; 需要合并列的Index(序号)数组；从0开始计数，序号也包含。* @param isAllSome &#123;Boolean&#125; ：是否2个tr的cols必须完成一样才能进行合并。true：完成一样；false(默认)：不完全一样* @return void* @author polk6 2015/07/21 * @example* _________________                             _________________* |  年龄 |  姓名 |                             |  年龄 |  姓名 |* -----------------      mergeCells(grid,[0])   -----------------* |  18   |  张三 |              =>             |       |  张三 |* -----------------                             -  18   ---------* |  18   |  王五 |                             |       |  王五 |* -----------------                             -----------------*/</span><span class="token keyword">function</span> <span class="token function">mergeCells</span><span class="token punctuation">(</span><span class="token parameter">grid<span class="token operator">:</span> Ext<span class="token punctuation">.</span>Grid<span class="token punctuation">.</span>Panel<span class="token punctuation">,</span> cols<span class="token operator">:</span> Number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> isAllSome<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Do Something</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文档注释"><a class="markdownIt-Anchor" href="#文档注释"></a> 文档注释</h2><p>文档注释将会以预定格式出现在API文档中。它以“/\**”开头，以“*/”结束，其间的每一行均以“*”开头（均与开始符的第一个“*”对齐），且注释内容与“*”间留一个空格。</p><p>文档注释必须包含一个或多个注释标签。</p><ol><li><p>@module。声明模块</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 模块说明 * @module 模块名 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * Core模块提供最基础、最核心的接口 * @module Core */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>@class。声明类</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 类说明 * @class 类名 * @constructor */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>@class必须搭配@constructor或@static使用，分别标记非静态类与静态类。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 节点集合类 * @class NodeList * @constructor * @param &#123;ArrayLike&lt;Element>&#125; nodes 初始化节点 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>@method。声明函数或类方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 方法说明 * @method 方法名 * @for 所属类名 * @param &#123;参数类型&#125; 参数名 参数说明 * @return &#123;返回值类型&#125; 返回值说明 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没有指定@for时，表示此函数为全局或模块顶层函数。当函数为静态函数时，必须添加@static；当函数有参数时，必须使用@param；当函数有返回值时，必须使用@return。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 返回当前集合中指定位置的元素 * @method * @for NodeList * @param &#123;Number&#125; [i=0] 位置下标。如果为负数，则从集合的最后一个元素开始倒数 * @return &#123;Element&#125; 指定元素 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>@param。声明函数参数，必须与@method搭配使用。</p></li><li><p>@property。声明类属性</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 属性说明 * @property &#123;属性类型&#125; 属性名 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h2><div class="snote success"><p>应该做的</p></div><ol><li><p>总是在单行注释符后留一个空格。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// this is comment</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>总是在多行注释的结束符前留一个空格（使星号对齐）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*                              */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>如果某段代码有功能未实现，或者有待完善，必须添加“TODO”标记，“TODO”前后应留一个空格。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// TODO 未处理IE6-8的兼容性</span><span class="token keyword">function</span> <span class="token function">setOpacity</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    node<span class="token punctuation">.</span>style<span class="token punctuation">.</span>opacity <span class="token operator">=</span> val<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><div class="snote error"><p>不该做的</p></div><ol><li><p>不要把注释写在多行注释的开始符、结束符所在行。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/* start                             end */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*here is line 1here is line 2 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>不要编写无意义的注释。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 初始化value变量为0</span><span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="注释示例"><a class="markdownIt-Anchor" href="#注释示例"></a> 注释示例</h2><p><font color=red>参数和返回值类型Type：string、boolean、number、object、array、function</font></p><h3 id="基本方法块注释"><a class="markdownIt-Anchor" href="#基本方法块注释"></a> 基本方法块注释</h3><p>如果描述不能描述清楚，添加例子来描述。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data 目标对象 * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本方法块注释-注释过长时"><a class="markdownIt-Anchor" href="#基本方法块注释-注释过长时"></a> 基本方法块注释-注释过长时</h3><p>如果需要折行则在文本中使用<code>&lt;br/&gt;</code>标签</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data 目标对象&lt;br/> * 例： *  &#123; *      target:手机号 *  &#125; * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本方法块注释-参数可选"><a class="markdownIt-Anchor" href="#基本方法块注释-参数可选"></a> 基本方法块注释-参数可选</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; [data] 目标对象 * 例： *  &#123; *      target:手机号 *  &#125; * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本方法块注释-带默认值"><a class="markdownIt-Anchor" href="#基本方法块注释-带默认值"></a> 基本方法块注释-带默认值</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data=&#123;&#125; 目标对象 * 例： *  &#123; *      target:手机号 *  &#125; * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方法块注释特殊参数"><a class="markdownIt-Anchor" href="#方法块注释特殊参数"></a> 方法块注释特殊参数</h3><p>如果描述不能描述清楚，添加例子来描述。<br />如果方法中有异常处理，标记异常处理注释</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data 目标对象 * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 * @throws &#123;string&#125; 抛出'Error'异常 * @example * add(1, 2);    // 返回3 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果有返回值增加@returns 如果没有省略此属性</p><h3 id="文件注释"><a class="markdownIt-Anchor" href="#文件注释"></a> 文件注释</h3><p>在文件头部增加文件注释</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @file LBS控制器 * @author limingle * @copyright Synway SFE * @createDate 2017-10-16 09:40:11 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="变量注释"><a class="markdownIt-Anchor" href="#变量注释"></a> 变量注释</h3><p>将关键的变量进行特殊注释，生成到文档中</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @var &#123;object&#125; * @desc 变量定义 * @property &#123;string&#125; a 属性a * @property &#123;string&#125; b 属性b */</span><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    a<span class="token operator">:</span> <span class="token string">'a'</span><span class="token punctuation">,</span>    b<span class="token operator">:</span> <span class="token string">'b'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常量注释"><a class="markdownIt-Anchor" href="#常量注释"></a> 常量注释</h3><p>将关键常量进行特殊注释，生成到文档中，如果有默认值增加<code>@default</code>属性</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @constant &#123;string&#125; * @default #000 * @desc 常量定义 */</span><span class="token keyword">const</span> <span class="token constant">COLOR_WHITE</span> <span class="token operator">=</span> <span class="token string">'#fff'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="枚举注释"><a class="markdownIt-Anchor" href="#枚举注释"></a> 枚举注释</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @enum &#123;number&#125; * @desc cgi常见的返回码 */</span><span class="token keyword">var</span> <span class="token constant">RETCODE</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @desc 未登录     */</span>    <span class="token constant">NOT_LOGIN</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>    <span class="token comment">/**     * @desc 参数错误     */</span>    <span class="token constant">PARAM_ERROR</span><span class="token operator">:</span> <span class="token number">100001</span><span class="token punctuation">,</span>    <span class="token comment">/**     * @type &#123;string&#125;     * @desc 未知错误     */</span>    <span class="token constant">UNKOWN_ERROR</span><span class="token operator">:</span> <span class="token string">'unkown'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="类的注释"><a class="markdownIt-Anchor" href="#类的注释"></a> 类的注释</h3><p>默认情况先一个function就是一个类，ES6中使用Class来表示一个类<br />我们项目中使用class.js来实现类，在我们项目中使用类注释时需要在<code>@class</code>后边增加类名，不然jsdoc无法自动识别类名</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @class * @classdesc 这是对myClass类的描述 * @desc 这是对myClass类的构造函数的描述 */</span><span class="token keyword">function</span> <span class="token function">myClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @class LBSControllerCom * @classdesc LBS控制类 * @desc 初始化ws */</span><span class="token keyword">var</span> LBSControllerCom <span class="token operator">=</span> Com<span class="token punctuation">.</span><span class="token function">extends</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="类的属性"><a class="markdownIt-Anchor" href="#类的属性"></a> 类的属性</h3><p>类的属性和变量都会生成到jsdoc文档的Member模块中，在类中使用属性标识</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> LBSControllerCom <span class="token operator">=</span> Com<span class="token punctuation">.</span><span class="token function">extends</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @member &#123;string&#125;     * @desc 这样标识类的属性     */</span>    foo1 <span class="token operator">:</span> <span class="token string">'a'</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="webstorm的live-templates"><a class="markdownIt-Anchor" href="#webstorm的live-templates"></a> webstorm的live Templates</h2><ol><li><p>desc</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @description:  * @author: xiaokang * @time: $date$ */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/42bd121ee3c44d531177dfc073ada52a.png" alt="image-20200625174405983" /></p></li><li><p>fun</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @func * @desc 函数的描述 * @param &#123;参数1的类型&#125; 参数名 参数描述 * @param &#123;参数1的类型&#125; 参数名=1 默认值参数 * @param &#123;参数1的类型&#125; [参数名] 可选参数 * @returns &#123;Type&#125; 函数返回值的描述 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @func * @desc 这个函数用于测试 * @param &#123;string&#125; a 第一个参数 * @param &#123;number&#125; b=1 第二个参数 * @param &#123;number&#125; [c=2] 可选参数 * @returns &#123;boolean&#125; 返回值 */</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/251606e4bd49bfb72cb0fdeffa40046d.png" alt="image-20200625175556046" /></p></li><li><p>method</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @desc 根据目标对象获取运营商 * @param &#123;参数1的类型&#125; 参数名 参数描述 * @param &#123;参数1的类型&#125; 参数名=1 默认值参数 * @param &#123;参数1的类型&#125; [参数名] 可选参数 * @returns &#123;Type&#125; 函数返回值的描述 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @class * @classdesc 这是对myClass类的描述 */</span><span class="token keyword">function</span> <span class="token function">myClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * @method * @desc myClass方法的描述 * @param &#123;string&#125; a - 参数a */</span>myClass<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'xiaokang'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/c5f05bac75d5748678784836d9b85f4d.png" alt="image-20200625175943579" /></p></li><li><p>vari</p><pre class="line-numbers language-javas" data-language="javas"><code class="language-javas">&#x2F;** * @var &#123;object&#125; * @desc 变量定义 * @property &#123;string&#125; a 属性a * @property &#123;string&#125; b 属性b *&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @var foo * @desc 变量定义 * @property &#123;string&#125; a 属性a * @property &#123;string&#125; b 属性b */</span><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    a<span class="token operator">:</span><span class="token string">'a'</span><span class="token punctuation">,</span>    b<span class="token operator">:</span><span class="token string">'b'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/7a545f7cc38ade7038245d2736aeaa9f.png" alt="image-20200625175042098" /></p></li></ol><h2 id="文章参考"><a class="markdownIt-Anchor" href="#文章参考"></a> 文章参考</h2><ol><li><a href="https://juejin.im/entry/599d433cf265da24797b5c66">JavaScript 开发规范（一）： 命名与注释规范详解</a></li><li><a href="https://github.com/sivan/javascript-style-guide/blob/master/es5/README.md">《Airbnb JavaScript Style Guide 中文版》</a></li><li><a href="https://www.cnblogs.com/chris-oil/p/4067415.html">js/javascript代码注释规范与示例</a></li><li><a href="https://blog.csdn.net/lianlin21212411/article/details/78530913">Javascript注释规范</a></li><li><a href="https://github.com/Yuri4ever/jsdoc">jsdoc</a></li><li><a href="https://xiaokang.me/jsdoc/">小康的jsdoc</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编码规范 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手册查询 </tag>
            
            <tag> 注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git配置多个SSH-Key</title>
      <link href="/posts/9333a297/"/>
      <url>/posts/9333a297/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>由于Coding日常爆炸，不得不考虑所有站点都进行多部署操作了。但是在其他平台最好的方式就是通过GitHub作为媒介，进行无缝同步。于是为了个人仓库看起。来不是那么混乱，于是决定在注册一个GitHub账号，专门用来存放静态页面。作为多部署的媒介（GitHub Pages太慢了，只能放弃）。</p><p>那么问题来了，我的ssh公钥已经在我的主账号添加了，小号不能在添加这个公钥。于是只能新创建一个密钥对。但是无论如何，小号都无法通过验证。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C "examp@examp.com” -f ~/.ssh/github-gos967<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2><p>通过向百度学习，找到了一种较为妥协的方案。</p><p>修改<code>~/.ssh/config</code>文件，配置git信息</p><pre class="line-numbers language-none"><code class="language-none"># 账号1登陆认证Host github.com    HostName github.com    IdentityFile ~\\.ssh\\id_rsa# 账号2的登陆认证Host tzki.github.com    HostName github.com    IdentityFile ~\\.ssh\\gos967_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ul><li>Host表示别名，随便设置即可。</li><li>HostName表示服务器的地址。</li><li>IdentityFile即表示自定义文件</li></ul></blockquote><p>这里第一个设置表示链接服务器<code>github.com</code>（别名）这个服务器时，使用id_rsa密钥。</p><p>第二个设置表示链接服务器<code>tzki.github.com</code>时使用gos967_rsa密钥。</p><p>接下来只需要将小号的地址修改为<code>git@tzki.github.com:xxx/xxx.git</code>即可。（原地址<code>git@github.com:xxx/xxx.git</code>）</p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> SSH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH-key </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Terminal使用及美化</title>
      <link href="/posts/614360dd/"/>
      <url>/posts/614360dd/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>在这之前，我一直使用的都是cmder，但是这东西说真的，有点难用。不过好在微软推出了Windows Terminal，经过我的实测，感觉还是不错的。毕竟颜值才是第一生产力。</p><p><img src="https://file.acs.pw/picgo/2021/08/22/20210822175133.png" alt="image-20210822175133013" /></p><h2 id="开始操作"><a class="markdownIt-Anchor" href="#开始操作"></a> 开始操作</h2><ol><li><p>下载Windows Terminal</p><p>下载很简单，在微软商店下载即可。</p><p><img src="https://file.acs.pw/picgo/2021/08/22/20210822153754.png" alt="image-20210822153753915" /></p></li><li><p>安装一个字体，比较推荐的是<strong>Fira Code</strong>。</p><p><a href="https://github.com/tonsky/FiraCode/releases">单击此处从 GitHub 下载。</a></p></li><li><p>安装新款 Powershell Core</p><p>首先声明，我们这儿用的 Powershell 与 Windows 自带的 Powershell 是完全不同的两个东西，除了功能相似和名字相同，两者内在已经天差地别。</p><blockquote><p>Powershell Core 是什么呢？这是伟大的 <strong>.Net Core 跨平台战略</strong>的一个重要组成部分，微软设想，要让强大的 .Net 在所有平台上通用，让这么强大的 Powershell 在所有平台上都能用，古老的 bash 可以退休了！</p></blockquote><p><a href="https://github.com/PowerShell/PowerShell/releases">下载地址</a>(可下载最新版本，不一定要下载图中所示)</p></li><li><p>安装Powershell插件</p><ul><li><p>PSReadLine</p><p>PSReadLine 是一个由微软发布的用于 PowerShell 的行读取实现，提供了以下功能：</p><ul><li>语法着色</li><li>简单语法错误通知</li><li>良好的多行体验</li><li>可自定义的键绑定</li><li>Cmd和Emacs模式</li><li>许多配置选项</li><li>Bash 样式的补全</li><li>Bash/zsh 样式的交互式历史记录搜索</li><li>Emacs yank/kill ring</li><li>基于 PowerShell Token 的单词移动和删除</li><li>撤销/重做</li><li>自动保存历史记录，包括在实时会话中共享历史记录</li><li>菜单补全、Intellisense</li></ul><p>GitHub地址：<a href="https://github.com/PowerShell/PSReadLine">https://github.com/PowerShell/PSReadLine</a></p></li><li><p>oh-my-posh&amp;posh-git</p><p>类似于 oh-my-zsh，oh-my-posh 为 PowerShell 提供了很多自定义主题和配色，而 posh-git 为 PowerShell 提供了 git 状态显示和命令补全等。</p><p>GitHub地址：<a href="https://github.com/JanDeDobbeleer/oh-my-posh">https://github.com/JanDeDobbeleer/oh-my-posh</a></p></li></ul><p>看完上边的三个插件介绍，我们来安装这三个插件。</p><p>用管理员模式打开刚装好的<strong>新版</strong> powershell，逐行输入命令。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1. 安装 PSReadline 包，该插件可以让命令行很好用，类似 zsh</span>Install-Module -Name PSReadLine -AllowPrerelease -Force<span class="token comment"># 2. 安装 posh-git 包，让你的 git 更好用</span>Install-Module posh-git -Scope CurrentUser<span class="token comment"># 3. 安装 oh-my-posh 包，让你的命令行更酷炫、优雅</span>Install-Module oh-my-posh -Scope CurrentUser<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picgo/2021/08/22/20210822154317.png" alt="image-20210822154316987" /></p><p><strong>一定要用刚刚安装的新版的powershell（建议使用管理员模式运行），安装过程可能过于慢，请耐心等待。</strong></p><p>后面两个包的<strong>来源可能不受系统信任</strong>，不用管它，如果让你选择是否信任，直接输入 <code>Y</code> 即可。</p></li><li><p>编辑<code>$Profile</code>文件。</p><p>这个文件类似于 <code>~/.zshrc</code>，会在 PowerShell 启动的时候自动执行，因此我们在这个文件中加载我们所需的模块。</p><ul><li><p>Windows</p><p><code>notepad.exe $Profile</code></p></li><li><p>Linux</p><p><code>nano $Profile</code></p></li></ul><p>然后在这个文件中添加如下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#------------------------------- Import Modules BEGIN -------------------------------</span><span class="token comment"># 引入 posh-git</span>Import-Module posh-git<span class="token comment"># 引入 oh-my-posh</span>Import-Module oh-my-posh<span class="token comment"># 设置 PowerShell 主题</span>Set-PoshPrompt paradox<span class="token comment">#------------------------------- Import Modules END   -------------------------------</span><span class="token comment">#-------------------------------  Set Hot-keys BEGIN  -------------------------------</span><span class="token comment"># 设置 Tab 键补全</span><span class="token comment"># Set-PSReadlineKeyHandler -Key Tab -Function Complete</span><span class="token comment"># 设置 Ctrl+d 为菜单补全和 Intellisense</span>Set-PSReadLineKeyHandler -Key <span class="token string">"Tab"</span> -Function MenuComplete<span class="token comment"># 设置 Ctrl+d 为退出 PowerShell</span>Set-PSReadlineKeyHandler -Key <span class="token string">"Ctrl+d"</span> -Function ViExit<span class="token comment"># 设置 Ctrl+z 为撤销</span>Set-PSReadLineKeyHandler -Key <span class="token string">"Ctrl+z"</span> -Function Undo<span class="token comment"># 设置向上键为后向搜索历史记录</span>Set-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward<span class="token comment"># 设置向下键为前向搜索历史纪录</span>Set-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward<span class="token comment">#-------------------------------  Set Hot-keys END    -------------------------------</span><span class="token comment">#-------------------------------   Set Alias Begin    -------------------------------</span><span class="token comment"># 1. 编译函数 make</span><span class="token keyword">function</span> <span class="token function-name function">MakeThings</span> <span class="token punctuation">&#123;</span>    nmake.exe <span class="token variable">$args</span> -nologo<span class="token punctuation">&#125;</span>Set-Alias -Name <span class="token function">make</span> -Value MakeThings<span class="token comment"># 2. 更新系统 os-update</span>Set-Alias -Name os-update -Value Update-Packages<span class="token comment"># 3. 查看目录 ls &amp; ll</span><span class="token keyword">function</span> <span class="token function-name function">ListDirectory</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span>Get-ChildItem<span class="token punctuation">)</span>.Name    Write-Host<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>Set-Alias -Name <span class="token function">ls</span> -Value ListDirectorySet-Alias -Name ll -Value Get-ChildItem<span class="token comment">#-------------------------------    Set Alias END     -------------------------------</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>oh-my-posh提供了 10 款 漂亮 的主题供我们选择。 <code>Agnoster</code>,<code>Avit</code>,<code>Darkblood</code>,<code>Fish</code>,<code>Honukai</code>,<code>Paradox</code>,<code>PowerLine</code>,<code>robbyrussell</code>,<code>Sorin</code>,<code>tehrob</code></p></blockquote></li><li><p>接下来打开<code>Windows Terminal</code>。</p><p>Windows Terminal默认为旧版本的powershell，我们需要把新版本作为默认。</p><p>修改的内容有三个，如果你不想自己改可以直接将我的粘贴到配置文件（<strong>需要注意的是:如果按照默认路径安装（正式版），那么可以直接复制下边。预览版或者更换了安装位置，那么请手动更改位置。其他信息试自己能力进行修改</strong>）。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"$schema"</span><span class="token operator">:</span> <span class="token string">"https://aka.ms/terminal-profiles-schema"</span><span class="token punctuation">,</span>    <span class="token comment">// Add custom actions and keybindings to this array.</span>    <span class="token comment">// To unbind a key combination from your defaults.json, set the command to "unbound".</span>    <span class="token comment">// To learn more about actions and keybindings, visit https://aka.ms/terminal-keybindings</span>    <span class="token property">"actions"</span><span class="token operator">:</span>     <span class="token punctuation">[</span>        <span class="token comment">// Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.</span>        <span class="token comment">// These two lines additionally bind them to Ctrl+C and Ctrl+V.</span>        <span class="token comment">// To learn more about selection, visit https://aka.ms/terminal-selection</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"command"</span><span class="token operator">:</span>             <span class="token punctuation">&#123;</span>                <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"copy"</span><span class="token punctuation">,</span>                <span class="token property">"singleLine"</span><span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"keys"</span><span class="token operator">:</span> <span class="token string">"ctrl+c"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"paste"</span><span class="token punctuation">,</span>            <span class="token property">"keys"</span><span class="token operator">:</span> <span class="token string">"ctrl+v"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// Press Ctrl+Shift+F to open the search box</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"find"</span><span class="token punctuation">,</span>            <span class="token property">"keys"</span><span class="token operator">:</span> <span class="token string">"ctrl+shift+f"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// Press Alt+Shift+D to open a new pane.</span>        <span class="token comment">// - "split": "auto" makes this pane open in the direction that provides the most surface area.</span>        <span class="token comment">// - "splitMode": "duplicate" makes the new pane use the focused pane's profile.</span>        <span class="token comment">// To learn more about panes, visit https://aka.ms/terminal-panes</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"command"</span><span class="token operator">:</span>             <span class="token punctuation">&#123;</span>                <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"splitPane"</span><span class="token punctuation">,</span>                <span class="token property">"split"</span><span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>                <span class="token property">"splitMode"</span><span class="token operator">:</span> <span class="token string">"duplicate"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"keys"</span><span class="token operator">:</span> <span class="token string">"alt+shift+d"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"copyFormatting"</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>    <span class="token property">"copyOnSelect"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"defaultProfile"</span><span class="token operator">:</span> <span class="token string">"&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;"</span><span class="token punctuation">,</span>    <span class="token property">"profiles"</span><span class="token operator">:</span>     <span class="token punctuation">&#123;</span>        <span class="token property">"defaults"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"list"</span><span class="token operator">:</span>         <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token property">"acrylicOpacity"</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>                <span class="token property">"backgroundImage"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>                <span class="token property">"colorScheme"</span><span class="token operator">:</span> <span class="token string">"idleToes"</span><span class="token punctuation">,</span>                <span class="token property">"commandline"</span><span class="token operator">:</span> <span class="token string">"C:/Program Files/PowerShell/7/pwsh.exe -nologo"</span><span class="token punctuation">,</span>                <span class="token property">"fontFace"</span><span class="token operator">:</span> <span class="token string">"Fira Code"</span><span class="token punctuation">,</span>                <span class="token property">"fontSize"</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>                <span class="token property">"guid"</span><span class="token operator">:</span> <span class="token string">"&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;"</span><span class="token punctuation">,</span>                <span class="token property">"hidden"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token property">"historySize"</span><span class="token operator">:</span> <span class="token number">9001</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"pwsh"</span><span class="token punctuation">,</span>                <span class="token property">"padding"</span><span class="token operator">:</span> <span class="token string">"5, 5, 20, 25"</span><span class="token punctuation">,</span>                <span class="token property">"snapOnInput"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"Windows.Terminal.PowershellCore"</span><span class="token punctuation">,</span>                <span class="token property">"startingDirectory"</span><span class="token operator">:</span> <span class="token string">"."</span><span class="token punctuation">,</span>                <span class="token property">"useAcrylic"</span><span class="token operator">:</span> <span class="token boolean">true</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token property">"commandline"</span><span class="token operator">:</span> <span class="token string">"powershell.exe"</span><span class="token punctuation">,</span>                <span class="token property">"guid"</span><span class="token operator">:</span> <span class="token string">"&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;"</span><span class="token punctuation">,</span>                <span class="token property">"hidden"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Windows PowerShell"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token property">"commandline"</span><span class="token operator">:</span> <span class="token string">"cmd.exe"</span><span class="token punctuation">,</span>                <span class="token property">"guid"</span><span class="token operator">:</span> <span class="token string">"&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;"</span><span class="token punctuation">,</span>                <span class="token property">"hidden"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"\u547d\u4ee4\u63d0\u793a\u7b26"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token property">"guid"</span><span class="token operator">:</span> <span class="token string">"&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;"</span><span class="token punctuation">,</span>                <span class="token property">"hidden"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Azure Cloud Shell"</span><span class="token punctuation">,</span>                <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"Windows.Terminal.Azure"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"schemes"</span><span class="token operator">:</span>     <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#0C0C0C"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#0C0C0C"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#0037DA"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#767676"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#3B78FF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#61D6D6"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#16C60C"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#B4009E"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#E74856"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#F2F2F2"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#F9F1A5"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#3A96DD"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#CCCCCC"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#13A10E"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Campbell"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#881798"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#C50F1F"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#CCCCCC"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#C19C00"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#012456"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#0C0C0C"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#0037DA"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#767676"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#3B78FF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#61D6D6"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#16C60C"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#B4009E"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#E74856"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#F2F2F2"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#F9F1A5"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#3A96DD"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#CCCCCC"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#13A10E"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Campbell Powershell"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#881798"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#C50F1F"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#CCCCCC"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#C19C00"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#283033"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#6666E9"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#666666"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#0000FF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#00E5E5"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#00D900"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#E500E5"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#E50000"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#E5E5E5"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#E5E500"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#00A6B2"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#00FF00"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#00A600"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Homebrew"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#B200B2"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#FC5275"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#BFBFBF"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#999900"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#282C34"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#282C34"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#61AFEF"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#5A6374"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#61AFEF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#56B6C2"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#98C379"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#C678DD"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#E06C75"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#DCDFE4"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#E5C07B"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#56B6C2"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#DCDFE4"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#98C379"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"One Half Dark"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#C678DD"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#E06C75"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#DCDFE4"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#E5C07B"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#FAFAFA"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#383A42"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#0184BC"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#4F525D"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#61AFEF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#56B5C1"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#98C379"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#C577DD"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#DF6C75"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#E4C07A"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#4F525D"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#0997B3"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#383A42"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#50A14F"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"One Half Light"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#A626A4"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#E45649"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#FAFAFA"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#C18301"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#002B36"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#002B36"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#268BD2"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#073642"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#839496"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#93A1A1"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#586E75"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#6C71C4"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#CB4B16"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#FDF6E3"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#657B83"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#2AA198"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#839496"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#859900"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Solarized Dark"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#D33682"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#DC322F"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#EEE8D5"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#B58900"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#FDF6E3"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#002B36"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#268BD2"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#073642"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#839496"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#93A1A1"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#586E75"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#6C71C4"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#CB4B16"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#FDF6E3"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#657B83"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#002B36"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#2AA198"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#657B83"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#859900"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Solarized Light"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#D33682"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#DC322F"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#EEE8D5"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#B58900"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#3465A4"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#555753"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#729FCF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#34E2E2"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#8AE234"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#AD7FA8"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#EF2929"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#EEEEEC"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#FCE94F"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#06989A"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#D3D7CF"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#4E9A06"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Tango Dark"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#75507B"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#CC0000"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#D3D7CF"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#C4A000"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#3465A4"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#555753"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#729FCF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#34E2E2"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#8AE234"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#AD7FA8"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#EF2929"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#EEEEEC"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#FCE94F"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#06989A"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#555753"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#4E9A06"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Tango Light"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#75507B"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#CC0000"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#D3D7CF"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#C4A000"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#000080"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#808080"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#0000FF"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#00FFFF"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#00FF00"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#FF00FF"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#FF0000"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#FFFF00"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#008080"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#C0C0C0"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#008000"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Vintage"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#800080"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#800000"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#C0C0C0"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#808000"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#323232"</span><span class="token punctuation">,</span>            <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#323232"</span><span class="token punctuation">,</span>            <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#4099FF"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#535353"</span><span class="token punctuation">,</span>            <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#5EB7F7"</span><span class="token punctuation">,</span>            <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#DCF4FF"</span><span class="token punctuation">,</span>            <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#9DFF91"</span><span class="token punctuation">,</span>            <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#FF9DFF"</span><span class="token punctuation">,</span>            <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#F07070"</span><span class="token punctuation">,</span>            <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#FFE48B"</span><span class="token punctuation">,</span>            <span class="token property">"cursorColor"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#BED6FF"</span><span class="token punctuation">,</span>            <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#00FF00"</span><span class="token punctuation">,</span>            <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#7FE173"</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"idleToes"</span><span class="token punctuation">,</span>            <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#F680FF"</span><span class="token punctuation">,</span>            <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#D25252"</span><span class="token punctuation">,</span>            <span class="token property">"selectionBackground"</span><span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>            <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#EEEEEC"</span><span class="token punctuation">,</span>            <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#FFC66D"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>defaultProfile</code></p><p>将<code>defaultProfile</code>改为新的powershell。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"defaultProfile"</span><span class="token operator">:</span> <span class="token string">"&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>list</code></p><p>在list中新增一个配置，也就是我们的新版powershell。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token comment">// Powershell 7.1.0-preview.2 配置</span>    <span class="token property">"guid"</span><span class="token operator">:</span> <span class="token string">"&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;"</span><span class="token punctuation">,</span>    <span class="token property">"hidden"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"pwsh"</span><span class="token punctuation">,</span>    <span class="token comment">// 注意：一定要写上 -nologo，否则开启 powershll 会有一段话输出，很讨厌！</span>    <span class="token property">"commandline"</span><span class="token operator">:</span> <span class="token string">"C:/Program Files/PowerShell/7/pwsh.exe -nologo"</span><span class="token punctuation">,</span>    <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"Windows.Terminal.PowershellCore"</span><span class="token punctuation">,</span>    <span class="token comment">// 启动菜单一定要设置为 &lt;.>，否则后面重要的一步将会无效！</span>    <span class="token property">"startingDirectory"</span><span class="token operator">:</span> <span class="token string">"."</span><span class="token punctuation">,</span>    <span class="token comment">// 字体</span>    <span class="token property">"fontFace"</span><span class="token operator">:</span> <span class="token string">"Fira Code"</span><span class="token punctuation">,</span>    <span class="token property">"fontSize"</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>    <span class="token property">"historySize"</span><span class="token operator">:</span> <span class="token number">9001</span><span class="token punctuation">,</span>    <span class="token property">"padding"</span><span class="token operator">:</span> <span class="token string">"5, 5, 20, 25"</span><span class="token punctuation">,</span>    <span class="token property">"snapOnInput"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"useAcrylic"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">// 颜色</span>    <span class="token property">"colorScheme"</span><span class="token operator">:</span> <span class="token string">"idleToes"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>colorScheme</code></p><p>这个也就是配色。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"idleToes"</span><span class="token punctuation">,</span>    <span class="token property">"black"</span><span class="token operator">:</span> <span class="token string">"#323232"</span><span class="token punctuation">,</span>    <span class="token property">"red"</span><span class="token operator">:</span> <span class="token string">"#d25252"</span><span class="token punctuation">,</span>    <span class="token property">"green"</span><span class="token operator">:</span> <span class="token string">"#7fe173"</span><span class="token punctuation">,</span>    <span class="token property">"yellow"</span><span class="token operator">:</span> <span class="token string">"#ffc66d"</span><span class="token punctuation">,</span>    <span class="token property">"blue"</span><span class="token operator">:</span> <span class="token string">"#4099ff"</span><span class="token punctuation">,</span>    <span class="token property">"purple"</span><span class="token operator">:</span> <span class="token string">"#f680ff"</span><span class="token punctuation">,</span>    <span class="token property">"cyan"</span><span class="token operator">:</span> <span class="token string">"#bed6ff"</span><span class="token punctuation">,</span>    <span class="token property">"white"</span><span class="token operator">:</span> <span class="token string">"#eeeeec"</span><span class="token punctuation">,</span>    <span class="token property">"brightBlack"</span><span class="token operator">:</span> <span class="token string">"#535353"</span><span class="token punctuation">,</span>    <span class="token property">"brightRed"</span><span class="token operator">:</span> <span class="token string">"#f07070"</span><span class="token punctuation">,</span>    <span class="token property">"brightGreen"</span><span class="token operator">:</span> <span class="token string">"#9dff91"</span><span class="token punctuation">,</span>    <span class="token property">"brightYellow"</span><span class="token operator">:</span> <span class="token string">"#ffe48b"</span><span class="token punctuation">,</span>    <span class="token property">"brightBlue"</span><span class="token operator">:</span> <span class="token string">"#5eb7f7"</span><span class="token punctuation">,</span>    <span class="token property">"brightPurple"</span><span class="token operator">:</span> <span class="token string">"#ff9dff"</span><span class="token punctuation">,</span>    <span class="token property">"brightCyan"</span><span class="token operator">:</span> <span class="token string">"#dcf4ff"</span><span class="token punctuation">,</span>    <span class="token property">"brightWhite"</span><span class="token operator">:</span> <span class="token string">"#ffffff"</span><span class="token punctuation">,</span>    <span class="token property">"background"</span><span class="token operator">:</span> <span class="token string">"#323232"</span><span class="token punctuation">,</span>    <span class="token property">"foreground"</span><span class="token operator">:</span> <span class="token string">"#00ff00"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>配置鼠标右键</p><p>新版的Terminal安装后右键默认带有了菜单，无需在手动配置。</p></li></ol><h2 id="问题说明"><a class="markdownIt-Anchor" href="#问题说明"></a> 问题说明</h2><ol><li><p>实验环境</p><p>VMware下的Windows2004版本</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件配置 </category>
          
          <category> Terminal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优雅使用JsDeliver加速文件</title>
      <link href="/posts/e33d1c55/"/>
      <url>/posts/e33d1c55/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>看到好多人不会用GitHub+JsDeliver来加速自己的静态文件。遂决定水一篇，帮助一下还不会操作的小伙伴。</p><blockquote><p>不建议使用GitHub当作图床！！！</p></blockquote><h2 id="正式开始"><a class="markdownIt-Anchor" href="#正式开始"></a> 正式开始</h2><div class="snote quote"><p class='p subtitle'>前期准备</p><ol><li>一个Github账号</li><li>可以登录GitHub</li><li>懂得如何向GitHub仓库push文件</li></ol></div><p>关于Github仓库可以新建，也可以使用<code>&lt;用户名&gt;.github.io</code>这个仓库。这里我就新建一个仓库为例。</p><ol><li><p>建立仓库</p><p>仓库名称与描述看自己心情写即可。但仓库一定要<strong>公开</strong>，不能是私有。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/bac8d3113ba958f1192a1abfd6e31ebc.png" alt="image-20200528080046828" /></p></li><li><p>上传文件</p><p>这里我将上传一张图片</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/f908ef5f6898f66f9e66463398fa6164.png" alt="image-20200528080846385" /></p><p>一张6m的图😄</p></li><li><p>使用JSD引用。</p><p>这里我并未发布版本，但依然可以引用！<em>（仓库水完这篇文章也就删了，因此不要试图访问这个链接哦！但是本文图片全用的这种方式。）</em></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png" alt="image-20200528083046335" /></p></li></ol><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><p>上边的方式非常简单粗暴，几乎就是上传即可。但是这种方式存在几个问题。在这部分将解答疑惑。</p><h3 id="jsd的链接是什么"><a class="markdownIt-Anchor" href="#jsd的链接是什么"></a> JSD的链接是什么</h3><div class="snote idea yellow"><p>JSD的链接是什么？</p></div><p>在我上图的链接为<code>https://cdn.jsdelivr.net/gh/sviptzk/Jsd_test/79601805_p0.png</code>，但这并不意味着JSD只有这一种引用方式。</p><ol><li><p>直接引用</p><p>这种方式也就是上边的方式，格式为：<code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;/&lt;文件及路径&gt;</code></p><p>例如：<code>https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png</code>代表用户名<code>blogimg</code>下的<code>HexoStaticFlle2</code>仓库中文件夹<code>/2020/05/28/</code>里的<code>911db4c3b95ed896b066b6e9aabae311.png</code>文件。</p></li><li><p>分支及版本号</p><p>分支与版本号加到仓库后变，用<code>@</code>符链接。格式为：<code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;@[分支/版本号]/&lt;文件及路径&gt;</code></p><table><thead><tr><th style="text-align:center">分支名</th><th style="text-align:center">简述</th><th style="text-align:center">特点</th></tr></thead><tbody><tr><td style="text-align:center">普通分支</td><td style="text-align:center">即GitHub的分支，可以创建多个。默认为master</td><td style="text-align:center">按分支引用，如同按分支开发</td></tr><tr><td style="text-align:center"><code>latest</code></td><td style="text-align:center">最后一次提交</td><td style="text-align:center">代表最后一次的提交，即每上传一个新文件，都可以用这个分支引用到。也就是不加版本号的默认情况。</td></tr><tr><td style="text-align:center">版本号</td><td style="text-align:center">即指定版本的内容，需配合版本发布</td><td style="text-align:center">已发布的版本不会受到仓库内容变化的影响</td></tr></tbody></table></li></ol><h3 id="如何按版本号引用"><a class="markdownIt-Anchor" href="#如何按版本号引用"></a> 如何按版本号引用</h3><div class="snote idea yellow"><p>如何按版本号引用</p></div><p>使用版本号引用的优点在于：这个链接仅停留在发布版本号的时刻，无论仓库如何变化，这个版本号的文件都不会受到影响。同时可以避免JSD缓存问题。</p><ol><li><p>发布版本</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/87a5106dae590cb9d4aa6373c969286a.png" alt="image-20200528084631488" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/1a7a301470e6564a118585aded6dc972.png" alt="image-20200528084647411" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/cb43fa11bd315ed8f5346ace0ea08b5c.png" alt="image-20200528084720237" /></p></li><li><p>使用版本号引用</p><p>刚刚发布的版本中只有一个图片，那么即使我在上传一张图片也是无法引用到的。</p><p>例如我在向仓库push一张<code>1.jpg</code>，使用版本号方式引用。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/6bfbc3a1f5e33fa07801acd99038edb4.png" alt="image-20200528085930130" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/27308378700d0eb953aa47751df86560.png" alt="image-20200528085944413" /></p></li></ol><h3 id="关于缓存问题"><a class="markdownIt-Anchor" href="#关于缓存问题"></a> 关于缓存问题</h3><div class="snote idea yellow"><p>关于缓存问题</p></div><p>这个问题向迷一样，根据我自己的实测不仅与分支有关系而且与文件名有关系。文件名为<code>*.min.*</code>或者是<code>*.*</code>，也就是带<code>min</code>的和不带<code>min</code>的。这里我以<code>index.min.css</code>和<code>index.css</code>为例。</p><p>先来看看<code>index.css</code></p><table><thead><tr><th style="text-align:center">分支</th><th>首次上传</th><th style="text-align:center">能否及时更新</th><th style="text-align:center">缓存天数</th></tr></thead><tbody><tr><td style="text-align:center"><code>master</code></td><td>可以被引用</td><td style="text-align:center">第一次push和第一次修改可以更新</td><td style="text-align:center">可能1天</td></tr><tr><td style="text-align:center"><code>latest</code></td><td>可以被引用</td><td style="text-align:center">与master分支几乎一致</td><td style="text-align:center">可能1天</td></tr><tr><td style="text-align:center">版本号</td><td>发布版本后引用</td><td style="text-align:center">发布后及时更新</td><td style="text-align:center">每个版本独立</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/e5cb1fb4ee213a924436ef3008a82ecb.png" alt="image-20200528091044063" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d86cbae93878d06c323c6bcdc7603b4.png" alt="image-20200528091150570" /></p><p>在来看看<code>index.min.css</code></p><table><thead><tr><th style="text-align:center">分支</th><th>首次上传</th><th style="text-align:center">能否及时更新</th><th style="text-align:center">缓存天数</th></tr></thead><tbody><tr><td style="text-align:center"><code>master</code></td><td>可以被引用</td><td style="text-align:center">第一次push可以更新</td><td style="text-align:center">可能1天</td></tr><tr><td style="text-align:center"><code>latest</code></td><td>可以被引用</td><td style="text-align:center">第一次push和第一次修改可以更新</td><td style="text-align:center">可能1天</td></tr><tr><td style="text-align:center">版本号</td><td>发布版本后引用</td><td style="text-align:center">发布后及时更新</td><td style="text-align:center">每个版本独立</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/a800e6fdd6ae614dca6e78237d24c0b7.png" alt="image-20200528091907595" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d32f3d272157531ac383ba30ba5933b.png" alt="image-20200528092301901" /></p><p>因此总结下的使用方式就是：</p><ul><li><p>图床（不需要修改文件）</p><p>使用latest分支或者master分支即可。</p></li><li><p>静态文件仓库（经常改动文件）</p><p>建议使用版本号方式</p></li></ul><h3 id="文件是否有限制"><a class="markdownIt-Anchor" href="#文件是否有限制"></a> 文件是否有限制</h3><div class="snote idea yellow"><p>文件是否有限制？</p></div><ol><li><p>先说说GitHub仓库</p><p>GitHub公开仓库大小为100GB，是不是听起来很爽。并且可以创建无数个仓库哦！</p><p>但是这100GB我们并不能全用完，甚至每个仓库不能超过1G。为什么？因为可能被封号。官方的解释是尽量不要传大文件，且仓库超过1G后会有人工审核仓库内容，如果发现用来做图床~~~😏。轻则删库，重则封号。因此为了安全建议在1G之前就换个仓库，反正可以创建无数个仓库嘛。</p></li><li><p>文件大小</p><p>Github单文件上传为100M，但是JSD加速的单文件大小为50M。因此也就意味着单文件大小为50MB。</p></li><li><p>文件类型</p><p>基本的图片视频静态文件应该都可以。</p></li></ol><h3 id="查看仓库文件"><a class="markdownIt-Anchor" href="#查看仓库文件"></a> 查看仓库文件</h3><div class="snote idea yellow"><p>查看仓库文件</p></div><p>查看仓库文件有大小限制，因此当你的仓库文件大于50MB时，就无法通过JSD查看了，只能在GitHub仓库查看。</p><p>JSD的查看仓库文件有两种方式：</p><ol><li><p>查看仓库的版本号</p><p>格式：<code>https://www.jsdelivr.com/package/gh/</code>+ 用户名 +<code>/</code>+ 仓库名</p><p>例如：<code>https://www.jsdelivr.com/package/gh/sviptzk/HexoStaticFile</code></p></li><li><p>查看仓库文件</p><p>格式 <code>https://cdn.jsdelivr.net/gh/</code>+ 用户名 +<code>/</code>+ 仓库名 +<code>/</code> 仓库名[@分支]</p><p>例如<code>仓库名@master</code>，默认为 master 分支<code>https://cdn.jsdelivr.net/gh/sviptzk/sviptzk.github.io@master/</code></p></li></ol><h2 id="利用cloudfare"><a class="markdownIt-Anchor" href="#利用cloudfare"></a> 利用CloudFare</h2><p>这个没有啥难度，因此只提供思路。</p><ol><li><p>将GitHub仓库开启Pages服务，并绑定自己的域名</p></li><li><p>域名需要在CloudFare解析</p></li><li><p>接下来就可以用你的域名访问仓库文件了。</p><p>例如：<code>https://cdn.antmoe.com/1.jpg</code>。代表访问仓库根目录下的<code>1.jpg</code>文件</p><p>上边只是一个示例，不要试图访问哦！</p></li></ol><h2 id="其他问题"><a class="markdownIt-Anchor" href="#其他问题"></a> 其他问题</h2><ol><li>上传文件后如果不能立即访问到，那么稍等片刻即可。</li><li>JSD最近很不稳定，遇到突然不能打开很正常。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将Hexo部署到云服务器</title>
      <link href="/posts/165dc071/"/>
      <url>/posts/165dc071/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><blockquote><p>2021年03月27日重新更新此篇文章，至于为什么，大概因为昨天晚上vercel网络出现了波动，导致我的cdn无法进行回源，最终导致博客打不开。因此决定将博客同时部署到服务器做cdn的回源途径。<em>多一份部署多一份保障</em>🤭</p></blockquote><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><blockquote><p><strong>全程图文预警</strong></p><p>上一次部署使用的方式是宿主机安装nginx开启静态服务器的方式，这次为了方便，决定使用<code>docker</code>+<code>docker-compose</code>的方式进行安装nginx。</p></blockquote><div class="note warning flat"><p>本次教程使用的服务器环境为<strong>阿里轻量云+CentOS 7.6</strong></p></div><h2 id="安装git如果有则不需要安装"><a class="markdownIt-Anchor" href="#安装git如果有则不需要安装"></a> 安装git（如果有则不需要安装）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel -yyum <span class="token function">install</span> -y <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装完成后通过<code>git --version</code>命令即可查看git当前版本，即代表成功。</p><p><img src="https://file.acs.pw/picGo/2021/3/27/de251f0f871c01507f2bc292917bc420.png" alt="image-20210327101301179" /></p><h2 id="创建裸露仓库"><a class="markdownIt-Anchor" href="#创建裸露仓库"></a> 创建裸露仓库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 创建用户<span class="token function">useradd</span> <span class="token function">git</span>// 设置密码<span class="token function">passwd</span> <span class="token function">git</span> // 切换用户<span class="token function">su</span> <span class="token function">git</span> // 进入git用户的家目录<span class="token builtin class-name">cd</span> /home/git/// 项目存在的真实目录（当然你可以创建在其他地方）<span class="token function">mkdir</span> -p projects/hexo_blog // 创建文件夹<span class="token function">mkdir</span> repos <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> repos// 创建一个裸露的仓库<span class="token function">git</span> init --bare hexo_blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/b430e2ffaa75db48c34a446f6584fd81.png" alt="image-20210327101624787" /></p><h2 id="写入钩子"><a class="markdownIt-Anchor" href="#写入钩子"></a> 写入钩子</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo_blog.git/hooks// 创建 hook 钩子函数，输入了内容如下<span class="token function">vi</span> post-receive <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>输入以下的命令</p><pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;shgit --work-tree&#x3D;&#x2F;home&#x2F;git&#x2F;projects&#x2F;hexo_blog --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;repos&#x2F;hexo_blog.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>写入后添加可执行权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 为刚才的文件添加可执行的权限<span class="token function">chmod</span> +x post-receive// 退出到 root 登录<span class="token builtin class-name">exit</span> // 添加权限<span class="token function">chown</span> -R git:git /home/git/repos/hexo_blog.git <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试能否正常clone"><a class="markdownIt-Anchor" href="#测试能否正常clone"></a> 测试能否正常clone</h2><p>在自己电脑上找一个空的文件夹输入如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@server_ip:/home/git/repos/hexo_blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/0668382e36ef0e687a6f9efe43a0f94e.png" alt="image-20210327102246035" /></p><p>正常情况下会出现上图的情况，即代表成功了。</p><h2 id="建立ssh关系实现免密"><a class="markdownIt-Anchor" href="#建立ssh关系实现免密"></a> 建立SSH关系，实现免密</h2><ol><li><p>新建一个ssh证书，专门用于git推送使用。（你也可以直接使用你的id_rsa（如果存在））</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"这里换上你的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>按提示操作即可。注意如果你曾经有证书，记得重命名，不然会覆盖你以前的证书。</p></blockquote><p><img src="https://file.acs.pw/picGo/2021/3/27/2212cfcdb4de9aeb0ee089d51606f776.png" alt="image-20210327102824405" /></p></li><li><p>手动设置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 切换到git用户<span class="token function">su</span> <span class="token function">git</span>//进入家目录，如果没有.ssh目录，那么需要创建。如果存在直接进入即可<span class="token builtin class-name">cd</span> ~//创建.ssh目录<span class="token function">mkdir</span> .ssh// 赋予权限<span class="token function">chmod</span> <span class="token number">700</span> .ssh/// 进入.ssh目录<span class="token builtin class-name">cd</span> .ssh// 编辑一个名为authorized_keys的文件，并写入公钥<span class="token punctuation">(</span>git_rsa.pub<span class="token punctuation">)</span>内容<span class="token function">vi</span> authorized_keys// 添加完成后赋予权限<span class="token function">chmod</span> <span class="token number">600</span> authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/9bb08f709dcf522cf365e40ea0e0f752.png" alt="image-20210327103047351" /></p></li><li><p>测试</p><p>如果你生成的证书没有按照默认流程（图片示例），那么需要你将你的证书移动到<code>C:\Users\dream\.ssh</code>目录，然后在<code>config</code>文件新增如下：</p><pre class="line-numbers language-none"><code class="language-none"># 服务器认证Host 你的服务ip    HostName 你的服务ip    IdentityFile ~\\.ssh\\私钥名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/fbdfbb86f93020ecdafaa9c8aea359b3.png" alt="image-20210327103710656" /></p><blockquote><p>如果你按照默认流程了，那么不需要此操作。</p></blockquote><p>都配置完毕后输入<code>ssh git@服务器ip</code>如果能够免密登录即代表成功了，如果不能请用脑子在仔细看一遍这一部分的教程。</p><p><img src="https://file.acs.pw/picGo/2021/3/27/1e51ea1f28dddc4157fc362213841d83.png" alt="image-20210327103901579" /></p></li></ol><h2 id="禁用git用户的shell权限"><a class="markdownIt-Anchor" href="#禁用git用户的shell权限"></a> 禁用git用户的shell权限</h2><p>我测试安装完后自带了<code>git-shell</code>，通过<code>which git-shell</code>命令查看是否能显示出路径，如果不能则需要手动添加。</p><p><img src="https://file.acs.pw/picGo/2021/3/27/4da6bec68f9a80a43f161b099ad28a0a.png" alt="image-20210327104350613" /></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 如果不是root用户请切换至root用户<span class="token function">su</span> root// 查看 git-shell 是否在登录方式里面<span class="token function">cat</span> /etc/shells // 查看是否安装<span class="token function">which</span> git-shell // 添加上2步显示出来的路劲，通常在 /usr/bin/git-shell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 <code>/etc/passwd</code> 中的权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 将原来的git:x:1001:1001::/home/git:/bin/bash// 修改为git:x:1001:1001::/home/git:/bin/git-shell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hexo配置"><a class="markdownIt-Anchor" href="#hexo配置"></a> hexo配置</h2><p>在配置文件添加上你的git，<em>每个人的配置可能不同</em>，图片仅供参考。</p><p><img src="https://file.acs.pw/picGo/2021/3/27/abcae5bea72fafd4ed2dad8d1ce0018c.png" alt="image-20210327104911059" /></p><p>示例：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  - type: baidu_url_submitter <span class="token comment"># 百度</span>  - type: baidu_xz_url_submitter <span class="token comment"># 百度熊掌号</span>  - type: <span class="token function">git</span>    repository:      server: git@server_ip:/home/git/repos/hexo_blog.git    branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置完成后运行一次<code>hexo d</code>命令，看是否能成功推送。（使用此命令推送需要本地id_rsa私钥对用的公钥在服务器上，如果你按照我的流程重命名了，那么不会成功的！）</p><p>手动测试</p><ol><li><p>进入<code>public</code>目录</p></li><li><p>初始化仓库</p></li><li><p>命令三连</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">'update'</span><span class="token function">git</span> push --force --all git@server_ip:/home/git/repos/hexo_blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/411a6b4e96b3aa2732d465a661a9c56a.png" alt="image-20210327105822053" /></p></li><li><p>此时服务器中已经存在了文件</p><p><img src="https://file.acs.pw/picGo/2021/3/27/52da95cff516898b457be1e0e654a956.png" alt="image-20210327110317070" /></p></li></ol><div class="note danger flat"><p>虽然现在很麻烦，但是后面我会介绍通过持续集成实现自动化构建并上传。那时你只需要push上你的源代码即可。</p></div><h2 id="安装docker"><a class="markdownIt-Anchor" href="#安装docker"></a> 安装Docker</h2><ol><li><p>安装docker</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -fsSL get.docker.com -o get-docker.sh<span class="token function">sudo</span> <span class="token function">sh</span> get-docker.sh --mirror Aliyun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/7eaf5c19d14602abc4f80fc5562f2c6a.jpeg" alt="image-20210327095433092" /></p></li><li><p>启动docker服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> docker<span class="token function">sudo</span> systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>推荐操作</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">groupadd</span> docker<span class="token function">sudo</span> <span class="token function">usermod</span> -aG docker <span class="token environment constant">$USER</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/9e6de78253717fd1e3cb1ab45c57018a.png" alt="image-20210327095647687" /></p></li><li><p>使用阿里云镜像加速（非大陆机器可忽略）</p><ol><li><p>登录<a href="https://cr.console.aliyun.com/?spm=5176.12818093.custom--ali--widget-home-product-recent.dre1.1c8316d0Tujp2R">阿里容器镜像服务</a></p></li><li><p>查看加速地址</p><p><img src="https://file.acs.pw/picGo/2021/2/27/4ee8ed340343e6d5b82db27657dfd308.png" alt="image-20210227190110321" /></p></li><li><p>设置加速服务</p><ul><li><p>创建目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /etc/docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建文件并写入内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">'EOF'&#123;  "registry-mirrors": ["https://lz2nib3q.mirror.aliyuncs.com"]&#125;EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>重新加载及重启Docker服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>查看镜像地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dokcer info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/81643eaef96277bc6dd3c7a8e30d8759.png" alt="image-20210327100102166" /></p></li></ol></li></ol><h2 id="安装docker-compose"><a class="markdownIt-Anchor" href="#安装docker-compose"></a> 安装docker-compose</h2><p>由于国内机器直接下载GitHub的资源速度很慢。因此使用手动下载的方式。</p><ol><li><p>进入<a href="https://github.com/docker/compose/releases">GitHub</a>进行下载<code>docker-compose-Linux-x86_64</code></p></li><li><p>将文件上传到 <code>/usr/local/bin/</code> 目录，并改名为 <code>docker-compose</code></p><p><img src="https://file.acs.pw/picGo/2021/3/27/b55191d7d90e5a3f66595e86223a30e2.png" alt="image-20210327100914341" /></p></li><li><p>赋予权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>测试</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker-compose -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/0d3b13695dc9c3c9fcb638836236a837.png" alt="image-20210327100958402" /></p></li></ol><h2 id="配置nginx"><a class="markdownIt-Anchor" href="#配置nginx"></a> 配置nginx</h2><p>既然我们安装了docker，那么我们的配置将会很简单。</p><ol><li><p>下载<a href="https://tzk.lanzous.com/b06mr4hfc">蓝奏云</a>文件，密码（ak1m）</p></li><li><p>将文件解压，并按照你自己的信息进行编辑</p><ul><li><p>ssl目录</p><p>存放你的网站证书，可以到腾讯云、阿里云、freessl等平台进行申请。</p></li><li><p>nginx目录</p><p>此目录存在nginx的相关配置，请按照注释修改相关配置</p></li></ul></li><li><p>服务器上传这些文件（不是压缩包）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~<span class="token function">mkdir</span> blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2021/3/27/58d4ac2252bf2890ec848e045e086bd7.png" alt="image-20210327113346229" /></p></li><li><p>运行<code>docker-compose up -d</code>命令启动服务。然后使用<code>docker-compose ps</code>命令查看服务是否正确运行。</p><p><img src="https://file.acs.pw/picGo/2021/3/27/23cb64080f8891b59c570d455be9ade2.png" alt="image-20210327113622914" /></p></li><li><p>dns解析。</p><p><img src="https://file.acs.pw/pigGo/2021/03/27/20210327114033.png" alt="image-20210327113645222" /></p></li></ol><h2 id="通过coding自动部署"><a class="markdownIt-Anchor" href="#通过coding自动部署"></a> 通过coding自动部署</h2><p>通过coding部署需要将我们的私钥放到环境变量里，但是coding的环境变量不会自动解析换行符，因此我们需要手动解析一下（也就是将换行变成<code>\n</code>）。然后将其填入coding的环境变量。</p><p>简陋的在线转换地址：<a href="https://kkfive.gitee.io/tools/">gitee Pages</a></p><p><img src="https://file.acs.pw/pigGo/2021/03/27/20210327145311.png" alt="image-20210327145311021" /></p><p>在执行上传命令之前添加如下命令即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p ~/.ssh/<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$&#123;HEXO_DEPLOY_PRIVATE_KEY&#125;</span>"</span> <span class="token operator">></span> ~/.ssh/id_rsa <span class="token function">chmod</span> <span class="token number">600</span> ~/.ssh/id_rsa<span class="token function">cat</span> ~/.ssh/id_rsassh-keyscan 你的服务器ip地址 <span class="token operator">>></span> ~/.ssh/known_hosts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通过github-actions自动部署"><a class="markdownIt-Anchor" href="#通过github-actions自动部署"></a> 通过GitHub Actions自动部署</h2><p>GitHub的密钥支持换行符，不需要进行转化，直接粘贴即可。新加一个名称为 <code>HEXO_DEPLOY_PRIVATE_KEY</code>的<code>Secrets</code></p><p>在进行上传操作时执行如下步骤：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Deploy Private Key  <span class="token key atrule">env</span><span class="token punctuation">:</span>    <span class="token key atrule">HEXO_DEPLOY_PRIVATE_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.HEXO_DEPLOY_PRIVATE_KEY <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    mkdir -p ~/.ssh/    echo "$HEXO_DEPLOY_PRIVATE_KEY" > ~/.ssh/id_rsa     chmod 600 ~/.ssh/id_rsa    ssh-keyscan 服务器ip >> ~/.ssh/known_hosts</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优雅解决LeanCloud流控问题</title>
      <link href="/posts/ff6aef7b/"/>
      <url>/posts/ff6aef7b/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><div class="note danger icon flat"><p>由于作者已放弃valine评论，故关于此评论有关的项目均已放弃。</p></div><p>最近好多人遇到了&quot;因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠&quot;。我也遇到了这种问题，太难受了。难道白嫖结束了，羊被薅死了？<img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/04/22/097cd88f446efae87cb27de38c5eed15.png" alt="" /></p><p>但我还是不甘心，于是只能另寻他法。</p><p>首先看到官方所说：</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/14/690052ad1e12bd97d8459f6533fcc64b.png" alt="" /></p><p>既然是同一时刻，那么是不是意味着只要搓开时间就可以了呢？</p><p>我便调整时间尝试了几天，第一天还好，但以后便又出现了流控导致的失败。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/14/c8a4f0d2c05048eff1ce5d43b7dfd6b1.png" alt="image-20200514225944504" /></p><p><strong>因此，调整时间避免的方案治标不治本。还需另寻他法。</strong></p><h2 id="目前方案"><a class="markdownIt-Anchor" href="#目前方案"></a> 目前方案</h2><ol><li><p>修改定时任务的唤醒时间</p><p>这个方案在上边我已经介绍过了，治标不治本。这里我并不推荐。</p></li><li><p>在博客多加入一条请求。</p><p>也就说每一次访问博客时，将 leancloud 唤醒。这种方法可以，这也是我最先想到的，但无疑，这会在一定程度上拖慢博客加载速度。</p></li><li><p>第二个方案的变种</p><p>为什么说是变种。因为也是加一个请求，只不过不会在你博客加，那么加在哪里呢？请继续往后看。</p></li></ol><h2 id="优雅解决"><a class="markdownIt-Anchor" href="#优雅解决"></a> 优雅解决</h2><p>解决方案其实真的还蛮多的。因为方案很多，我也不可能每种方案都写一篇详细的小白教程，因此发现或者想到新方案后，我会将思路分享给大家。至于具体如何操作，请自己动手，详细过程不可能再会给出教程(<em>特别繁琐除外</em>)，本文只会给出一些关键性的代码（脚本），以及代码（脚本）如何使用。</p><p><strong>此篇文章详细介绍方案一的做法，其他方案为 2020 年 05 月 18 日后补方案</strong></p><p>LeanCloud 的机器唤醒其实还有一种方式。详情请看<a href="https://leancloud.cn/docs/leanengine_plan.html#hash633315134">休眠策略</a>。</p><blockquote><ul><li>如果应用最近一段时间（半小时）没有任何外部请求，则休眠。</li><li>休眠后如果有新的外部请求实例则马上启动。访问者的体验是第一个请求响应时间是 5 ~ 30 秒（视实例启动时间而定），后续访问响应速度恢复正常。</li><li>强制休眠：如果最近 24 小时内累计运行超过 18 小时，则强制休眠。此时新的请求会收到 503 的错误响应码，该错误可在 <strong>云引擎 &gt; 统计</strong> 中查看。</li></ul></blockquote><p>那么我们只要每三十分钟之内在外部访问一次不就可以解决了么？</p><p>于是我查看了一下<code>valine-admin</code>的唤醒源代码，自唤醒云函数也是这样实现的。于是便继续开始白嫖。<img src="https://cdn.jsdelivr.net/gh/blogimg/emotion/aru/40.png" alt="阿鲁小表情-小康博客" /></p><h2 id="思路脑图"><a class="markdownIt-Anchor" href="#思路脑图"></a> 思路脑图</h2><p>以下所有方案均遵循这里的脑图思路。如果小白博客请看懂思路后在尝试。<mark>不要无脑复制！不要无脑复制！不要无脑复制！</mark></p><p>思路：通过某种（下边的任意一种）方式，从外部 get 你的<strong>评论后台地址</strong>。</p><div class='tip error'><p>不是get你的博客地址。一定是评论后台地址！所有的方式都是评论后台地址，所有的方式都与博客地址没有半毛钱关系！<p></div><div class='tip error'><p>不是get你的博客地址。一定是评论后台地址！所有的方式都是评论后台地址，所有的方式都与博客地址没有半毛钱关系！<p></div><div class='tip error'><p>不是get你的博客地址。一定是评论后台地址！所有的方式都是评论后台地址，所有的方式都与博客地址没有半毛钱关系！<p></div><h2 id="开始尝试"><a class="markdownIt-Anchor" href="#开始尝试"></a> 开始尝试</h2><p>这里我使用的是 GitHub+Actions。是不是很熟悉，自动部署也是这个方案呢。</p><ol><li><p>鼠标放在右上角，选择 setting</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/14/a81f88e80fd7105d7cc3e1844970e8bd.png" alt="" /></p></li><li><p>点击<code>Developer settings</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/14/66df62fbc0d51403fcdc8223c4b6ce52.png" alt="" /></p></li><li><p>选择<code>Personal access tokens</code>，添加一个新的 TOKEN。</p><p>这个 TOKEN 主要使用来启动 actions 和上传结果用的。</p><p>设置名字为<code>GITHUB_TOKEN</code> , 然后勾选 repo , admin:repo_hook , workflow 等选项，最后点击 Generate token 即可。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/15/23ee2808dce8dab17e06107d1ddaf5d6.png" alt="image-20200515211343057" /></p><p><strong>名字请务必使用</strong><code>GITHUB_TOKEN</code>。</p></li><li><p>接下来 FORK 项目。</p><p>地址：<a href="https://github.com/blogimg/WakeLeanCloud">https://github.com/blogimg/WakeLeanCloud</a></p><p>如果觉得好用可以点个赞哦！</p></li><li><p>成功 FORK 后，进入项目的设置。添加你的 leancloud 的后台地址（也就是评论管理的后台地址）</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/14/d15b1fffb681f0dd3b9264ea878bf055.png" alt="" /></p><p>选择 Secrets，添加你的<strong>评论后台地址</strong>，<mark>一定是 Leancloud 的后台地址（环境变量 ADMIN_URL），而不是你的博客地址。</mark></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/14/6c2cd1845116e3d4e4147157d334be19.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/14/caed66e8408e5a0c91fe446951180f8d.png" alt="" /></p><div class='tip warning'><p>SITE的网址应填你的评论管理后台地址，而不是博客地址。<p></div><p><strong>其中 Name 的名字必须为<code>SITE</code>，Value 可以是多个后台地址（注意请求头也要写），用英文逗号分隔。不要中中文逗号，不要用中文逗号，不要用中文逗号</strong></p><blockquote><p>valine 后台地址（你的页面可能与我略有差异，但一定要出现一个类似的页面）：</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/09/07496898cc28811fd036a516c5f3419e.png" alt="image-20200609085422749" /></p></blockquote></li><li><p>接下来对自己的项目点个 star 就能启动了，启动后请切换到 actions，看看是否运行成功。</p><ul><li><p>成功</p><p>那么你就可以关掉了，默认是每天 8:00-24:00 时每 20 分钟运行一次。(GitHub 时间稍有延迟，大概时 2-5 分钟。)</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/25/4736d5905066440617f4a63ecfc70cc1.png" alt="成功示意图" /></p></li><li><p>失败</p><p>如果你的 GitHub 从来没有用过 actions，那么需要先“了解”。方法很简单，点击绿色的按钮即可。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/25/91a79177e21e2a49d28be09cc676ad7a.png" alt="image-20200525093352663" /></p><p>其他问题：请认真看本教程并且思考为什么这么做，你就能想到你是哪里出了问题。</p></li></ul><blockquote><p>自己点自己的项目是手动执行一次 actions。是为了测试才设计这个功能的哦！</p><p>并不是不点星这个 actions 就不会运行。</p></blockquote></li><li><p>最后，如果觉得好用，请给我点个 star 哦！</p></li></ol><h2 id="其他解决方案"><a class="markdownIt-Anchor" href="#其他解决方案"></a> 其他解决方案</h2><p>这里为<span class="inline-tag grey">2020-05-18</span>之后补充的其他方案。</p><h3 id="方案二"><a class="markdownIt-Anchor" href="#方案二"></a> 方案二</h3><p>利用国内的云函数，自己写一个脚本。然后定时监控即可。</p><p>或者宝塔、自己服务器的定时任务都是可以的。</p><h3 id="方案三"><a class="markdownIt-Anchor" href="#方案三"></a> 方案三</h3><p><code>cloudflare</code>的<code>Workers</code>可以在线定义脚本，通过链接即可触发脚本。</p><p>因此定义好自己的脚本后，通过监控即可触发来实现唤醒 LeanCloud</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"fetch"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">handleRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">body</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;!doctype html>&lt;html>&lt;head>&lt;meta charset="utf-8" />&lt;meta name="viewport" content="width=device-width,initial-scale=1" />&lt;title>唤醒你的LeanCloud&lt;/title>&lt;/head>&lt;body></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>body<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/body>&lt;/html></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        status<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>        headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token string">"Content-Type"</span><span class="token operator">:</span> <span class="token string">"text/html; charset=utf-8"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> hour <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> minutes <span class="token operator">=</span> date<span class="token punctuation">.</span>getMinutes<span class="token punctuation">;</span>  <span class="token comment">// 事件控制，因此事件采用utc时间，因此需要手动-8</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>hour <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> hour <span class="token operator">&lt;=</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 列表里添加你的评论管理后台地址</span>    <span class="token keyword">const</span> Urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"https://www.antmoe.com/"</span><span class="token punctuation">,</span> <span class="token string">"https://www.tzki.cn/"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Urls<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>Urls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>status<span class="token punctuation">;</span>      result <span class="token operator">+=</span> Urls<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"状态："</span> <span class="token operator">+</span> html <span class="token operator">+</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>result<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;br /></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">当前是休息时间哦！&lt;br /></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>监控平台：<a href="https://uptimerobot.com/">https://uptimerobot.com/</a> 监控地址就是 Workers 的地址。监控频率看你自己。</p><p>另外网友<a href="https://crosschannel.cc/">track13</a>评论到：其实只外部要唤醒一次就可以，之后都可以交给 leancloud 的定时任务。</p><h3 id="方案四"><a class="markdownIt-Anchor" href="#方案四"></a> 方案四</h3><p>通过<code>cron-job</code>平台进行监控。注册地址：<a href="https://cron-job.org/en/signup/">https://cron-job.org/en/signup/</a></p><ol><li><p>注册</p><p><strong>时区请选择<code>Asia/Shanghai</code>，否则请手动下边的操作请手动换算时间。另外关于最下边的谷歌验证如果出不来，请采用特殊方式。这里不过多介绍。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/24/980e07f7e4c82e8c1c1bf7d76e917270.png" alt="" /></p></li><li><p>登录账号</p><p>首先去邮箱激活一下账号哦！<em>邮件可能在垃圾箱哦！</em></p></li><li><p>添加任务</p><p>登陆之后依次点击 <code>Members</code>,<code>cronjobs</code>,<code>Create cronjob</code></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/24/94f15877483ab13d9e07e673720b5eba.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/24/3a79c54ac105dea310e1dd7eceee9fd9.png" alt="image-20200524163630403" /></p></li><li><p>各项配置的解释</p><table><thead><tr><th style="text-align:center">字段</th><th style="text-align:center">简单解释</th><th style="text-align:center">补充说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>Title</code></td><td style="text-align:center">任务名称</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>Address</code></td><td style="text-align:center">监控地址</td><td style="text-align:center">Leancloud 的 <code>Web 主机域名</code>，也就是环境变量的<code>ADMIN_URL</code></td></tr><tr><td style="text-align:center"><code>Schedule</code></td><td style="text-align:center">任务周期</td><td style="text-align:center">分别为每 X 分钟执行、每天 H:MM 执行、每月 DD 日 HH:MM 执行、自定义</td></tr><tr><td style="text-align:center"><code>Notifications</code></td><td style="text-align:center">提醒通知</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>Save responses</code></td><td style="text-align:center">保存日志</td><td style="text-align:center"></td></tr></tbody></table></li><li><p>配置示例</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/24/c0a1b9cf1a254e624cb8adb0be2581e1.png" alt="" /></p><p>关于自定义时间，你勾哪个就会在哪个时间段执行。例如五个框里你全选了，那么会每分钟都会执行。因此请各位博主自己想好需要在哪个时间段唤醒，而不是<mark>无脑复制</mark>。</p><blockquote><p>点下第一个，在按住<code>shift</code>点最后一个，会全选所有哦！另外<code>ctrl</code>可以多选</p></blockquote></li></ol><h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><ol><li><p>修改频率（时间）</p><p>修改<code>.github/workflows/autoWakeup.yml</code>文件中的<code>cron</code>表达式即可。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/19/0b1cc831b7f0fb7779c11bb29288da98.png" alt="" /></p></li><li><p>后台地址会不会暴露</p><p>不会的</p></li><li><p>没有效果</p><p>请确保你的第五步成功添加了网址，如果没有添加也会定时执行 actions 的动作而不会报错。可以在详情里查看是否监控的你的地址。正常情况下会如下图所以，多个网址会依次排列。如果没有填写网址则会默认访问作者的博客。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/15/a240386ca356e2b2a5534b4db40531ec.png" alt="image-20200515211712029" /></p></li><li><p>每次都会 commit，太多了。</p><p>其实可以每天只运行一次，然后其他时间还是依靠定时函数来完成。例如我将 actions 的时间修改为每天早上 8:00 运行一次。而其他时间通过定时函数唤醒。这样<strong>理论上</strong>也是没问题的。</p><blockquote><p>Actions 的时间是按 UTC 时间计算的，因此设置时请手动将时间换算成 UTC 时间哦！</p></blockquote></li></ol><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>既然用上了 valine，那么我想再次安利下我魔改的 valine-admin 哦！</p><p>项目地址：<a href="https://github.com/sviptzk/Valine-Admin-Server">https://github.com/sviptzk/Valine-Admin-Server</a></p><p>教程地址：<a href="https://www.antmoe.com/posts/2380732b/index.html">https://www.antmoe.com/posts/2380732b/index.html</a></p><p>相较于原版的优势如下:</p><div class="checkbox green"><input type="radio" checked="checked"><p>微信提醒（基于方糖公众号）</p></div><div class="checkbox green"><input type="radio" checked="checked"><p>QQ提醒（基于QMSG）</p></div><div class="checkbox green"><input type="radio" checked="checked"><p>一套很漂亮的邮件模板（基于🎉梨花町の肾兄さん🎉的魔改）</p></div><div class="checkbox green"><input type="radio" checked="checked"><p>一个漂亮的后台页面（基于懒人大佬）</p></div><div class="checkbox green"><input type="radio" checked="checked"><p>适配国际版的时区问题</p></div><div class="checkbox green"><input type="radio" checked="checked"><p>更多特性正在研发！</p></div><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/js/WithoutLine.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Valine评论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> LeanCloud流控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客之优雅使用阿里iconfont图标</title>
      <link href="/posts/80c43671/"/>
      <url>/posts/80c43671/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><div class="note primary icon"><p>为什么写这篇文章？</p></div><p>Font Awesome 无论是 v4 还是 v5 图标都有一些局限性。因此不少小伙伴想到了使用阿里 iconfont 图标。然而很多小伙伴并不是前端这个专业，可能对使用图标存在一定的问题。</p><p>因此创作这篇水文，帮助小伙伴解决无法引入阿里 iconfont 图标的问题。</p><div class="note primary icon"><p>什么人能够使用？</p></div><p>理论上来说任何主题任何驱动都可以。只要你的网页还是 HTML+CSS。</p><p>引入并不是什么难事，这篇文章只是给小白看的，有相关经验或者大佬可以直接关掉这篇水文了。</p><div class="note primary icon"><p>引入前的准备</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>能够登录阿里iconfont</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>认识汉字及部分单词（content、class等）</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>具备一定的前端知识：了解什么是标签</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>具备一定的前端知识：能够使用开发者工具</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>具备一定的前端知识：能够找到相应的标签</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>具备一定的前端知识：明白css的语法</p></div><div class="note primary icon"><p>其他说明</p></div><p>此教程理论上可以在任意主题（需自己具备一定的能力）使用，此主题只以 butterfly（版本：<span class="inline-tag red">2.3.5</span>）主题为例。</p><h2 id="建立项目"><a class="markdownIt-Anchor" href="#建立项目"></a> 建立项目</h2><p>进入<a href="https://www.iconfont.cn/">阿里 iconfont</a>寻找你想要添加的图标，并且添加到项目。</p><ol><li><p>找到你想添加的图标（如果你不会找，可以直接关掉此文了。）</p><p>将你想要添加的图标点击“添加入库”按钮，也就是图中圈起来的图标。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ffe05d917e7e7f6912471f81d44c3afc.png" alt="" /></p></li><li><p>添加至项目</p><p>点击右上角小购物车图标。这里会看到你刚刚添加的所有图标</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ddc14a937d765841e7f1e87d36ac88d2.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/990c0c665c0bb11570e505ea17d0958d.png" alt="" /></p><p>接下来就是为你的图标创建一个项目，名称随意。创建完成后你将看到如下页面</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b7dadf552b7bf993bf46d5631cd510e2.png" alt="" /></p></li><li><p>生成在线链接</p><p>（font class方式）点击 Font class 按钮然后生成链接。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/31456e515509653eebbf27aae2ce2340.png" alt="" /></p><p>如果使用svg，那么请点击symbol，然后生成链接。</p></li><li><p>查看链接</p><p>点击链接会看到一些 css 代码。将鼠标下拉会看到刚才你添加的样式。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/4f7510d102ef1cccde74eda5af19066d.png" alt="" /></p></li></ol><h2 id="引入字体及样式"><a class="markdownIt-Anchor" href="#引入字体及样式"></a> 引入字体及样式</h2><p>引入字体样式其实就是把刚才的链接引入到博客中，可以直接使用阿里的链接，也可以下载下来。为了方便方便修改，我建议下载下来放到本地。</p><p>同样以 butterfly 主题为例：</p><ol><li><p>下载</p><p>右键另存为即可。路径选择<code>\themes\Butterfly\source\css\</code></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6b3a115689c68c76e253f9026417c581.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/61aa8325e05cf90b7a245eb8208ce487.png" alt="" /></p></li><li><p>引入文件</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f420836b60e215374063cc9d77fe019a.png" alt="image-20200507182051871" /></p></li></ol><blockquote><p>不同主题引入外部 css/js 的方法都不相同，请参考你所使用主题引入外部样式的设置。</p></blockquote><blockquote><p>如果你不想自己创建而是想直接使用博主的，那么可以直接把链接换成：<a href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/iconfont.min.css%E3%80%82">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/iconfont.min.css。</a></p><p>图标库预览：<a href="https://www.antmoe.com/iconfont/">https://www.antmoe.com/iconfont/</a></p></blockquote><ol start="3"><li><p>如果使用svg</p><p>如果使用svg图标，那么需要在css样式表中加入如下样式。如果使用FontClass，那么可以无视这一步</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.icon</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> -0.15em<span class="token punctuation">;</span>  <span class="token property">fill</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="开始使用-iconfont"><a class="markdownIt-Anchor" href="#开始使用-iconfont"></a> 开始使用 iconfont</h2><p>上述步骤全部完成后，那么接下来可以使用小图标了。</p><h3 id="个人信息栏的小图标font字体方式"><a class="markdownIt-Anchor" href="#个人信息栏的小图标font字体方式"></a> 个人信息栏的小图标–font字体方式</h3><p>这里直接写阿里提供的样式即可。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">social</span><span class="token punctuation">:</span>  <span class="token key atrule">iconfont  icon-bilibili</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.bilibili.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6c062002fe38a75d0c034cf21dbd57fb.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/dafc3cbcafa5ac3811aca161e52ffd59.png" alt="" /></p><p>小图标如果你觉得小，可以自行修改。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.icon-bilibili:before</span> <span class="token punctuation">&#123;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"\e600"</span><span class="token punctuation">;</span>  <span class="token comment">/* 修改颜色 */</span>  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>  <span class="token comment">/* 修改大小 */</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样修改会导致所有这个图标的大小都会变动。建议的方式是重新写一个 css，为其添加规则。设置时只需要多加一个 class 即可例如：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.icon-bilibili:before</span> <span class="token punctuation">&#123;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"\e600"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 卡片处小图标 */</span><span class="token selector">.card_icon</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 修改颜色 */</span>  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>  <span class="token comment">/* 修改大小 */</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置时的方法：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">social</span><span class="token punctuation">:</span>  <span class="token key atrule">iconfont  icon-bilibili card_icon</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.bilibili.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="个人信息栏的小图标svg方式"><a class="markdownIt-Anchor" href="#个人信息栏的小图标svg方式"></a> 个人信息栏的小图标–svg方式</h3><p>svg也称多色图标，由于不是通过类名，而是使用了svg标签，因此需要通过脚本的方式动态插入。例如：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".card-info-social-icons"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>    <span class="token string">'&lt;a class="social-icon" href="点击图标后的地址（须完整）" target="_blank">&lt;svg class="icon" aria-hidden="true">&lt;use xlink:href="#icon-xxxx">&lt;/use>&lt;/svg>&lt;/a>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中两个空分别表示地址，例如<code>https://www.antmoe.com</code>,另外一个为图标名，例如<code>#icon-QQ</code>，名字根据你自己库来写，不是随便写的。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/28/a129e0c19478551aecfc33a3c8b62c08.png" alt="image-20200628211324448" /></p><h3 id="标题美化处的修改"><a class="markdownIt-Anchor" href="#标题美化处的修改"></a> 标题美化处的修改</h3><p>butterfly 主题的标题标签前有一个图标，如何为其更改为阿里 iconfont 呢？</p><p>通过开发者工具我们可以看到主题为前边小图标的样式：</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b85e949eb81ec018a03746be1bf41007.png" alt="" /></p><p>因此我们改动起来也很简单，只需要在刚才我们的<code>iconfont.css</code>文件中覆盖这个样式即可。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#article-container h1:before,#article-container h2:before,#article-container h3:before,#article-container h4:before,#article-container h5:before,#article-container h6:before</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"iconfont"</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"\e6a0"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时就能看到图标已经发生了变化。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f4993de6d089f3232aad38ea1bcd8f1f.png" alt="" /></p><blockquote><p>这里解释下代码，方便大家自行决策如何修改。</p><p><code>font-family</code>是必须写的，因为作者的代码只写了 FontAwesome，因此需要覆盖他。</p><p><code>content</code>可以不在 css 中写，这样可以在配置文件里定义内容。如果写了，会导致配置文件的设置失效。颜色设置同理.</p></blockquote><h3 id="其他修改"><a class="markdownIt-Anchor" href="#其他修改"></a> 其他修改</h3><p>不管是什么主题,不管是什么样式.只要你想使用阿里的图标,必须改变其标签的字体为<code>iconfont</code>,接下来可以用伪类方式,也可以使用 class 方式。</p><p>文章中使用svg也很简单，首先需要确保全局引用了js。如果没有，在文中局部引入也是可以的。</p><p>接下来只需要在需要的地方插入svg标签即可。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#icon-xxx<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>如果你遇到了如下问题,请向上查找解决方案.</p><ol><li><p>修改图标大小及颜色</p></li><li><p>图标不显示(无效果)</p><p>这种原因很多种,但如果你稍有常识就不会遇到.</p></li><li><p>不知道在哪改</p><p>在你创建的 css 文件中.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅魔改系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 阿里iconfont </tag>
            
            <tag> 主题魔改 </tag>
            
            <tag> 优雅魔改系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客之butterfly主题优雅魔改系列</title>
      <link href="/posts/a811d614/"/>
      <url>/posts/a811d614/</url>
      
        <content type="html"><![CDATA[<h2 id="前置说明"><a class="markdownIt-Anchor" href="#前置说明"></a> 前置说明</h2><div class="note success icon flat"><p>魔改亮点</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>🆙主题可升级：不改动主题源码。即便魔改，也不需要为升级主题而烦恼。</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>🍳简单快速：简单上手，快速修改。</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>🍭看我72变：多种背景随意更换。</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>📕优雅阅读：对卡片进行不同的透明度设置，实现更优雅的阅读。</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>👦个性友联：为你的好友设置不同的颜色</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>🎈页脚更炫酷：彩色渐变footer喜欢么？</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>🍟更多优点等你发现</p></div><br /><div class="note danger icon flat"><p>为什么写这篇文章?</p></div><p>相信在这之前，大家肯定看过网上的各种魔改教程。但是这些魔改教程基本上千篇一律，都是一种方式，大量修改模板（主题源文件）。这种方式的好处就是简单快速且直接，缺点就是每次升级😏，不用我说了吧。除非你不打算在升级。</p><p>但是对于一个热爱升级的我来说，我怎么可以这样。于是乎我便写了这篇文章。按照此教程进行的魔改，大部分都是通过引入新的js文件和css文件实现的。这意味着再也不用因为升级而再次魔改而苦恼了😄。同样的缺点也还是有的，引入新文件必定导致页面加载速度下降，下降多少取决于访客网速、电脑配置及服务器的带宽。具体速度可以参考本博客。</p><p>此博客环境：<span class="inline-tag grey">Vercel</span> + <span class="inline-tag red">Jsdeliver</span>+ <span class="inline-tag red">Butterfly最新版</span></p><blockquote><p>这篇文章所有修改没有改动pug模板。全都是添加css文件或页面引入JS脚本方式实现。</p><p>至此（<span class="inline-tag blue">2021-04-06</span>）没有任何一项修改pug代码。</p></blockquote><h2 id="如何引入自定义的cssjs文件"><a class="markdownIt-Anchor" href="#如何引入自定义的cssjs文件"></a> 如何引入自定义的CSS/JS文件</h2><p>通过主题配置<code>inject</code>可以引入外部的自定义CSS文件和JS文件。例如：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3000/css/index.min.css"<span class="token punctuation">></span>  <span class="token key atrule">bottom</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;script src="http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3000/css/index.min.js"<span class="token punctuation">></span>&lt;/script<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="快速复制"><a class="markdownIt-Anchor" href="#快速复制"></a> 快速“复制”</h2><p>不想动手，就想得到<a href="https://www.antmoe.com/">小康</a>。😏可以直接使用作者自用的css。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="https<span class="token punctuation">:</span>//cdn.jsdelivr.net/npm/static<span class="token punctuation">-</span>butterfly/dist/css/index.min.css"<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picgo/2021/04/06/20210406192106.png" alt="image-20210406192106257" /></p><h2 id="自定义魔改"><a class="markdownIt-Anchor" href="#自定义魔改"></a> 自定义魔改</h2><p>如果你不想直接使用我的魔改，你想要修改某些东西，例如卡片透明度，那么你不必修改压缩过的css，而是应该到<a href="https://gitlab.com/DreamyTZK/static-butterfly">static-butterfly</a>仓库下载源代码，按照<code>./src/css/config.less</code>中的文件进行自定义配置。</p><pre class="line-numbers language-less" data-language="less"><code class="language-less"><span class="token comment">/* * @description: 变量控制相关 * @author: 小康 * @url: https://xiaokang.me * @Date: 2021-01-03 11:07:55 * @LastEditTime: 2021-03-18 15:43:56 * @LastEditors: 小康 */</span><span class="token comment">// 主题夜间模式及白天模式配色</span><span class="token selector">#content-inner</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 白天模式下 卡片背景色</span>  <span class="token property">--light_bg_color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.6<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 夜间模式下 卡片背景色</span>  <span class="token property">--dark_bg_color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>18<span class="token punctuation">,</span> 18<span class="token punctuation">,</span> 18<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 白天模式下 页面背景色</span>  <span class="token property">--light_page_color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 夜间模式下 页面背景色</span>  <span class="token property">--dark_page_color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>18<span class="token punctuation">,</span> 18<span class="token punctuation">,</span> 18<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 代码字体</span><span class="token variable">@codefont<span class="token punctuation">:</span></span> <span class="token string">'https://cdn.jsdelivr.net/npm/kang-static/Hexo/font/woff2/JetBrainsMono-Medium.woff2'</span><span class="token punctuation">;</span><span class="token comment">// 鼠标默认样式</span><span class="token variable">@pointer_default<span class="token punctuation">:</span></span> <span class="token string">'https://cdn.jsdelivr.net/npm/kang-static/Hexo/img/default.cur'</span><span class="token punctuation">;</span><span class="token comment">// 指针点击样式</span><span class="token variable">@pointer_pointer<span class="token punctuation">:</span></span> <span class="token string">'https://cdn.jsdelivr.net/npm/kang-static/Hexo/img/pointer.cur'</span><span class="token punctuation">;</span><span class="token comment">// 个人信息卡片鼠标悬停是否显示烟花</span><span class="token variable">@avatarHover<span class="token punctuation">:</span></span> true<span class="token punctuation">;</span><span class="token comment">// 页脚渐变 不透明时为半透明状态，如需更改请自行到 footer.less进行调整</span><span class="token variable">@footerGradient<span class="token punctuation">:</span></span> false<span class="token punctuation">;</span><span class="token comment">// 双栏布局</span><span class="token variable">@layout<span class="token punctuation">:</span></span> false<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改你想要自定义的配置项，只需要修改配置中的对应字段即可（上面代码可能不全，以实际文件为准）。然后在<strong>根目录下</strong>运行如下命令进行构建即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i<span class="token function">npm</span> run build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>生成的<code>index.min.css</code>文件即为最终的魔改样式。将其放入你的cdn或者本地引入即可。</p><h2 id="哔哔相关"><a class="markdownIt-Anchor" href="#哔哔相关"></a> 哔哔相关</h2><h3 id="哔哔页面"><a class="markdownIt-Anchor" href="#哔哔页面"></a> 哔哔页面</h3><p><img src="https://file.acs.pw/picgo/2021/04/06/20210406192846.png" alt="image-20210406192846443" /></p><p>此页面的修改方式参考：<a href="https://www.antmoe.com/posts/7ec820ee/">https://www.antmoe.com/posts/7ec820ee/</a></p><h3 id="首页显示哔哔"><a class="markdownIt-Anchor" href="#首页显示哔哔"></a> 首页显示哔哔</h3><p><img src="https://file.acs.pw/picgo/2021/04/06/20210406192944.png" alt="image-20210406192943997" /></p><p>此页面的修改方式参考：<a href="https://www.antmoe.com/posts/7ec820ee/#%E6%B7%BB%E5%8A%A0%E9%A6%96%E9%A1%B5%E8%BD%AE%E6%92%AD">https://www.antmoe.com/posts/7ec820ee/#添加首页轮播</a></p><h2 id="扩展标签"><a class="markdownIt-Anchor" href="#扩展标签"></a> 扩展标签</h2><p>参考地址：<a href="https://www.antmoe.com/posts/3b43914f/">小康的 butterfly 主题使用文档</a> 此文档中包含butterfly主题内置及扩展的标签。</p><p>扩展标签下载地址：<a href="https://tzk.lanzous.com/b06m0pbmh">https://tzk.lanzous.com/b06m0pbmh</a></p><p>将下载的扩展标签文件解压到*\themes\Butterfly\scripts\tag*路径即可。<code>butterfly3.7.5</code>是这个路径，如果你没有看到类似的文件或文件夹则说明你当前使用的版本不是此路径，请自行寻找其相关路径。</p><p><img src="https://file.acs.pw/picgo/2021/04/06/20210406201052.png" alt="image-20210406201052341" /></p><blockquote><p>关于样式：<a href="https://gitlab.com/DreamyTZK/static-butterfly">static-butterfly</a>项目中包含相关样式。</p></blockquote><h2 id="友链魔改"><a class="markdownIt-Anchor" href="#友链魔改"></a> 友链魔改</h2><p>友链魔改参考<a href="https://www.yuque.com/kdoc/bf/friend">butterfly-friend食用文档</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅魔改系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 主题魔改 </tag>
            
            <tag> 优雅魔改系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客之butterfly主题优雅更换背景</title>
      <link href="/posts/7198453/"/>
      <url>/posts/7198453/</url>
      
        <content type="html"><![CDATA[<h2 id="选择如何修改"><a class="markdownIt-Anchor" href="#选择如何修改"></a> 选择如何修改</h2><p>对于如何修改背景，我目前想到的方案有三种。</p><ol><li><p>直接修改源文件</p><p>也就是直接修改主题目录下的<code>index.sty</code>文件，这种方式简单直接。唯一的不足就是每次更新主题需要重新修改。</p></li><li><p>引入一个新的<code>css</code>文件</p><p>这个是我比较推荐的做法，毕竟”魔改一时爽，一直魔改一直爽“。</p></li><li><p>使用<code>js</code>文件</p><p>最不推荐的做法，这种做法会在一定程度上延缓网页加载的时间，并且修改方式较为复杂。</p><p>至于为什么，请自行科普html是如何渲染。</p></li></ol><h2 id="如何选择"><a class="markdownIt-Anchor" href="#如何选择"></a> 如何选择</h2><p>对于上述三种方法，我选择第二种，理由与不足如下：</p><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>方式比较优雅。</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>相比第一种不会因为主题更新而再次修改</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>引入css文件在渲染时不会切换引擎</p></div><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>引入新的文件，会造成页面多一次的请求</p></div><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>覆盖方式可能会需要加!important</p></div><h2 id="创建层叠样式表"><a class="markdownIt-Anchor" href="#创建层叠样式表"></a> 创建层叠样式表</h2><p>这里以第二个方式，css文件建立的方式有两种。</p><p>博主的butterfly主题为：<span class="inline-tag red">2.3.0</span></p><p>在任意位置创建一个css文件，例如<code>background.css</code>。（简单来说，就是创建一个txt文件，把名字改为background.css即可。注意扩展名）</p><ol><li><p>打开这个css文件，开始编辑</p><p>butterfly主题的背景div的id为<code>web_bg</code>，因此我们只需要重新定义这个样式即可。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改为图片</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 背景图像的地址（url括号里）  */</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>  <span class="token comment">/* 背景图像不重复 */</span>  <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>  <span class="token comment">/* 背景图像大小 */</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于background更多用法：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background">https://developer.mozilla.org/zh-CN/docs/Web/CSS/background</a></p><p>关于background-repeat更多用法：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-repeat">https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-repeat</a></p><p>关于 background-size更多用法：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size">https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size</a></p></li><li><p>修改为渐变背景</p><p>例如蓝红色渐变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* webkit内核 5.1 - 6.0 */</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> red<span class="token punctuation">,</span> blue<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* Opera 11.1 - 12.0 */</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-o-linear-gradient</span><span class="token punctuation">(</span>right<span class="token punctuation">,</span> red<span class="token punctuation">,</span> blue<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* Firefox 3.6 - 15 */</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>right<span class="token punctuation">,</span> red<span class="token punctuation">,</span> blue<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* 标准的语法 */</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> red<span class="token punctuation">,</span> blue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>纯色背景</p><p>纯色背景可以直接在配置文件修改，因此可以直接修改配置文件。</p></li></ol><h2 id="引入文件"><a class="markdownIt-Anchor" href="#引入文件"></a> 引入文件</h2><p>引入文件的方式有两种：以相对路径的方式引入和以外链的方式引入。如何选择请各位博主自己斟酌。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" alt="19-小康博客" /></p><h3 id="以相对路径引入"><a class="markdownIt-Anchor" href="#以相对路径引入"></a> 以相对路径引入</h3><ol><li><p>将写好的css文件移动到<code>\Butterfly\source\css\</code>目录下。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/02/b7df18ccd434ebe4212a2ff0f80a90b9.png" alt="" /></p></li><li><p>然后修改配置文件的引入方式</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/02/b3201d47f91b07803093d4c8ed0f70fb.png" alt="" /></p></li></ol><h3 id="以外链的方式引入"><a class="markdownIt-Anchor" href="#以外链的方式引入"></a> 以外链的方式引入</h3><p>同样的可以将这个文件上传到cdn，如七牛云、又拍云、GitHub+Jsdeliver等。</p><p>只需要将引入地址写为你的文件外链地址即可。</p><p>例如我的jsd链接<img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/02/b9b8e90fb8d17e095d0f2251f1eb54b4.png" alt="" /></p><h2 id="修改文章页背景及透明度"><a class="markdownIt-Anchor" href="#修改文章页背景及透明度"></a> 修改文章页背景及透明度</h2><p>此项修改主要是修改文章页背后的颜色。默认为白色不透明。</p><p>这里我个人建议使用<code>rgba</code>方式，前边的<code>rgb</code>也就是正常的rgb颜色。最后的<code>a</code>代表的是透明度。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 文章页背景 */</span><span class="token selector">.layout>div:first-child:not(.recent-posts)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 以下代表白色透明度为0.3 */</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 所有背景（包括首页卡片、文章页、页面页等） */</span><span class="token selector">#recent-posts>.recent-post-item,.layout>div:first-child:not(.recent-posts),.layout_post>#page,.layout_post>#post,.read-mode .layout_post>#post</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 以下代表白色透明度为0.3 */</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="tab-rgba"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-rgba-1">透明度1</button></li><li class="tab"><button type="button" data-href="#tab-rgba-2">透明度0.5</button></li><li class="tab"><button type="button" data-href="#tab-rgba-3">透明度0</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-rgba-1"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.layout>div:first-child:not(.recent-posts)</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/02/6ce37ebba67409f57c380d21506ce737.png" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-rgba-2"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.layout>div:first-child:not(.recent-posts)</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/02/a74e60bf98c3d99ab7a8f7a91aabb82e.png" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-rgba-3"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.layout>div:first-child:not(.recent-posts)</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/02/f1cd84bc8293e96e98c40f558df182a1.png" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>如果文章样式失效则说明主题进行了更新，那么建议你在<a href="https://gitlab.com/DreamyTZK/static-butterfly">static-butterfly</a>寻找相关写法。</p></blockquote><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><p>这里主要给出一个写修改的参考样式。样式效果请在<a href="https://www.antmoe.com/background">背景测试</a>页面进行测试。</p><p>下边只是部分示例，更多背景可在<a href="https://www.antmoe.com/background">背景测试</a>页面通过审查元素获取。</p><ol><li><p>博主同款渐变背景(参考本文图片)</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>    0deg<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>247<span class="token punctuation">,</span> 149<span class="token punctuation">,</span> 51<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 0<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>243<span class="token punctuation">,</span> 112<span class="token punctuation">,</span> 85<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 15%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 78<span class="token punctuation">,</span> 123<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 30%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>161<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 171<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 44%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>80<span class="token punctuation">,</span> 115<span class="token punctuation">,</span> 184<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 58%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>16<span class="token punctuation">,</span> 152<span class="token punctuation">,</span> 173<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 72%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>7<span class="token punctuation">,</span> 179<span class="token punctuation">,</span> 155<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 86%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>109<span class="token punctuation">,</span> 186<span class="token punctuation">,</span> 130<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 100%  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>    0deg<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>247<span class="token punctuation">,</span> 149<span class="token punctuation">,</span> 51<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 0<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>243<span class="token punctuation">,</span> 112<span class="token punctuation">,</span> 85<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 15%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 78<span class="token punctuation">,</span> 123<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 30%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>161<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 171<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 44%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>80<span class="token punctuation">,</span> 115<span class="token punctuation">,</span> 184<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 58%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>16<span class="token punctuation">,</span> 152<span class="token punctuation">,</span> 173<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 72%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>7<span class="token punctuation">,</span> 179<span class="token punctuation">,</span> 155<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 86%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>109<span class="token punctuation">,</span> 186<span class="token punctuation">,</span> 130<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 100%  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-o-linear-gradient</span><span class="token punctuation">(</span>    0deg<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>247<span class="token punctuation">,</span> 149<span class="token punctuation">,</span> 51<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 0<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>243<span class="token punctuation">,</span> 112<span class="token punctuation">,</span> 85<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 15%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 78<span class="token punctuation">,</span> 123<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 30%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>161<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 171<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 44%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>80<span class="token punctuation">,</span> 115<span class="token punctuation">,</span> 184<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 58%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>16<span class="token punctuation">,</span> 152<span class="token punctuation">,</span> 173<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 72%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>7<span class="token punctuation">,</span> 179<span class="token punctuation">,</span> 155<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 86%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>109<span class="token punctuation">,</span> 186<span class="token punctuation">,</span> 130<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 100%  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-ms-linear-gradient</span><span class="token punctuation">(</span>    0deg<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>247<span class="token punctuation">,</span> 149<span class="token punctuation">,</span> 51<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 0<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>243<span class="token punctuation">,</span> 112<span class="token punctuation">,</span> 85<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 15%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 78<span class="token punctuation">,</span> 123<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 30%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>161<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 171<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 44%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>80<span class="token punctuation">,</span> 115<span class="token punctuation">,</span> 184<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 58%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>16<span class="token punctuation">,</span> 152<span class="token punctuation">,</span> 173<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 72%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>7<span class="token punctuation">,</span> 179<span class="token punctuation">,</span> 155<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 86%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>109<span class="token punctuation">,</span> 186<span class="token punctuation">,</span> 130<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 100%  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>    90deg<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>247<span class="token punctuation">,</span> 149<span class="token punctuation">,</span> 51<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 0<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>243<span class="token punctuation">,</span> 112<span class="token punctuation">,</span> 85<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 15%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 78<span class="token punctuation">,</span> 123<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 30%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>161<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 171<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 44%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>80<span class="token punctuation">,</span> 115<span class="token punctuation">,</span> 184<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 58%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>16<span class="token punctuation">,</span> 152<span class="token punctuation">,</span> 173<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 72%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>7<span class="token punctuation">,</span> 179<span class="token punctuation">,</span> 155<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 86%<span class="token punctuation">,</span>    <span class="token function">rgba</span><span class="token punctuation">(</span>109<span class="token punctuation">,</span> 186<span class="token punctuation">,</span> 130<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span> 100%  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class='bg_test' style="display:inline-block;width: 100%;height:200px; background: linear-gradient(90deg,rgba(247,149,51,.1) 0,rgba(243,112,85,.1) 15%,rgba(239,78,123,.1) 30%,rgba(161,102,171,.1) 44%,rgba(80,115,184,.1) 58%,rgba(16,152,173,.1) 72%,rgba(7,179,155,.1) 86%,rgba(109,186,130,.1) 100%);text-align: center;line-height: 200px;cursor: pointer;">博主同款</div></li><li><p>粉蓝色渐变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 图片可下载上传到自己的图床也可以删掉*/</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>    <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> #6dd0f2 15%<span class="token punctuation">,</span> #f59abe 85%<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>    <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> #6dd0f2 15%<span class="token punctuation">,</span> #f59abe 85%<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>    <span class="token function">-ms-linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> #6dd0f2 15%<span class="token punctuation">,</span> #f59abe 85%<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>    <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> #6dd0f2 15%<span class="token punctuation">,</span> #f59abe 85%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div style="display:inline-block;width: 100%;height:200px;background-image: url(&quot;https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png&quot;),linear-gradient(45deg, #6dd0f2 15%, #f59abe 85%);text-align: center;line-height: 200px;margin-bottom:5px">有图片测试</div><div style="display:inline-block;width: 100%;height:200px;background-image: linear-gradient(45deg, #6dd0f2 15%, #f59abe 85%);text-align: center;line-height: 200px;">无图片测试</div></li><li><p>美美哒渐变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>102.7deg<span class="token punctuation">,</span>#fddaff 8.2%<span class="token punctuation">,</span>#dfadfc 19.6%<span class="token punctuation">,</span>#adcdfc 36.8%<span class="token punctuation">,</span>#adfcf4 73.2%<span class="token punctuation">,</span>#caf8d0 90.9%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div style="display:inline-block;width: 100%;height:200px;background-image: linear-gradient(102.7deg,#fddaff 8.2%,#dfadfc 19.6%,#adcdfc 36.8%,#adfcf4 73.2%,#caf8d0 90.9%);text-align: center;line-height: 200px;">效果预览测试</div></li><li><p>动态渐变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@keyframes</span> gradientBG</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position</span><span class="token punctuation">:</span> 0% 50%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position</span><span class="token punctuation">:</span> 100% 50%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position</span><span class="token punctuation">:</span> 0% 50%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">#web_bg</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>-45deg<span class="token punctuation">,</span> #ee7752<span class="token punctuation">,</span> #e73c7e<span class="token punctuation">,</span> #23a6d5<span class="token punctuation">,</span> #23d5ab<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> 400% 400%<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> gradientBG 15s ease infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class='bg_test' style="display:inline-block;width: 100%;height:200px; background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);    background-size: 400% 400%;animation: gradientBG 15s ease infinite;text-align: center;line-height: 200px;cursor: pointer;">动态渐变</div></li><li><p>紫蓝色渐变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 240<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>92<span class="token punctuation">,</span> 159<span class="token punctuation">,</span> 247<span class="token punctuation">)</span> 40%<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>211<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 255<span class="token punctuation">)</span> 80%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class='bg_test' style="display:inline-block;width: 100%;height:200px; background: linear-gradient(to right bottom, rgb(0, 255, 240), rgb(92, 159, 247) 40%, rgb(211, 34, 255) 80%);text-align: center;line-height: 200px;cursor: pointer;">紫蓝色渐变</div></li><li><p>图片滤镜渐变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#web_bg</span><span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>60deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 165<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span> 5%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 228<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.35<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class='bg_test' style="display:inline-block;width: 100%;height:200px; background: url(https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png), linear-gradient(60deg, rgba(255, 165, 150, 0.5) 5%, rgba(0, 228, 255, 0.35)), url(https://ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg);text-align: center;line-height: 200px;cursor: pointer;">图片滤镜渐变</div></li><li><p>背景图</p><p>参考<a href="/photo/wallpaper/">壁纸</a>页。</p></li><li><p>渐变配色</p><p><a href="https://webgradients.com/">https://webgradients.com/</a><br /><a href="https://www.grabient.com/">https://www.grabient.com/</a></p><p><a href="https://www.baidu.com/s?wd=%E5%9C%A8%E7%BA%BF%E6%B8%90%E5%8F%98%E9%85%8D%E8%89%B2">更多</a>（在线渐变配色的网站还有很多，可以自己去找）</p><p>或者自行扒取别人的配色，或者自己搭配都是可以的。</p></li><li><p>其他</p><p>更多骚操作都可以直接写在这个选择器下。</p></li></ol><h2 id="可能遇到的问题"><a class="markdownIt-Anchor" href="#可能遇到的问题"></a> 可能遇到的问题</h2><ol><li><p>背景不生效</p><ul><li>请确保你能成功引入这个css</li><li>请尝试关闭js动态背景后再次尝试</li><li>请将配置文件的<code>background</code>改为<code>&quot;#efefef&quot;</code></li><li>请确保你写的内容正确且符合css的语法规则</li></ul></li><li><p>其他问题</p><p>请先确保自己拥有一定的前端基础（如果拥有，你是不会遇到问题的）</p><p>学会如何使用百度搜索引擎</p><p>如果以上两种方式还是无法解决你的问题，那么可以在下方留言。<em>留言请附上自己的站点，方便排查问题</em></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅魔改系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 主题魔改 </tag>
            
            <tag> 优雅魔改系列 </tag>
            
            <tag> 更换背景 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo记一次gulp压缩体验</title>
      <link href="/posts/2ec55dc3/"/>
      <url>/posts/2ec55dc3/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>其实呢，这次体验没有理想中好。因为主页的大小只下降了0.7kb。</p><p>对于我的博客来说，我的全部静态文件都在GitHub上，并且使用jsdeliver加速引用。因此对我来说真正压缩的其实也就是html。</p><p>但是考虑到还有coding的持续集成，因此也要考虑持续集成的环境配置。</p><h2 id="gulpfile配置"><a class="markdownIt-Anchor" href="#gulpfile配置"></a> gulpfile配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g gulp<span class="token function">npm</span> <span class="token function">install</span> gulp --save<span class="token function">npm</span> <span class="token function">install</span> gulp-htmlclean<span class="token function">npm</span> <span class="token function">install</span> gulp-htmlmin<span class="token function">npm</span> <span class="token function">install</span> gulp-clean-css<span class="token function">npm</span> <span class="token function">install</span> gulp-uglify<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入需要的模块</span><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> minifycss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩public目录下所有html文件, minify-html是任务名, 设置为default，启动gulp压缩的时候可以省去任务名</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span> <span class="token comment">// 压缩文件所在的目录</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyURLs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出的目录</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩css</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">minifycss</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            compatibility<span class="token operator">:</span> <span class="token string">'ie8'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩js</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/.js'</span><span class="token punctuation">,</span><span class="token string">'!./public/js/**/*min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 默认任务</span><span class="token comment">/*gulp.task('default', [    'minify-html','minify-html1','minify-css','minify-js','minify-images']);*/</span><span class="token comment">// gulp 4.0 适用的方式</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span><span class="token string">'minify-js'</span> <span class="token comment">//build the website</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="coding持续集成配置"><a class="markdownIt-Anchor" href="#coding持续集成配置"></a> coding持续集成配置</h2><pre class="line-numbers language-Jenkinsfile" data-language="Jenkinsfile"><code class="language-Jenkinsfile">pipeline &#123;  agent any  stages &#123;    stage(&#39;克隆项目&#39;) &#123;      steps &#123;        sh &#39;git clone 项目地址 .&#39;        sh &#39;ls -a&#39;      &#125;    &#125;    stage(&#39;安装Hexo依赖&#39;) &#123;      steps &#123;        sh &#39;ls -a&#39;        sh &#39;npm install -g hexo-cli&#39;        sh &#39;npm install hexo --save&#39;      &#125;    &#125;stage(&#39;安装gulp依赖&#39;) &#123;      steps &#123;        sh &#39;ls -a&#39;        sh &#39;npm install -g gulp&#39;        sh &#39;npm install gulp --save&#39;        sh &#39;npm install gulp-htmlclean&#39;        sh &#39;npm install gulp-htmlmin&#39;        sh &#39;npm install gulp-clean-css&#39;        sh &#39;npm install gulp-uglify&#39;      &#125;    &#125;    stage(&#39;构建发布&#39;) &#123;      steps &#123;        sh &#39;hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d&#39;      &#125;    &#125;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>虽然效果不明显，且会导致构建时间增加。但我还是使用了，理由很简单。</p><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>能少一点是一点</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>查看源代码时看到密密麻麻的一片比分散的舒服</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>coding的构建是按次数的，并不是按时间算</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>目前coding的政策每周200次，每次30分钟。次数周一重置</p></div><p>综上所述，时间到达三分钟也不会超过30分钟的限制。因此对于持续集成环境多一分钟就多一分钟，反正自己后台慢慢整嘛。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 功能增强 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> gulp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine添加自定义表情</title>
      <link href="/posts/284f2e1c/"/>
      <url>/posts/284f2e1c/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/04/22/f7f45c8da0f8bcba7fb448d155ca5131.png" alt="" /></p><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>自定义表情须知：</p><ul><li><code>valine.js</code>版本需要1.4.5以上</li><li>主题作者已更新主题添加了自定义表情的字段</li><li>如果以上两点任意一点没有满足，需有自己动手满足以上两点的能力</li></ul><h2 id="如何导入表情"><a class="markdownIt-Anchor" href="#如何导入表情"></a> 如何导入表情</h2><p>官方提供的格式是<code>js</code>对象格式，应该作者们应该会保留。因此我提供的格式为：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"图片名"</span><span class="token operator">:</span> <span class="token string">"图片链接"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你使用的主题与我是同款主题，那么只需要将我提供的链接复制并粘贴到<code>valine.json</code>里（注意自己打上一对<code>&#123;&#125;</code>表情信息放括号里）即可。例如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"common_custom_1"</span> <span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/19/c3164053d300cc5cca5e4dc3311842dc.png"</span><span class="token punctuation">,</span>    <span class="token property">"common_custom_0"</span> <span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/19/6b5e768e524c8441ba66184bfdd86d4d.png"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="表情说明"><a class="markdownIt-Anchor" href="#表情说明"></a> 表情说明</h2><p>表情速查地址：<a href="https://emotion.xiaokang.me/#/">https://emotion.xiaokang.me/</a></p><p>表情仓库：<a href="https://github.com/Dreamy-TZK/iemotion-pic">https://github.com/Dreamy-TZK/iemotion-pic</a></p><p>所有图片均来自网友提供，或者网上收集。如有侵权，立即删除。</p><p>同时支持网友提供。在此留言或者发送到我的邮箱即可。</p><p>邮箱：dreamytzk@outlook.com</p><blockquote><p>如果为表情包：请提供表情包的名字，即分类显示的名字。</p><p>如果为单张图片：请提供链接获取图片文件。</p></blockquote><h3 id="关于更新表情"><a class="markdownIt-Anchor" href="#关于更新表情"></a> 关于更新表情</h3><p>随缘。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/04/22/ec3edbfe84684fdb1680307d261c3c7b.png" alt="代码给你，你来写-小康博客" /></p><h3 id="关于表情"><a class="markdownIt-Anchor" href="#关于表情"></a> 关于表情</h3><p>除<strong>自定义</strong>分类之外，所有表情均存储在GitHub仓库，采用<code>jsdeliver</code>方式调用。</p><p>自定义分类表情不固定，采用图床进行存储，因此可能会存在jsd、ali、sina等多种链接。</p><p>表情速查分为五个标签。</p><ul><li><p>常用表情</p><p>自己认为当前分类比较常用的表情会放到这个标签卡，方便快速查找（接受建议哦！）</p></li><li><p>全部表情</p><p>此表情指的是当前分类下的所有表情</p></li><li><p>标签分类</p><p>顾名思义，就是选择不同分类</p></li><li><p>复制全部</p><p>即可以直接复制可以在valine里使用的格式。链接为 全部表情 标签卡的表情</p></li><li><p>复制常用</p><p>即可以直接复制可以在valine里使用的格式。链接为 常用表情 标签卡的表情</p></li></ul><h3 id="关于复制"><a class="markdownIt-Anchor" href="#关于复制"></a> 关于复制</h3><p>名字（键）生成规则：</p><ul><li><p>自定义分类</p><p>全部为：<code>custom_</code>+编号。其中编号是按添加的时间顺序排序的。因此可以避免键对应值更换的问题。</p><p>常用：<code>common_custom_</code>+编号。</p></li><li><p>其他分类</p><p><code>标签名_</code>+图片名。</p></li></ul><p>链接（值）生成规则：</p><p>全部数据库取值。因此自定义分类可能会出现重复图片。</p><h2 id="更新日志"><a class="markdownIt-Anchor" href="#更新日志"></a> 更新日志</h2><ul><li><p>2020.04.23</p><p>更新日志更换：<a href="https://share.mubu.com/doc/11c1_vOu23F">https://share.mubu.com/doc/11c1_vOu23F</a></p></li><li><p>2020.04.22</p><p>完善表情生成键值对时确保唯一性的的规则。</p><p>添加三款表情——QQ恶搞系列、猥琐萌系列、svip黄脸系列</p><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fa fa-caret-right fa-fw"></i><span>图片</span></div>    <div class="hide-content"><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/04/22/54e9cd5136bc690db5f7a000fbbbbbd4.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/04/22/b607be5507d0f3eef7117f3e24784d2c.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/04/22/404ae5f87766151a372134682423e269.png" alt="" /></p></div></div></li><li><p>2020.04.21</p><p>完成基础功能，表情获取、链接生成等。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 评论系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> valine表情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo关于Butterfly的一些小修改</title>
      <link href="/posts/1dc865d0/"/>
      <url>/posts/1dc865d0/</url>
      
        <content type="html"><![CDATA[<p>源本页已更换地址：<a href="https://www.antmoe.com/posts/a811d614/index.html">https://www.antmoe.com/posts/a811d614/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 功能增强 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 主题魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建Hexo博客</title>
      <link href="/posts/4b1b8c9f/"/>
      <url>/posts/4b1b8c9f/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>写此篇文章的初衷就是当一个完全不懂的小白可以看着此篇教程后就可以完成自己的Hexo博客搭建。</p><p>这篇文章分为三部分：</p><p>第一部分：安装环境</p><p>第二部分：安装Hexo</p><p>第三部分：部署到Github或者Coding或者码云</p><h2 id="安装环境"><a class="markdownIt-Anchor" href="#安装环境"></a> 安装环境</h2><h3 id="安装nodejs与git"><a class="markdownIt-Anchor" href="#安装nodejs与git"></a> 安装node.js与git</h3><p>这里的安装环境主要指的是<a href="https://git-scm.com/">Git</a>与<a href="https://nodejs.org/zh-cn/download/">Node.js</a>环境，因此我们的后续操作都是建立在了这两个的基础上。</p><p>安装下载非常简单，遇到不懂的点下一步即可。但是需要注意的是添加完成后需要添加环境变量，一般情况下它会默认帮你添加上，如果没有添加也不需要担心，我们手动添加即可。</p><ul><li><p>检查是否正确安装</p><p>打开cmd，输入<code>node -v</code>与<code>git --version</code>，如果能输出信息则表示成功。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/8c33331e2a1b3f986e7f193464bdf0be.png" alt="" /></p></li><li><p>手动配置环境变量</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/de178507ab6f40c453586f4c727b9eb2.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ec610253e0235a0e916d503a8d54e6be.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/02baf31d43c69871d1d5558373cc386b.png" alt="" /></p><p>选择Path，然后点击编辑。然后将你的安装目录写在里边即可，如果两个都没有则需要写两个目录（git与node）直到可以使用git与node为止。</p></li></ul><h2 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装Hexo</h2><blockquote><p>这里首先说明下，npm的仓库在国外，这就意味着下载可能非常慢，或者不可以下载。因此我的解决方案是用淘宝的镜像源替代。<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">更多</a></p><p>替代方案很简单只需要在命令行输入<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>即可，然后每次需要使用<code>npm</code>命令时，将<code>npm</code>换成<code>cnpm</code>即可。</p><p><em>我这里使用以上解决方案，因为实在是慢</em></p></blockquote><p>以上内容非必须，你完全可以不适用淘宝的镜像源，而使用官方的下载方式。即将本教程的<code>cnpm xxxx</code>命令换成<code>npm xxxx</code>即可。</p><ol><li><p>安装Hexo</p><p><code>cnpm install -g hexo-cli</code></p><p>安装完成后依旧使用<code>hexo -v</code>查看以下版本号。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/fe18b109d0fb0ce72ce44118d02a2d6a.png" alt="" /></p></li><li><p>初始化一个Hexo博客</p><p>在任意位置创建一个文件夹，你的博客将出现在这个文件夹。</p><p>然后我们用命令行进入这个文件夹。<em>如果你是Windows用户，可以使用shift+鼠标右键，然后选择PowerShell。快速进入这个文件夹哦</em></p><p>输入命令<code>hexo init .</code>，然后程序会自动克隆一个Hexo项目到你当前目录。克隆过程中可能速度稍慢，可需要耐心等一会儿。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/34c28c2b7272a2a295c31d6ac16cf8e1.png" alt="" /></p><p>看到这样的结果，那就说明已经初始化完成了一个Hexo博客。</p></li><li><p>查看Hexo博客</p><p>Hexo博客是自带服务器的，所以我们可以通过<code>hexo s</code>命令查看</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/14cdb4c8ee2692f15621b79049791cc8.png" alt="" /></p><p>看到图片上的提示那么此时打开浏览器输入http://127.0.0.1:4000即可查看到博客。</p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/5abb7f605a6b89f4025a2b3ac4f57c4d.png" style="zoom:25%;" /></li><li><p>安装一个主题</p><p>这里我是用sakura主题 <a href="https://github.com/honjun/hexo-theme-sakura">github地址</a>，<a href="https://docs.hojun.cn/sakura/docs/#/home">文档地址</a></p><p>此主题较为特殊，此主题需要将GitHub下载的文件在Hexo根目录解压，如果出现重复覆盖即可。关于此主题的更多内容请参考官方文档。</p><p><strong>如果你没有选择此主题，请注意你所选用的主题是否需要放在themes文件里</strong></p><p>请选择完主题后按照主题官方文档进行配置。</p></li></ol><h2 id="部署发布"><a class="markdownIt-Anchor" href="#部署发布"></a> 部署发布</h2><p>我们使用ssh免密部署。</p><h3 id="创建密钥对"><a class="markdownIt-Anchor" href="#创建密钥对"></a> 创建密钥对</h3><p>为了方便运行GitHub Actions时登录GitHub账号，我们使用SSH方式登录。就是要把设备的私钥交给GitHub Actions，公钥交给GitHub，需要去Settings里去配置。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"Github 的邮箱地址"</span>如 ssh-keygen -t rsa -C <span class="token string">"123123123@gmail.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>密钥对生成后默认的位置是用户文件。以windows为例：密钥对文件在<code>C:\Users\用户名</code>里，其中Users可能因为系统原因显示的是<code>用户</code>。这个文件夹里会有一个<code>.ssh</code>的目录，这个里面就是我们的密钥对。</p><p>其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。</p><ul><li><p>配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：github网站–&gt;Settings–&gt;SSH and GPG keys</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png" alt="" /><br /><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png" alt="" /></p><p>新增一个公钥，然后把<code>id_rsa.pub</code>这个文件用文本文档打开，将内容复制进去。</p></li><li><p>Coding与GitHub类似</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ce053efafc20ce9fd5694f309ef5dd9c.png" alt="" /></p><p>在这里将你的公钥添加进去即可。</p></li></ul><h3 id="配置部署信息"><a class="markdownIt-Anchor" href="#配置部署信息"></a> 配置部署信息</h3><p>登录GitHub或者是coding新建一个仓库，用于公开你的博客信息。</p><p>GitHub请以<code>用户名.github.io</code>命名仓库名，例如我的<code>antmoe.github.io</code></p><p>创建好仓库复制ssh连接。</p><p>填到hexo博客根目录下的<code>_config.yml</code>文件中</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span>     <span class="token key atrule">github</span><span class="token punctuation">:</span> 你的地址    <span class="token key atrule">coding</span><span class="token punctuation">:</span> 你的地址  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后输入命令<code>cnpm install hexo-deployer-git --save</code>，否则无法使用自动部署。</p><p>然后输入命令<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>即可完成部署。</p><p>更多关于hexo高级部署请参考<a href="https://www.antmoe.com/tags/Hexo/">我的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小康博客测试专用文章</title>
      <link href="/posts/80526a9f/"/>
      <url>/posts/80526a9f/</url>
      
        <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js"></script><div class="is-container"><img src='https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.9/butterfly/img/loading.gif' /></div><a class="btn-beautify button--animated  left larger prev" href="#" title="上一页" style='display:none;'><i class="far fa-hand-point-left fa-fw "></i> 上一页 </a><p><span class="inline-tag grey page" style="position: absolute;transform: translateX(-50%);left: 50%;">页码</span></p><p><a class="btn-beautify button--animated larger next" href="#" title="下一页" style="float: right;display: none;"><i class="far fa-hand-point-right fa-fw "></i> 下一页 </a></p><script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script><script>$(document).ready(function(){function e(e,t,o){return $.ajax({url:"https://gitee.com/api/v5/repos/"+t+"/"+o+"/issues?state=open&sort=created&direction=desc&page="+e+"&per_page="+l+"&creator=antmoe",type:"get",complete:function(e,t){u=e.getResponseHeader("total_count")},success:function(e,t,o){if(r=[],u=o.getResponseHeader("total_count"),i=Math.ceil(u/l),e)for(let t in e){var c={};c.body=n(e[t].body),c.labels=s(e[t].labels),c.updated_at=a(e[t].updated_at),c.html_url=e[t].html_url,r.push(c)}}})}function t(){let e="";for(let t in r)e+=`<div class="is-issue" style="transform-origin: center top;"><div class="is-issue-content">\n                <div class="is-issue-header"><a href="${r[t].html_url}" target="_blank"><span class="is-issue-username">XiaoKang🦄</span></a><span\n                        class="is-verified-badge"><svg class="is-badge" viewBox="0 0 512 512"\n                            xmlns="http://www.w3.org/2000/svg">\n                            <path\n                                d="m512 268c0 17.9-4.3 34.5-12.9 49.7s-20.1 27.1-34.6 35.4c.4 2.7.6 6.9.6 12.6 0 27.1-9.1 50.1-27.1 69.1-18.1 19.1-39.9 28.6-65.4 28.6-11.4 0-22.3-2.1-32.6-6.3-8 16.4-19.5 29.6-34.6 39.7-15 10.2-31.5 15.2-49.4 15.2-18.3 0-34.9-4.9-49.7-14.9-14.9-9.9-26.3-23.2-34.3-40-10.3 4.2-21.1 6.3-32.6 6.3-25.5 0-47.4-9.5-65.7-28.6-18.3-19-27.4-42.1-27.4-69.1 0-3 .4-7.2 1.1-12.6-14.5-8.4-26-20.2-34.6-35.4-8.5-15.2-12.8-31.8-12.8-49.7 0-19 4.8-36.5 14.3-52.3s22.3-27.5 38.3-35.1c-4.2-11.4-6.3-22.9-6.3-34.3 0-27 9.1-50.1 27.4-69.1s40.2-28.6 65.7-28.6c11.4 0 22.3 2.1 32.6 6.3 8-16.4 19.5-29.6 34.6-39.7 15-10.1 31.5-15.2 49.4-15.2s34.4 5.1 49.4 15.1c15 10.1 26.6 23.3 34.6 39.7 10.3-4.2 21.1-6.3 32.6-6.3 25.5 0 47.3 9.5 65.4 28.6s27.1 42.1 27.1 69.1c0 12.6-1.9 24-5.7 34.3 16 7.6 28.8 19.3 38.3 35.1 9.5 15.9 14.3 33.4 14.3 52.4zm-266.9 77.1 105.7-158.3c2.7-4.2 3.5-8.8 2.6-13.7-1-4.9-3.5-8.8-7.7-11.4-4.2-2.7-8.8-3.6-13.7-2.9-5 .8-9 3.2-12 7.4l-93.1 140-42.9-42.8c-3.8-3.8-8.2-5.6-13.1-5.4-5 .2-9.3 2-13.1 5.4-3.4 3.4-5.1 7.7-5.1 12.9 0 5.1 1.7 9.4 5.1 12.9l58.9 58.9 2.9 2.3c3.4 2.3 6.9 3.4 10.3 3.4 6.7-.1 11.8-2.9 15.2-8.7z"\n                                fill="#1da1f2"></path>\n                        </svg></span><span class="is-issue-text">·</span><span class="is-issue-date">${r[t].updated_at}</span><span class="is-issue-label"\n                        style="background-color: ${r[t].labels.color}; color: #f6f8fa;">${r[t].labels.name}</span></div>\n                <div class="is-issue-body markdown-body">\n                    ${r[t].body}\n                </div>\n            </div></div>`;$(".is-container").html(e),$(".page").text(o+" / "+i),1!=u&&1==o?$(".next").show():o==i&&1!=o?$(".next").hide():o<u&&$(".next").show(),o>1?$(".prev").show():$(".prev").hide()}function s(e){var t={name:"XiaoKang",color:"#ffc107"};return e.length&&(t.name=e[0].name,t.color="#"+e[0].color),t}function n(e){return marked(e)}function a(e){var t=new Date(e);return t.format("yyyy-MM-dd hh:mm:ss")}var r=[],o=1,i=1,l=3,c="antmoe",p="speak",u=0;$("body").append('<meta name="referrer" content="no-referrer" />'),e(o,c,p).then(()=>t()),$(".prev").click(function(s){s.preventDefault(),o-=1,e(o,c,p).then(()=>t())}),$(".next").click(function(s){s.preventDefault(),o+=1,e(o,c,p).then(()=>t())}),Date.prototype.format=function(e){var t={"M+":this.getMonth()+1,"d+":this.getDate(),"h+":this.getHours(),"m+":this.getMinutes(),"s+":this.getSeconds(),"q+":Math.floor((this.getMonth()+3)/3),S:this.getMilliseconds()};for(var s in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(this.getFullYear()+"").substr(4-RegExp.$1.length))),t)new RegExp("("+s+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?t[s]:("00"+t[s]).substr((""+t[s]).length)));return e}});</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云自媒体申请</title>
      <link href="/posts/d091c99b/"/>
      <url>/posts/d091c99b/</url>
      
        <content type="html"><![CDATA[<p>为什么入住腾讯云自媒体呢？其实是有这样几个好处的：</p><ol><li><p>各大技术社区及平台百万级流量推广</p><p>用官方的话就是这样说的，其实我个人感觉是不错的。前几天搜啥都能搜到腾讯这个，自认为腾讯seo做的还是不错的。</p></li><li><p>价值 30 / 100 / 180 元的云服务器资源</p><p>这个是在三个中随机给一个，我命中的是180元代金券哦！</p></li><li><p>域名服务一年使用权</p><p>想都不要想，肯定是cn后缀</p></li><li><p>技术书籍</p><p>这个没听说会给，但是会给公仔。</p></li><li><p>同步内容</p><p>听说腾讯会自动同步博客内容到腾讯云自媒体哦。也就是你完全可以不用在去腾讯云在发表一次了，他们会帮你完成发表，这样就能有更高的曝光率啦！</p></li><li><p>等等</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/04/1d33c0e710a2f79d873096112badbadd.png" alt="" /></p></li></ol><p>所以总结下就是我们的到的好处就是：0~2个月的免费服务器（代金券）+一年免费域名（<code>cn</code>后缀）+福利周边+后期可能会有惊喜·····</p><p>这样还不心动？<a style='color: #FFF;' href="https://cloud.tencent.com/developer/support-plan?invite_code=2npd39udr6kgg" class="button button-primary button-pill button-small">点击申请</a></p><div class="fj-gallery"><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/12/082677cd5d78d1c2fb2cc2c4c69479ea.png" alt="第一次入伙的小企鹅" /></p><p><img src="https://tva1.sinaimg.cn/large/005B3XPgly1gg6l3n9zi7j32c0340e84.jpg" alt="2020年端午节的粽子" /></p><p><img src="https://tva1.sinaimg.cn/large/005B3XPgly1gg6l3n97qqj32c0340hdw.jpg" alt="2020年端午节的粽子" /></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 优雅写作 </category>
          
          <category> 同步发表 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo利用coding持续集成实现双部署</title>
      <link href="/posts/1704d83c/"/>
      <url>/posts/1704d83c/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>最近这一段时间一直使用的是GitHub+Actions实现双部署。因为已经了解到了coding是有访问认证的。但一直忽略了GitHub可以直接使用Token进行访问认证。</p><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><ol><li><p>获取coding的访问认证</p><p>获取方法可以参考这篇文章<a href="https://www.antmoe.com/posts/51b0fa77/index.html">https://www.antmoe.com/posts/51b0fa77/index.html</a></p></li><li><p>获取GitHub的Token</p><p>关于GitHub的Token介绍与获取请参考<a href="https://help.github.com/articles/creating-an-access-token-for-command-line-use/">Creating a personal access token for the command line</a></p><p>获取后将ssh的链接地址换成https的地址。</p><p>格式为<code>https://你的token@github.com/owner/repo.git</code></p></li><li><p>最后修改hexo的配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/22/20200322223919.png" alt="" /></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git    <span class="token key atrule">repository</span><span class="token punctuation">:</span>      <span class="token key atrule">github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//你的token@github.com/owner/repo      <span class="token key atrule">coding</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//username<span class="token punctuation">:</span>password@e.coding.net/owner/repo    <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<code>baidu_url_submitter</code>与<code>baidu_xz_url_submitter</code>是我安装的百度推送插件。如果你没有安装不必填写。</p><p>coding的<code>username</code>与<code>password</code>并非你的登录账户，而是访问令牌的账户和密码</p></li><li><p>配置文件还是用上次的配置文件即可</p><pre class="line-numbers language-Jenkinsfile" data-language="Jenkinsfile"><code class="language-Jenkinsfile">pipeline &#123;  agent any  stages &#123;    stage(&#39;克隆项目&#39;) &#123;      steps &#123;        sh &#39;git clone https:&#x2F;&#x2F;账号:密码@地址 .&#39;        sh &#39;ls -a&#39;      &#125;    &#125;    stage(&#39;安装依赖&#39;) &#123;      steps &#123;        sh &#39;ls -a&#39;        sh &#39;npm install -g hexo-cli&#39;        sh &#39;npm install hexo --save&#39;      &#125;    &#125;    stage(&#39;构建发布&#39;) &#123;      steps &#123;        sh &#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39;      &#125;    &#125;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>最后说一下脚本的思路</p><ol><li><p>脚本会告诉coding的服务器：“我要使用node-10的环境”</p></li><li><p>执行步骤-克隆项目</p><ul><li><p>运行命令<code>git clone 项目地址</code></p><p>既然是要对你的文件进行生成，那么这里肯定填的是你源文件的地址，而不是发布的仓库地址。</p></li></ul></li><li><p>执行步骤-安装依赖</p><p>此步骤模拟你在自己电脑上初次运行hexo时需要做的</p><p><code>npm install -g hexo-cli</code>和<code>npm install hexo --save</code>命令。</p></li><li><p>执行步骤-构建发布</p><p>这一步就相当于你运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>的命令。</p></li></ol><p>当然了，这一切都是在coding的服务上运行的，所以你只管push，coding服务器会帮你完成这些操作。</p></li></ol><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><ol><li><p>请确保你的pages项目仓库是公开的，否则请同样配置访问密钥，并修改hexo根目录下的配置文件。</p><p>如果你的pages服务在coding，并且仓库是私有的，那么请添加项目令牌。并替换博客根目录的地址。</p><p><img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbpzgcibu3j31ec0dqjs7.jpg" alt="10.png" /></p><p>然后替换博客根目录下 配置文件中的git地址。</p><p>同样的地址也是<code>https://username:password@项目地址</code></p><p>假如说我的</p><ul><li>令牌用户名是：<code>root</code></li></ul></li></ol><ul><li><p>令牌密码是：<code>abcdefg</code></p><ul><li>项目地址是<code>https://e.coding.net/test/test.git</code></li></ul><p>那么在配置文件中的地址就是<code>https://root:abcdefg@e.coding.net/test/test.git</code></p></li></ul><ol start="2"><li><p>GitHub的访问地址</p><p>比如生成的token为<code>12345abc</code></p><p>我的项目地址为<code>https://github.com/test/test.git</code></p><p>那么配置文件(hexo的配置文件)中的deploy地址就应该为<code>https://12345abc@github.com/test/test.git</code></p></li></ol><p>最后，如果我的文章对你有帮助，那么你可以点下边的赞赏按钮，请作者喝杯咖啡哦！</p><p>如果图片失效请在下方留言，或联系作者。</p><center><font color=red size=5><b>原创不易，所有文字及图片都是我自己一个一个弄得。</b></font></center><center><font color=red size=5><b>搬砖党请尊重一下作者，转载请标明出处。</b></font></center>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora自动图片自动上传到图床</title>
      <link href="/posts/c765ad20/"/>
      <url>/posts/c765ad20/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>由于突然发现 Typora0.9.84 的更新中有一个 Support upload images via PicGo or custom commands.</p><p>于是便尝试了一下。<img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091215.png" alt="" /></p><p>其实 我感觉效果还是挺一般的。可能是因为我用的 GitHub，可能有时因为网络问题的原因吧。</p><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><h3 id="picgo-设置"><a class="markdownIt-Anchor" href="#picgo-设置"></a> PicGo 设置</h3><ol><li><p>PicGo 的版本必须是 2.2.0 及以上。至于图床配置可以参考另一篇文章。<a href="/posts/c9c6437b/index.html">配置 picgo 成为多平台图床工具</a></p></li><li><p>激活 PicGo-Server</p><p>打开 PicGo 详细页面，进入 PicGo 设置–设置 Server</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091619.png" alt="" /></p><p><strong>这里的监听地址就是默认的 127.0.0.1，端口修改为 36677</strong>，否则会上传失败。</p></li></ol><h3 id="typora-配置"><a class="markdownIt-Anchor" href="#typora-配置"></a> Typora 配置</h3><p>对于 Typora 也是有版本要求的，大家也看到了，这个功能是 0.9.84 才加入的，所以 Typora 的版本也得是 0.9.84 及以上。</p><ol><li><p>Typora 版本 0.9.84 及以上。</p></li><li><p>设置（左上角文件-&gt;偏好设置-&gt;图像）</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314092035.png" alt="" /></p></li><li><p>然后左下角有一个验证上传，一般情况下这里就已经好了。</p></li></ol><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><p>picgo 更多图床配置：<a href="https://www.antmoe.com/posts/c9c6437b/index.html">配置 picgo 成为多平台图床工具</a></p><h3 id="图片上传失败"><a class="markdownIt-Anchor" href="#图片上传失败"></a> 图片上传失败</h3><p>参考<a href="https://www.antmoe.com/posts/c9c6437b/index.html#github%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E5%A4%B1%E8%B4%A5">github 图片上传失败</a></p><h3 id="其他问题"><a class="markdownIt-Anchor" href="#其他问题"></a> 其他问题</h3><p>如果出现 PicGo 可以上传，但 Typora 无法上传基本上就是配置问题了。</p>]]></content>
      
      
      <categories>
          
          <category> 优雅写作 </category>
          
          <category> Typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小康博客常用链接记录</title>
      <link href="/posts/4e836006/"/>
      <url>/posts/4e836006/</url>
      
        <content type="html"><![CDATA[<h1 id="小康博客常用链接记录"><a class="markdownIt-Anchor" href="#小康博客常用链接记录"></a> 小康博客常用链接记录</h1><h2 id="jsdeliver"><a class="markdownIt-Anchor" href="#jsdeliver"></a> jsDeliver</h2><p>此部分记录关于jsDeliver的链接使用说明。</p><ol><li><p>版本库的文件</p><p>格式为：<code>https://cdn.jsdelivr.net/gh/</code>+用户名+<code>仓库名</code>+<code>@</code>+<code>版本号</code>+文件（包括路径）</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/css/index.css<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果想使用最新链接，而不想关心版本号则可以将版本换替换为<code>latest</code></p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/css/index.css<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>GitHub仓库中的文件</p><p>与版本库文件相同，去掉 <code>@</code>+版本号 即可</p></li><li><p>查看仓库的版本库</p><p>格式：<code>https://www.jsdelivr.com/package/gh/</code>+用户名+<code>/</code>+仓库名</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//www.jsdelivr.com/package/gh/sviptzk/HexoStaticFile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看仓库文件</p><p>格式 <code>https://cdn.jsdelivr.net/gh/</code>+用户名+<code>/</code>+仓库名+<code>/</code> <em>仓库名可用@指定分支</em></p><p>例如<code>仓库名@master</code>，默认为master分支</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//cdn.jsdelivr.net/gh/sviptzk/sviptzk.github.io/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="图片生成类"><a class="markdownIt-Anchor" href="#图片生成类"></a> 图片生成类</h2><h3 id="代码生成器"><a class="markdownIt-Anchor" href="#代码生成器"></a> 代码生成器</h3><p>网址：<a href="https://carbon.now.sh/">https://carbon.now.sh/</a></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/21/20200221201035.png" alt="" /></p><h3 id="github优雅标签"><a class="markdownIt-Anchor" href="#github优雅标签"></a> GitHub优雅标签</h3><p>网址：<a href="https://shields.io/%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%97%A0%E9%9C%80%E5%A4%8D%E6%9D%82%E6%A0%B7%E5%BC%8F%EF%BC%8C%E4%B8%8E%E4%BB%A5%E4%B8%8B%E7%A4%BA%E4%BE%8B%E7%9B%B8%E5%90%8C%E5%88%99%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E7%BD%91%E5%9D%80%E7%9B%B4%E6%8E%A5%E7%94%9F%E6%88%90%E3%80%82">https://shields.io/，如果无需复杂样式，与以下示例相同则可以使用网址直接生成。</a></p><p>格式：<code>https://img.shields.io/badge/</code>+前边文字+<code>-</code>+‘后边文字’+<code>-</code>+颜色代码。</p><p>例如：<code>https://img.shields.io/badge/From-小康博客-ff69b4</code></p><p><img src="https://img.shields.io/badge/From-%E5%B0%8F%E5%BA%B7%E5%8D%9A%E5%AE%A2-red" alt="" /></p><h2 id="在线类"><a class="markdownIt-Anchor" href="#在线类"></a> 在线类</h2><ol><li><p>在线markdown：<a href="http://md.aclickall.com/">http://md.aclickall.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/21/20200221201750.png" alt="小康博客" /></p></li><li><p>jetbrains激活码</p><p><a href="http://idea.medeming.com/jet/">http://idea.medeming.com/jet/</a></p></li></ol><h2 id="网易云音乐链接"><a class="markdownIt-Anchor" href="#网易云音乐链接"></a> 网易云音乐链接</h2><p><code>http://music.163.com/song/media/outer/url?id=27588470.mp3</code></p><p><a href="http://music.163.com/song/media/outer/url?id=27588470.mp3">http://music.163.com/song/media/outer/url?id=27588470.mp3</a></p><h2 id="更多链接"><a class="markdownIt-Anchor" href="#更多链接"></a> 更多链接</h2><p>已经发表了一篇新的文章用来记录一些常用及好用的网址了。<a href="/posts/dfb407a5/index.html">一键直达</a>或者去看<a href="https://webstack.tzki.cn/">网址导航</a>哦！</p>]]></content>
      
      
      <categories>
          
          <category> 参考手册 </category>
          
          <category> 食用手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小康博客按钮食用说明书</title>
      <link href="/posts/58a62380/"/>
      <url>/posts/58a62380/</url>
      
        <content type="html"><![CDATA[<h1 id="小康博客按钮食用说明书"><a class="markdownIt-Anchor" href="#小康博客按钮食用说明书"></a> 小康博客按钮食用说明书</h1><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>小康博客使用使用的主题（butterfly）并没有按钮样式，而且没有引用 bootstrap 框架（<s>尝试引用了，但会出现冲突</s>），所以引用了 bootstrap 下的另一个 css 按钮样式<a href="https://www.bootcss.com/p/buttons/">BUTTONSV</a>，但是<code>a</code>标签还是会与主题自带的样式发生冲突，因此最简单的解决方案是在引入时自己写上文字颜色。</p><p>因此本人才会写这篇文章，目的是为了方便自己一键复制。毕竟我是那么的懒。</p><h2 id="形状与尺寸"><a class="markdownIt-Anchor" href="#形状与尺寸"></a> 形状与尺寸</h2><p>按钮的颜色分为</p><ul><li>白底<code>tiny</code></li><li>蓝底<code>primary</code></li><li>绿底<code>action</code></li><li>橙底<code>highlight</code></li><li>红底<code>caution</code></li><li>紫底<code>royal</code></li></ul><h3 id="常用样式"><a class="markdownIt-Anchor" href="#常用样式"></a> 常用样式</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span>#666</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-tiny<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a style="color:#666" href="#" class="button button-tiny">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span>#666</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-rounded button-tiny<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a style="color:#666" href="#" class="button button-rounded button-tiny">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span>#666</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-pill button-tiny<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a style="color:#666" href="#" class="button button-pill button-tiny">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-primary button-small<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-primary button-small">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-primary button-rounded button-small<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-primary button-rounded button-small">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-primary button-pill button-small<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-primary button-pill button-small">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-highlight button-large<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-highlight button-large">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-highlight button-rounded button-large<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-highlight button-rounded button-large">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-highlight button-pill button-large<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-highlight button-pill button-large">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-caution button-jumbo<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-caution button-jumbo">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-caution button-rounded button-jumbo<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-caution button-rounded button-jumbo">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-caution button-pill button-jumbo<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-caution button-pill button-jumbo">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-royal button-giant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-royal button-giant">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-royal button-rounded button-giant<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-royal button-rounded button-giant">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-royal button-pill button-giant<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-royal button-pill button-giant">Go</a></p><h3 id="不常用"><a class="markdownIt-Anchor" href="#不常用"></a> 不常用</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-square button-tiny<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-square button-tiny"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-box button-tiny<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-box button-tiny"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-circle button-tiny<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-circle button-tiny"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-primary button-square button-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-primary button-square button-small"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-primary button-box button-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-primary button-box button-small"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-primary button-circle button-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-primary button-circle button-small"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-action button-square<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-action button-square"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-action button-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-action button-box"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-action button-circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-action button-circle"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-highlight button-square button-large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-highlight button-square button-large"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-highlight button-box button-large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-highlight button-box button-large"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-highlight button-circle button-large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-highlight button-circle button-large"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-caution button-square button-jumbo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-caution button-square button-jumbo"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-caution button-box button-jumbo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-caution button-box button-jumbo"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-caution button-circle button-jumbo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-caution button-circle button-jumbo"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-royal button-square button-giant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-royal button-square button-giant"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-royal button-box button-giant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-royal button-box button-giant"><i class="fa fa-plus"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-royal button-circle button-giant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-royal button-circle button-giant"><i class="fa fa-plus"></i></button></p><h2 id="带边框和不带边框的按钮"><a class="markdownIt-Anchor" href="#带边框和不带边框的按钮"></a> 带边框和不带边框的按钮</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-large button-plain button-border button-circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-reply<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-large button-plain button-border button-circle"><i class="fa fa-reply"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-large button-plain button-border button-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-star<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-large button-plain button-border button-box"><i class="fa fa-star"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-large button-plain button-border button-square<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-trash-o<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-large button-plain button-border button-square"><i class="fa fa-trash-o"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-large button-plain button-borderless<span class="token punctuation">"</span></span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-tag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><button style="color:red" class="button button-large button-plain button-borderless" style='color:red'><i class="fa fa-tag">test</i></button></p><h2 id="3d-按钮"><a class="markdownIt-Anchor" href="#3d-按钮"></a> 3D 按钮</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-3d button-box button-jumbo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-thumbs-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-3d button-box button-jumbo"><i class="fa fa-thumbs-up"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-3d button-primary button-rounded<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Check out the new site!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-3d button-primary button-rounded">Check out the new site!</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-3d button-action button-pill<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Visit Us!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-3d button-action button-pill">Visit Us!</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-3d button-action button-circle button-jumbo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-thumbs-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-3d button-action button-circle button-jumbo"><i class="fa fa-thumbs-up"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-3d button-caution<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-camera<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-3d button-caution"><i class="fa fa-camera"></i> Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-3d button-royal<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Say Hi!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-3d button-royal">Say Hi!</a></p><h2 id="突起样式的按钮"><a class="markdownIt-Anchor" href="#突起样式的按钮"></a> 突起样式的按钮</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-raised button-primary button-pill<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Visit Us!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-raised button-primary button-pill">Visit Us!</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-raised button-action button-circle button-jumbo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-thumbs-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-raised button-action button-circle button-jumbo"><i class="fa fa-thumbs-up"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-raised button-caution<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-camera<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-raised button-caution"><i class="fa fa-camera"></i> Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-raised button-royal<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Say Hi!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-raised button-royal">Say Hi!</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-raised button-pill button-inverse<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Say Hi!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-raised button-pill button-inverse">Say Hi!</a></p><h2 id="光晕效果"><a class="markdownIt-Anchor" href="#光晕效果"></a> 光晕效果</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-glow button-rounded button-raised button-primary<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-glow button-rounded button-raised button-primary">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #1B9AF7<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-glow button-border button-rounded button-primary<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #1B9AF7;' href="#" class="button button-glow button-border button-rounded button-primary">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-glow button-circle button-action button-jumbo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-thumbs-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><button class="button button-glow button-circle button-action button-jumbo"><i class="fa fa-thumbs-up"></i></button></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-glow button-rounded button-highlight<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-glow button-rounded button-highlight">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-glow button-rounded button-caution<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-glow button-rounded button-caution">Go</a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-glow button-rounded button-royal<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>Go<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-glow button-rounded button-royal">Go</a></p><h2 id="各种文字样式"><a class="markdownIt-Anchor" href="#各种文字样式"></a> 各种文字样式</h2><p><code>button-uppercase</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-uppercase button-primary<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>uppercase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-uppercase button-primary">uppercase</a></p><p><code>button-lowercase</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-lowercase button-primary <span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>lowercase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-lowercase button-primary ">lowercase</a></p><p><code>button-capitalize</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-capitalize button-primary<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>capitalize<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-capitalize button-primary">capitalize</a></p><p><code>button-small-caps</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-small-caps button-primary<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>small caps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a style='color: #FFF;' href="#" class="button button-small-caps button-primary">small caps</a></p>]]></content>
      
      
      <categories>
          
          <category> 参考手册 </category>
          
          <category> 食用手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用vscode进行远程开发</title>
      <link href="/posts/99dbbe8d/"/>
      <url>/posts/99dbbe8d/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>为什么突然想到了 vscode 远程开发，其实是因为在知乎上看到了一个问题，某人的回答指出了是因为 vscode 能够远程开发，他才抛弃了其他工具，转向了 vscode。</p><p>其实对于我一个转向前端的程序员 👨‍💻，使用 vscode 也是迟早的事情。虽然 jetbrains 全家桶很 X，但是有时候会卡住，而且时间长了，打开还得等一会儿。。</p><p>目前我只有开发 python 才会使用。当然了，等这段时间过了，估计也会很长一段时间不会碰 python 了，所以转向 vscode 了。<img src="https://file.acs.pw/picGo/2022/03/06/20220306192857.jpeg" alt="-小康博客" /></p><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><h3 id="为-vscode-安装插件"><a class="markdownIt-Anchor" href="#为-vscode-安装插件"></a> 为 vscode 安装插件</h3><p>插件名为 Remote Development</p><p>地址<code>https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack</code></p><p>当然了，直接搜索也是可以的。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218223231.png" alt="" /></p><p>安装这个插件，会连同最上面那四个一起安装，虽然不知道为啥。</p><h3 id="生成密钥对"><a class="markdownIt-Anchor" href="#生成密钥对"></a> 生成密钥对</h3><p>密钥对对于搞 Hexo 的小伙伴相信都不陌生，对于开发者来说应该更不陌生。生成的命令很简单</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后一路回车即可。如果遇到问题，请自行百度。</p><p>密钥对生成好了之后，默认的位置是用户目录的.ssh 里。例如我的用户名是<code>antmoe</code>那么我的文件就在<code>C:\Users\antmoe\.ssh</code>里。我们进入这个文件，将里边的<code>id_rsa.pub</code>文件用文本文档打开。</p><blockquote><p>这里推荐一款工具：notepad++ 免费而且贼好用。</p></blockquote><p>复制里边的内容</p><h3 id="为服务器添加公钥"><a class="markdownIt-Anchor" href="#为服务器添加公钥"></a> 为服务器添加公钥</h3><p>我们登录服务器，在你个人用户的目录新建一个<code>.ssh</code>目录，并赋予权限 700，然后在这个目录里新建一个文件<code>authorized_keys</code> 里边写入我们公钥的内容，并赋予权限 600</p><p>如果你是 Linux 小白或者忘了 Linux 的命令，那么我在这里提供命令哦！</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">mkdir</span> ~/.ssh<span class="token function">chmod</span> <span class="token number">700</span> ~/.ssh/<span class="token function">vi</span> ~/.ssh/authorized_keys<span class="token function">chmod</span> <span class="token number">600</span> ~/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>关于第三行使用了 vi 编辑器，如果你不会用或想了解这款工具请自行百度，这里只提供粘贴公钥和保存的基本操作。</p><ol><li><p>粘贴公钥</p><p>当输入第三步的命令后，看到了一个黑框框，我们按键盘上的字母键<code>i</code>，然后左下角会提示<code>INSERT</code>或者提示插入或者插入模式。这都是一样么。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218224804.png" alt="" /></p><p>然后我们按鼠标的右键，粘贴复制的公钥内容。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218224844.png" alt="" /></p></li><li><p>保存内容</p><p>保存也很简单，我们先按键盘左上角的<code>ESC</code>建。然后输入<code>:wq</code>(左下角会显示)</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225000.png" alt="" /></p></li></ol><h3 id="vscode-连接"><a class="markdownIt-Anchor" href="#vscode-连接"></a> vscode 连接</h3><p>进入 vscode，你会看到左边菜单栏多出了一个小电脑的标志，我们点它。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225253.png" alt="" /></p><p>左边那里选择<code>SSH Targels</code>，然后点击小齿轮选择 user/用户名/.ssh/config 这样的，通常是第一个或者第二个。然后就可以看到上边的配置界面了。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225433.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225444.png" alt="" /></p><h3 id="测试连接"><a class="markdownIt-Anchor" href="#测试连接"></a> 测试连接</h3><p>不出意外的话，这是就可以连接成功了。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225734.png" alt="" /></p><h2 id="可能会遇到的问题"><a class="markdownIt-Anchor" href="#可能会遇到的问题"></a> 可能会遇到的问题</h2><h3 id="bad-owner-or-permissions-on-cusersadministratorsshconfig"><a class="markdownIt-Anchor" href="#bad-owner-or-permissions-on-cusersadministratorsshconfig"></a> Bad owner or permissions on C:\Users\Administrator/.ssh/config</h3><blockquote><p>Windows 下 VSCode 使用 SSH 连接报 Bad owner or permissions on C:\Users\Administrator/.ssh/config 错误问题</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218230043.png" alt="" /></p><p>这个错误意味着：文件夹.ssh 的权限不仅仅是 windows 当前用户拥有或者当前用户权限不足，故修改权限即可。</p><p>解决方案很简单，找到我们的<code>.ssh</code>文件，进入里边会有一个<code>config</code>的文件。</p><ol><li>右键单击.ssh 文件夹，然后单击“属性”。</li><li>找到并点击“安全”标签。</li><li>然后单击“高级”。 单击“禁用继承”，单击“确定”。 将出现警告弹出窗口。单击“<strong>从此对象中删除所有继承的权限</strong>”。</li><li>你会注意到所有用户都将被删除。让我们添加所有者。在同一窗口中，单击“编辑”按钮。</li><li>接下来，单击“添加”以显示“选择用户或组”窗口。</li><li>单击“高级”，然后单击“立即查找”按钮。应显示用户结果列表。 选择<strong>您的用户帐户</strong>。</li><li>然后单击“确定”（大约三次）以关闭所有窗口。</li><li>完成所有操作后，再次关闭并打开 VSCode 并尝试连接到远程 SSH 主机。</li></ol><p>此解决方案来源于 CSDN 博客<a href="https://blog.csdn.net/chaoenhu/article/details/103698804">犹新</a></p><h3 id="更多问题"><a class="markdownIt-Anchor" href="#更多问题"></a> 更多问题</h3><p>如果遇到其他问题，可以在下方留言哦！</p><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>现在已经是晚上 11 点钟了，刚刚写完这篇文字，大约花费了 40 分钟的时间。说真的。现在越来越觉得 vscode 牛 X 了。</p><p>不过经过我的测试 远程开发并不好用，经常会遇到掉线的情况。。不知道是因为服务器的原因还是我的网络原因。</p><p>但是虚拟机好像没有掉线过，所以我的开发流程变成了</p><ol><li>打开虚拟机</li><li>vscode 远程连接</li><li>开发</li></ol><p>好了 晚安 睡觉 <img src="https://file.acs.pw/picGo/2022/03/06/20220306192905.jpeg" alt="-小康博客" /></p>]]></content>
      
      
      <categories>
          
          <category> 软件配置 </category>
          
          <category> VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远程开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine评论之Valine-admin配置攻略</title>
      <link href="/posts/2380732b/"/>
      <url>/posts/2380732b/</url>
      
        <content type="html"><![CDATA[<div class="note danger icon flat"><p>由于作者已放弃valine评论，故关于此评论有关的项目均已放弃。</p></div><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>这篇文章所用的Valine-admin是<a href="https://www.antmoe.com/">小康</a>根据<a href="https://blog.hclonely.com/posts/409d3090/">懒人大佬</a>及其他两位valine-admin的作者进行二次开发版本。可能会与大佬保持更新(<s>其实就是抄代码</s>)，也可能不会。<strong>但需要注意的是：此版本中的设定可能与你之前用的有些出入，如果无法接受，那么可以关掉这个页面。没人强迫你用。</strong></p><p>项目重大历史：</p><ul><li><p>2020-02-16</p><p>第一次版本发布，这是仅有微信提醒功能</p></li><li><p>2020-04-19</p><p>基于懒人大佬，弃用request</p></li><li><p>2020-04-20</p><p>添加qq提醒</p></li><li><p>2020-05-15</p><p>适配国际版时区问题（beta）</p></li></ul><p>最初修改这个项目的原因是因为不在电脑旁的时候，如果有人评论会发送邮件，但手机有时候不会提醒（<s>可能手机垃圾吧</s>）。<img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2c7vcj300v00s3y9.jpg" alt="-小康博客" /></p><p>于是我便想到了曾经好友向我展示的server酱，只不过当时是以聊天室的形式展示的（其实也有人向我展示过评论通知的）。于是我便突发奇想，决定试试这个微信server酱。</p><p>这样就可以给我发微信通知了，从此再也不会看不到评论了！</p><h2 id="部署前需要获取的密钥"><a class="markdownIt-Anchor" href="#部署前需要获取的密钥"></a> 部署前需要获取的密钥</h2><p>这部分主要介绍QQ提醒，微信提醒及垃圾评论检测的密钥获取途径。如果不需要可以直接跳过，看后边的部署Valine-admin部分。</p><h3 id="service酱sckey获取"><a class="markdownIt-Anchor" href="#service酱sckey获取"></a> Service酱SCKEY获取</h3><p>首先需要到server的官网，开启微信提醒并获取<code>SCKEY</code>。<a href="http://sc.ftqq.com/">官网</a>写的很详细，这里不在过多赘述。相信能动手搭Hexo博客的小伙伴都能看懂server酱官方的教程。小伙伴开启微信通知后顺便在官方那里测试下能否接到通知哦。</p><h3 id="qmsg密钥获取"><a class="markdownIt-Anchor" href="#qmsg密钥获取"></a> Qmsg密钥获取</h3><p>Qmsg的官网为：<a href="https://qmsg.zendee.cn/">https://qmsg.zendee.cn/</a>,进入官网，登录账号（qq或者神邸用户都可以）。</p><ol><li><p>选择并<font color=red><b>添加</b></font>一个消息发送者，并填写你接受消息的qq号。（可以使用小号登录，大号接收）</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/20/1f54503ed6d2807b9f693be3d0ee974c.png" alt="" /></p><blockquote><p>不要问为什么收不到消息 ， 你不加他当然收不到了。选择哪个添加哪个即可。</p></blockquote></li><li><p>获取密钥</p><p>点击右上角的文档，然后你会看到一个网址。这个网址里边会有一串奇怪的字母数字组合，我们复制他（也就是图中被我马赛克的地方）</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/20/394afea0b0c1127a5b47069bf1243d40.png" alt="" /></p></li></ol><h3 id="akismet_key获取"><a class="markdownIt-Anchor" href="#akismet_key获取"></a> AKISMET_KEY获取</h3><blockquote><p>Akismet (Automattic Kismet)是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的WordPress 创始人 Matt Mullenweg，Akismet也是WordPress默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言Spam。有了Akismet之后，基本上不用担心垃圾留言的烦恼了。<br />启用Akismet后，当博客再收到留言会自动将其提交到Akismet并与Akismet上的黑名单进行比对，如果名列该黑名单中，则该条留言会被标记为垃圾评论且不会发布。</p></blockquote><p>如果你用过 WordPress 你应该有 Akismet Key；如果还没有，你可以去 <a href="https://akismet.com/development/">AKISMET FOR DEVELOPERS 免费申请一个</a>；如果你不需要反垃圾评论，Akismet Key 环境变量可以忽略。</p><p><strong>为了实现较为精准的垃圾评论识别，采集的判据除了评论内容、邮件地址和网站地址外，还包括评论者的IP地址、浏览器信息等，但仅在云引擎后台使用这些数据，确保隐私和安全。</strong></p><p><strong>如果使用了本站最新的Valine和Valine Admin，并设置了Akismet Key，可以有效地拦截垃圾评论。被标为垃圾的评论可以在管理页面取消标注。</strong></p><h2 id="部署valine-admin"><a class="markdownIt-Anchor" href="#部署valine-admin"></a> 部署valine-admin</h2><p>这一步主要是告诉你如何快速部署这个项目。</p><p><strong>如果你已经部署了Valine评论，那么不需要创建新应用，将此项目应用于你的valine应用即可。</strong></p><ol><li><p>登录LeanCloud的官网。（如何注册就不介绍了。）</p><p>登录无论是国际版还是国内版都是可以的。</p><p>成功登录后，会看到如下界面。右上角可以看到你当前是你的登录节点是国内还是国外，比如我的是国内华北节点。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/521500c7490524eaa0d41b4ab7d0f875.png" alt="" /></p></li><li><p>创建应用并进入应用</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/bf1ab7eeed9077690dfab69d04e1c207.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/62d6bfbcee90da70df2373844d2abde0.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/9578993781726c573d997ff1cb659155.png" alt="" /></p></li><li><p>开始部署项目</p><p>依次点击左侧的云引擎-&gt;部署-&gt;项目部署-&gt;Git部署-&gt;配置Git。然后Git的地址填写：<a href="https://github.com/sviptzk/Valine-Admin-Server">https://github.com/sviptzk/Valine-Admin-Server</a>。然后再次点击Git部署-&gt;部署即可</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/5fcab394c9f9e2f488b3b60b498bf0e3.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/37b6287f531a5ef1b7e9cfceb7ab7ddc.png" alt="" /></p></li><li><p>绑定评论管理的域名</p><ul><li><p>国区版</p><p>LeanCloud不给予免费的二级域名了，因此必须绑定备案域名。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/eec3f243aa210fb3a0c2abf663cd1448.png" alt="" /></p></li><li><p>国际版</p><p>LeanCloud给予一个免费的二级域名。当然也可以绑定自己的（方式与国区版相同）。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/29f3be235deda67a564c9328a3234bfb.png" alt="" /></p></li></ul></li><li><p>设置域名白名单</p><p>域名可设置多个，一行一个。需要写协议头。如果使用的是默认端口号可以省略，但协议头一定要写。例如我的设置如图：</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/ea958d3043bd17ae9aeb0b0f9f7920b5.png" alt="image-20200516172247325" /></p></li><li><p>设置环境变量</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/0a4392fc75565336151ac857eeef76b7.png" alt="" /></p><p>此变量表只针对此项目，如果使用原项目可能不生效</p><table><thead><tr><th style="text-align:center">变量名</th><th style="text-align:center">说明</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">SITE_NAME</td><td style="text-align:center">[必填]网站名称</td><td style="text-align:center">小康博客</td></tr><tr><td style="text-align:center">SITE_URL</td><td style="text-align:center">[必填]网站地址，最后不要加<code>/</code></td><td style="text-align:center"><a href="https://www.antmoe.com">https://www.antmoe.com</a></td></tr><tr><td style="text-align:center">SMTP_USER</td><td style="text-align:center">[必填]SMTP 服务用户名，一般为邮箱地址。</td><td style="text-align:center"><a href="mailto:admin@antmoe.com">admin@antmoe.com</a></td></tr><tr><td style="text-align:center">SMTP_PASS</td><td style="text-align:center">[必填]SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</td><td style="text-align:center">123</td></tr><tr><td style="text-align:center">SMTP_SERVICE</td><td style="text-align:center">[新版支持]邮件服务提供商,<a href="https://nodemailer.com/smtp/well-known/#supported-services">内置支持</a></td><td style="text-align:center">163</td></tr><tr><td style="text-align:center">SENDER_NAME</td><td style="text-align:center">[必填]寄件人名称。</td><td style="text-align:center">小康博客</td></tr><tr><td style="text-align:center">TO_EMAIL</td><td style="text-align:center">[可选]博主通知收件地址，默认使用SMTP_USER</td><td style="text-align:center"><a href="mailto:admin@antmoe.com">admin@antmoe.com</a></td></tr><tr><td style="text-align:center">BLOGGER_EMAIL</td><td style="text-align:center">[可选]如果设置则作为后台管理员邮箱（<code>/sign-up</code>页面设置），不设置则默认以<code>SMTP_USER</code></td><td style="text-align:center"><a href="mailto:admin@antmoe.com">admin@antmoe.com</a></td></tr><tr><td style="text-align:center">TEMPLATE_NAME</td><td style="text-align:center">[必填]设置提醒邮件的主题</td><td style="text-align:center">custom2</td></tr><tr><td style="text-align:center">AKISMET_KEY</td><td style="text-align:center">[可选]Akismet Key 用于垃圾评论检测，设为MANUAL_REVIEW开启人工审核，留空不使用反垃圾</td><td style="text-align:center">xxxx</td></tr><tr><td style="text-align:center">ADMIN_URL</td><td style="text-align:center">[可选]后台管理地址(<strong>非博客地址</strong>)</td><td style="text-align:center"><a href="https://xxxx.leanapp.cn/">https://xxxx.leanapp.cn/</a></td></tr><tr><td style="text-align:center">COMMENT</td><td style="text-align:center">[可选]评论div的ID名</td><td style="text-align:center">#post-comment</td></tr><tr><td style="text-align:center">SCKEY</td><td style="text-align:center">[可选]server酱的SCKEY</td><td style="text-align:center">xxx</td></tr><tr><td style="text-align:center">AKISMET_KEY</td><td style="text-align:center">[可选]Akismet Key 用于垃圾评论检测</td><td style="text-align:center">xxxxxxxxxxxx</td></tr><tr><td style="text-align:center">QMSG_KEY</td><td style="text-align:center">[可选]Qmsg酱的密钥</td><td style="text-align:center">xxxxx</td></tr><tr><td style="text-align:center">QQ</td><td style="text-align:center">[可选]Qmsg酱发送的qq，不填为全部。支持多个，用英文逗号分隔即可</td><td style="text-align:center">535668586</td></tr><tr><td style="text-align:center">DISABLE_EMAIL</td><td style="text-align:center">[可选]，填写则代表停止发送邮件</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">QQ_SHAKE</td><td style="text-align:center">[可选]，填写代表发送QQ戳一戳</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">ICP</td><td style="text-align:center">[可选]备案信息，直接填写即可。</td><td style="text-align:center">京ICP备19022312号</td></tr><tr><td style="text-align:center">INFO</td><td style="text-align:center">[可选]自定义信息输出，支持HTML代码</td><td style="text-align:center"><code>&lt;p style='color:red'&gt;test&lt;p&gt;</code></td></tr><tr><td style="text-align:center">favicon</td><td style="text-align:center">[可选]网页favicon图标</td><td style="text-align:center"><a href="https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO/butterfly/img/favicon.ico">https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO/butterfly/img/favicon.ico</a></td></tr><tr><td style="text-align:center">SPAM_WORDS</td><td style="text-align:center">[可选]需要对屏蔽的关键词，关键词用半角逗号分隔</td><td style="text-align:center">单号,物流</td></tr><tr><td style="text-align:center">MAIN_COLOR</td><td style="text-align:center">[可选]仅针对<code>custom2</code>模板主题的主要颜色</td><td style="text-align:center">#ff9191</td></tr><tr><td style="text-align:center">MAIN_IMG</td><td style="text-align:center">[可选]仅针对<code>custom2</code>模板主题的头图</td><td style="text-align:center"><code>https://bing.rthe.net/wallpaper</code></td></tr></tbody></table><p>当使用自定义邮件服务器时（需将<code>SMTP_SERVICE</code>变量删掉哦！）</p><table><thead><tr><th style="text-align:center">变量名</th><th style="text-align:center">说明</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">SMTP_HOST</td><td style="text-align:center">邮件服务提供商 SMTP 地址，此项需要自行查询或询问其服务商。</td><td style="text-align:center"><code>smtp.ym.163.com</code></td></tr><tr><td style="text-align:center">SMTP_PORT</td><td style="text-align:center">邮件服务提供商 SMTP 端口, <em>此项需要自行查询或询问其服务商</em>。</td><td style="text-align:center">994</td></tr><tr><td style="text-align:center">SMTP_SECURE</td><td style="text-align:center">是否启用加密, 默认为 <code>true</code>，一般不需要设置，如有特殊请自行配置。 <em>此项需要自行查询或询问其服务商</em>。</td><td style="text-align:center">true</td></tr></tbody></table><p>此项目的主题字段</p><table><thead><tr><th style="text-align:center">主题</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">default</td><td style="text-align:center">默认主题</td></tr><tr><td style="text-align:center">rainbow</td><td style="text-align:center">原版的rainbow</td></tr><tr><td style="text-align:center">custom1</td><td style="text-align:center">基于<a href="https://pbas.club/">🎉梨花町の肾兄さん🎉</a>的模板</td></tr><tr><td style="text-align:center">custom2</td><td style="text-align:center">对custom1的改进版</td></tr></tbody></table></li><li><p>添加完成后，点击保存。并且重新部署实例。</p><p>我这里以最简设置为例，请各位博主认真看每个变量的含义最后决定要不要设置。</p><p><img src="upload/image-20200516173737785.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/a4c1045400ca9fb6bb140721500ded60.png" alt="" /></p></li><li><p>初始化后台管理</p><p><em>如果你没有设置后台域名</em>，即没有做第四步。那么也可以跳过这一步。</p><p>打开绑定的域名+<code>/sign-up</code>，例如我的域名为<code>https://xiaokang.avosapps.us/</code>，那么我访问的地址就是<code>https://xiaokang.avosapps.us/sign-up</code>。接下来设置你的登录信息。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/5400ad48e47704d503e994680715cf5c.png" alt="" /></p></li><li><p>登录后台</p><p>接下来就可以用刚才的邮箱或者登录名登录了。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/16/e14cce66e98ababc5f7099ba4403457a.png" alt="" /></p></li><li><p>基本完成了设置</p><p>到这里基本上完成了valine-admin的基本设置。如果你觉得我的项目还不错，可以为我点个star哦！</p></li></ol><h2 id="防止服务器休眠"><a class="markdownIt-Anchor" href="#防止服务器休眠"></a> 防止服务器休眠</h2><p>关于自动休眠的官方说法：<a href="https://leancloud.cn/docs/leanengine_plan.html#hash633315134">点击查看</a></p><p>关于服务器休眠唤醒的问题，以前的方法是通过自带的定时任务进行唤醒，但现在不可以了，因为官方进行限制了。因此对于服务器的自唤醒可以参考<a href="https://www.antmoe.com/posts/ff6aef7b/index.html">优雅解决LeanCloud流控问题</a>这篇文章进行解决。</p><p>至于重发函数，还是和往常一样，但由于流控限制，因此最好能保证重发时机器是活着的。不然很可能会触发<em>因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠</em></p><p>选择resend-mails云函数，Cron表达式为<code>0 59 7 * * *</code>，表示每天早8点20分检查过去24小时内漏发的通知邮件并补发（请尽量确保你设置的时间机器是醒着的）：</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/03/31/98657c0fe57e93ee81d53bc1aa056a02.png" alt="" /></p><h2 id="使用问题"><a class="markdownIt-Anchor" href="#使用问题"></a> 使用问题</h2><p>此项目是在原项目的基础上进行的二次开发（<s>其实并不是开发，只是添加一个请求而已</s>）。所以使用上可能会遇到一些问题，因此遇到问题可以在下方留言,或者给我发送Email。</p><h3 id="添加丰富的评论表情"><a class="markdownIt-Anchor" href="#添加丰富的评论表情"></a> 添加丰富的评论表情</h3><p>参考：<a href="https://www.antmoe.com/posts/284f2e1c/index.html">Valine如何添加多个表情</a></p><h3 id="无法登录后台"><a class="markdownIt-Anchor" href="#无法登录后台"></a> 无法登录后台</h3><p>这个主要原因是因为后台验证机制变了，只需要访问你的后台管理的域名+sign-up即可。</p><p>例如我的后台管理地址为<code>www.antmoe.com</code>那么我访问的地址就是<code>www.antmoe.com/sign-up</code></p><center><font color=red size=5><b>原创文章，转载请标明出处。</b></font></center><h2 id="更新说明"><a class="markdownIt-Anchor" href="#更新说明"></a> 更新说明</h2><ul><li><p>2020-06-24</p><p><code>A</code> 关键词屏蔽字段</p></li><li><p>2020-06-20</p><p><code>A</code> 增加<code>favicon</code>字段</p></li><li><p>2020-06-10</p><p><code>A</code>添加了头图自定义（仅限<code>custom2</code>主题）</p><p><code>A</code>添加了模板主要颜色自定义（仅限<code>custom2</code>主题）</p></li><li><p>2020-05-17</p><p><code>A</code>添加页脚自定义信息（支持HTML代码）</p><p><code>A</code>添加备案信息行</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/17/1cdee418510f0e8defb7a4848b9e5d1a.png" alt="image-20200517192601574" /></p></li><li><p>2020-05-15</p><p><code>A</code>适配国际版时间问题</p><p><code>A</code>添加字段<code>BLOGGER_EMAIL</code></p></li><li><p>2020-04-25</p><p><code>A</code> QQ戳一戳功能<br /><code>A</code> 是否开启邮件通知<br /><code>F</code> <strong>QMSG字段修改为QMSG_KEY</strong></p></li><li><p>2020-04-20</p><p>添加了qq提醒</p></li><li><p>2020-04-19</p><p>基于懒人的版本重新构建（弃用了request）</p></li><li><p>2020-03-31</p><p>更新了新内容，整合了垃圾评论功能。</p></li><li><p>2020-03-24</p><p>对前一套模板进行了修改（重要内容用灰色背景显示）</p></li><li><p>2020-03-20</p><ul><li><p>增加了一套新的模板(感谢<a href="https://pbas.club/">🎉梨花町の肾兄さん🎉</a>提供好素材)，模板名为<code>custom1</code></p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/20/20200320141052.png" alt="提醒博主" width="25%"/><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/20/20200320141253.png" alt="博主回复" width="25%"/></li></ul></li><li><p>2020-02-16</p><ul><li>第一次发布，增加了微信server酱提醒</li></ul></li></ul><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/js/WithoutLine.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Valine评论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> valine-admin </tag>
            
            <tag> 评论提醒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用GitHub+Actions自动部署Hexo博客</title>
      <link href="/posts/6081157f/"/>
      <url>/posts/6081157f/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>早就听闻GitHub+Actions真相，于是今天便试了下，作为小康博客的第二个平台。至于为什么要自动部署，我在<a href="/posts/51b0fa77/index.html">另一篇文章</a>介绍过了。</p><h2 id="准备仓库"><a class="markdownIt-Anchor" href="#准备仓库"></a> 准备仓库</h2><ul><li>私有仓库： blog</li></ul><blockquote><p>这里是存放 Hexo 博客源码的</p></blockquote><ul><li>公有仓库： <code>用户名.github.io</code></li></ul><blockquote><p>这里是用来 public 静态页面的，最好是空的，当然是你现在的hexo博客也可以。</p></blockquote><h2 id="创建密钥对"><a class="markdownIt-Anchor" href="#创建密钥对"></a> 创建密钥对</h2><p>为了方便运行GitHub Actions时登录GitHub账号，我们使用SSH方式登录。就是要把设备的私钥交给GitHub Actions，公钥交给GitHub，需要去Settings里去配置。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"Github 的邮箱地址"</span>如 ssh-keygen -t rsa -C <span class="token string">"123123123@gmail.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>密钥对生成后默认的位置是用户文件。以windows为例：密钥对文件在<code>C:\Users\用户名</code>里，其中Users可能因为系统原因显示的是<code>用户</code>。这个文件夹里会有一个<code>.ssh</code>的目录，这个里面就是我们的密钥对。</p><p>其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。</p><ul><li><p>配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：github网站–&gt;Settings–&gt;SSH and GPG keys</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png" alt="" /><br /><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png" alt="" /></p><p>新增一个公钥，然后把<code>id_rsa.pub</code>这个文件用文本文档打开，将内容复制进去。</p></li><li><p>配置私钥，blog私有仓库的Settings-&gt;Secrets里添加私钥，名称为<code>HEXO_DEPLOY_PRIVATE_KEY</code></p><p>找到你的<font color=red><strong>私有项目</strong></font>（用于存储博客源码的仓库）</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142023.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142335.png" alt="" /></p><p>将你的私钥添加进去，名字写<code>HEXO_DEPLOY_PRIVATE_KEY</code> 。</p></li></ul><h2 id="添加actions"><a class="markdownIt-Anchor" href="#添加actions"></a> 添加Actions</h2><p>点击私有仓库里的<code>Actions</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142712.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142807.png" alt="" /></p><p>点击<code>New workflow</code>来创建一个新的actions。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142926.png" alt="" /></p><p>然后在内容框填入以下代码</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># workflow name</span><span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo Blog CI<span class="token comment"># master branch on push, auto run</span><span class="token key atrule">on</span><span class="token punctuation">:</span>   <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master      <span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build</span><span class="token punctuation">:</span>     <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest             <span class="token key atrule">steps</span><span class="token punctuation">:</span>    <span class="token comment"># check it to your workflow can access it</span>    <span class="token comment"># from: https://github.com/actions/checkout</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout Repository master branch      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master           <span class="token comment"># from: https://github.com/actions/setup-node  </span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Node.js 10.x       <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@master      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">"10.x"</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Hexo Dependencies      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">        npm install hexo-cli -g        npm install</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Deploy Private Key      <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token key atrule">HEXO_DEPLOY_PRIVATE_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.HEXO_DEPLOY_PRIVATE_KEY <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">        mkdir -p ~/.ssh/        echo "$HEXO_DEPLOY_PRIVATE_KEY" > ~/.ssh/id_rsa         chmod 600 ~/.ssh/id_rsa        ssh-keyscan github.com >> ~/.ssh/known_hosts</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Git Infomation      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">         git config --global user.name '名字'         git config --global user.email '邮件'</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy Hexo       <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">        hexo clean        hexo generate         hexo deploy</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后点击提交即可</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215143157.png" alt="" /></p><p>这样设置后就不需要在hexo命令三连进行部署了，直接将代码推送到私有仓库，1分钟后即可看到效果。</p><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><h3 id="域名问题"><a class="markdownIt-Anchor" href="#域名问题"></a> 域名问题</h3><blockquote><p>每次部署完都需要重新绑定域名</p></blockquote><p>解决方式很简单，在博客根目录的配置文件中找到<code>skip_render</code>字段，添加值<code>'CNAME'</code></p><p>如果是多个值的配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token string">'404/index.html'</span>  <span class="token punctuation">-</span> <span class="token string">'CNAME'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后在<code>/source</code>的目录中创建一个文件，命名为<code>CNAME</code>，里边的内容写你的域名。只写域名即可。例如<code>www.antmoe.com</code>，不需要添加<code>http(s)://</code></p><h3 id="其他问题"><a class="markdownIt-Anchor" href="#其他问题"></a> 其他问题</h3><p>请在下面留言，并写上常用的邮箱（及时得知博主的回复，邮箱不会泄露）和你的昵称。博主看到后会及时帮助解决问题的。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置picgo成为多平台图床工具</title>
      <link href="/posts/c9c6437b/"/>
      <url>/posts/c9c6437b/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>写这篇文章主要是记录下今天折腾<code>picgo</code>这个软件配置图床三个图床——又拍云、GitHub（jsdelivr加速）、阿里图床。（其实我以前一直用的是微博的图床）讲真，我觉得这个软件很不错。</p><h2 id="github"><a class="markdownIt-Anchor" href="#github"></a> Github</h2><p>我的GitHub用户名是<code>blogimg</code>我们首先是创建仓库。</p><ol><li><p>我创建的仓库名为<code>HexoStaticFile1</code>，那么在<code>PicGo</code>里的仓库名就为<code>blogimg/HexoStaticFile1</code>，格式是<code>用户名/仓库名</code></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213220633.png" alt="" /></p></li><li><p>分支名写master</p></li><li><p>获取Token</p><ol><li><p>进入个人设置</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221009.png" alt="" /></p></li><li><p>点击<code>Developer settings</code></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221304.png" alt="" /></p></li><li><p>点击左边的<code>Personal access tokens</code> ，然后点击右边的<code>Generate new token</code></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221443.png" alt="小康博客-2020/02/13/20200213221443" /></p></li><li><p>Note部分随便写即可，下边的权限把<code>repo</code>相关的打上勾即可。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221626.png" alt="小康博客-2020/02/13/20200213221626" /></p></li><li><p>接下来便会生成一个token，将它复制下来，因为一旦刷新网页，你将见不到这个token了。</p></li></ol></li><li><p>存储路径</p><p>根据自己的情况，但记住，最后一定写<code>\</code>不然软件会将他与文件名拼接</p></li><li><p>自定义域名</p><p>这里写<code>jsdeliver</code>的，不然没办法起到cdn加速的效果。</p><p><code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code></p><p>用户名与仓库名按照自己的实际情况填写，例如我的<code>https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1</code></p></li></ol><h3 id="github图片上传失败"><a class="markdownIt-Anchor" href="#github图片上传失败"></a> GitHub图片上传失败</h3><p>由于不可描述的原因，在大陆使用PicGo+GitHub上传图片时总会遇到上传失败的问题。不过不要慌，GitHub+Jsdeliver这么好的东西，用还是要用的。</p><p>因此我的解决方案就是：<a href="https://github.com/yumusb/autoPicCdn">autoPicCdn</a>+免费的国外虚拟主机。当然了，如果你有服务器（国外的）那么也是可以的。</p><div class='tip success'><p>2020-06-01补充一种方法<p></div><p>如果你不愿意自己找虚拟主机，那么可以使用<a href="https://chuibi.cn/">chuibi图床</a>。这个也是作者的图床平台。</p><ol><li><p>登录账号（GitHub账号）</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/a64f33d4f0fca20b4858906626ea3f3a.png" alt="image-20200601080023571" /></p></li><li><p>接下来再次点击自己，进行设置</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/b4832a540705b961a3b6c4ec054bbd12.png" alt="image-20200601080306882" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/3776fe4a3f5c3d7e3f9a537cb5957c79.png" alt="image-20200601080407714" /></p></li><li><p>填写完毕后，刷新页面即可看到你的接口信息。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/45fafff05a2150f675c6e8e0464f1a44.png" alt="image-20200601080444977" /></p><p>温馨提示：地址泄露意味着别人也可以用你的接口了！</p></li><li><p>接下来在PICGO安装插件即可完成操作了。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/653cbf72856e16ee88fdd833f3da2ffa.png" alt="image-20200601081417256" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/059c4fb8084542866957477bb97efe12.png" alt="image-20200601081506842" /></p></li></ol><div class='tip'><p>2020-06-01之前的方法<p></div><div class="note warning icon"><p>服务器/虚拟主机 一定要是国外的。否则还是上传失败很正常。</p></div><p>思路很简单，首先clone项目到自己本地，然后编辑<code>up.php</code>文件，修改对应需要修改的参数。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"REPO"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"testforapi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//必须是下面用户名下的公开仓库</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"USER"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"yumusb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//必须是当前GitHub用户名</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"MAIL"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"yumusb@foxmail.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"TOKEN"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"YourToken"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">## 数据库配置（添加了统计上传文件功能，使用mysql存储）</span><span class="token variable">$database</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>  <span class="token string single-quoted-string">'dbname'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'pic'</span><span class="token punctuation">,</span>  <span class="token string single-quoted-string">'host'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'localhost'</span><span class="token punctuation">,</span>  <span class="token string single-quoted-string">'port'</span> <span class="token operator">=></span> <span class="token number">3306</span><span class="token punctuation">,</span>  <span class="token string single-quoted-string">'user'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'pic'</span><span class="token punctuation">,</span>  <span class="token string single-quoted-string">'pass'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'123456'</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'remote_imgs'</span><span class="token punctuation">;</span> <span class="token comment">//存放数据表名字</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p class="div-border green">虚拟机或服务器如何使用这里不过多介绍。</p><p>接下来，便可以白嫖GitHub的图床了。</p><ol><li><p>在picgo的插件里下载<code>web-uploader</code>插件。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/d0314981d14e50240d89746c56785e1e.png" alt="" /></p></li><li><p>配置插件</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/9090f0ff00f18e564967fdd333cfff1e.png" alt="" /></p><table><thead><tr><th style="text-align:center">参数配置</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center">API地址</td><td style="text-align:center">你的<code>up.php</code>文件的地址。</td></tr><tr><td style="text-align:center">POST参数名</td><td style="text-align:center">pic</td></tr><tr><td style="text-align:center">JSON路径</td><td style="text-align:center">data.url</td></tr></tbody></table><blockquote><p><code>up.php</code>文件地址就是你的服务器/虚拟主机绑定的域名+<code>/up.php</code>。例如：我的虚拟主机的域名为<code>https://www.antmoe.com/</code>那么API的地址就是<code>https://www.antmoe.com/up.php</code></p></blockquote></li></ol><div class="note  icon custom iconfont icon-icon_sketch" style="background: #fdf8ea;border-left-color: #f0ad4e;"><p>关于项目的说明</p></div><p>这个项目早期版本是无数据库版本的，即不需要链接数据库。</p><p>这个版本这里提供下载地址：<a href="https://tzk.lanzous.com/icf3wre">https://tzk.lanzous.com/icf3wre</a>。</p><p>但推荐使用最新版本，最新版本虽然需要使用数据库，但是可以记录避免一张图片上传多次的问题。</p><div class="note  icon custom iconfont icon-icon_link" style="background: #fdf8ea;border-left-color: #f0ad4e;"><p>本人使用的免费虚拟主机</p></div><ul><li><p>爱网云免费虚拟主机</p><p>网页会有广告，不需要特殊方式即可打开。<a href="http://t.cn/A6AY96wL">地址</a></p></li><li><p>000webhost</p><p>可能需要特殊方式才能打开，注册。<a href="http://t.cn/RoTmO59">地址</a></p></li><li><p>更多</p><p>请大家自行探索</p></li></ul><h2 id="又拍云"><a class="markdownIt-Anchor" href="#又拍云"></a> 又拍云</h2><p>因为又拍云是国内的平台，且全为中文。因此不详细说明了。</p><p>又拍云首先要创建一个云存储。然后绑定上自己的域名。</p><p>至于操作员，在账户管理中可以添加操作员。</p><h2 id="阿里图床"><a class="markdownIt-Anchor" href="#阿里图床"></a> 阿里图床</h2><p>这里使用阿里图床主要是利用了第三方的插件及第三方的接口。</p><p>插件是<code>web-uploader</code>，软件里可以直接下载。然后配置我直接给出，按照我的填入即可。</p><table><thead><tr><th style="text-align:center">API地址</th><th style="text-align:center"><code>https://api.abcyun.co/api/picbed/index/type/ali/token/5d8f31cf6a8ab</code></th></tr></thead><tbody><tr><td style="text-align:center">POST参数名</td><td style="text-align:center"><code>image</code></td></tr><tr><td style="text-align:center">JSON路径</td><td style="text-align:center"><code>url.ali</code></td></tr><tr><td style="text-align:center">自定义请求体</td><td style="text-align:center"><code>&#123;&quot;type&quot;:&quot;ali&quot;&#125;</code></td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213222645.png" alt="小康博客-2020/02/13/20200213222645" /></p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>由于GitHub下载速度很慢（其实用迅雷挺快的），所以我在这里提供一个蓝奏云的链接。版本是<code>2.2.2</code> <a href="https://www.lanzous.com/i9bs4sf" class="button button-glow button-border button-rounded button-primary">点击下载</a></p><blockquote><p>我感觉阿里图床挺不错的，就怕以后会像微博那样突然403，所以建议大家把重要的图片放到GitHub上，不是很重要的可以使用阿里的图床。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 优雅写作 </category>
          
          <category> 图床配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo利用coding自动部署</title>
      <link href="/posts/51b0fa77/"/>
      <url>/posts/51b0fa77/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>昨天写了一篇利于云环境写博客，但是让群里大佬们看了下。评论道：“写的不错，但还是觉得这个云环境太繁琐了，没有CI/CD自动化部署方便”。于是我便百度查了下，网上文章大部分是通过Travis CI整的，但我的源文件在coding呀！于是我便尝试了使用coding自动化部署。</p><p>为什么要使用自动部署呢？</p><p>因为随着我们的长时间写文章，生成时间也就更长。在加上要加载插件。如果你换一个电脑更明显，首先你要安装node环境然后······</p><p>自动部署只需要把你的源代码提交，云会自动帮你执行编译过程，从而省去了自己编译的过程。</p><h2 id="1-创建访问认证"><a class="markdownIt-Anchor" href="#1-创建访问认证"></a> 1. 创建访问认证</h2><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191209.jpeg" alt="1.png" /></p><p>如图，创建令牌，然后描述随便写，全写给<code>project:depot</code>即可，不然没办法拉去仓库。创建完成后会出现id，我们复制这个id并保存下来，因为只出现一次。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191213.jpeg" alt="2.png" /><br /><img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbpxp27h0gj30qn03uq2y.jpg" alt="3.png" /></p><p>在此时我们就拿到了访问项目的账号和密码。此时我们的访问地址变成了<code>https://user.name:user.password@项目地址</code>举个简单的例子：</p><p>假如说我的</p><ul><li>令牌用户名是：<code>root</code></li><li>令牌密码是：<code>abcdefg</code></li><li>项目地址是<code>https://e.coding.net/test/test.git</code></li></ul><p>那么我们的访问地址就是<code>https://root:abcdefg@e.coding.net/test/test.git</code></p><p>也就是<code>https://user.name:user.password@地址</code>这样的格式。</p><h2 id="2-编写构建"><a class="markdownIt-Anchor" href="#2-编写构建"></a> 2. 编写构建</h2><p><em>如果你没有构建功能，请到左下角项目设置-&gt;项目与成员-&gt;功能开关 将构建与部署的功能打开。</em></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191217.jpeg" alt="4.png" /></p><p>如图 点击构建，再点击下边的 新建构建计划配置</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191220.jpeg" alt="5.png" /></p><p>然后我们我们的代码源选择CODING，仓库只有一种选择。</p><p>配置来源选择自定义，勾选下边的前往配置详情。然后选择文本编辑器</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191223.jpeg" alt="6.png" /></p><p>将下边的代码复制上去。注意修改你自己的git地址。注意<code>sh 'git clone https://账号:密码@地址 .'</code>最后边的<code>.</code>千万别删掉。删掉可能导致发布不成功。（虽然提示成功）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pipeline <span class="token punctuation">&#123;</span>  agent any  stages <span class="token punctuation">&#123;</span>    stage<span class="token punctuation">(</span><span class="token string">'克隆项目'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      steps <span class="token punctuation">&#123;</span>        <span class="token function">sh</span> <span class="token string">'git clone https://账号:密码@地址 .'</span>        <span class="token function">sh</span> <span class="token string">'ls -a'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    stage<span class="token punctuation">(</span><span class="token string">'安装依赖'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      steps <span class="token punctuation">&#123;</span>        <span class="token function">sh</span> <span class="token string">'ls -a'</span>        <span class="token function">sh</span> <span class="token string">'npm install -g hexo-cli'</span>        <span class="token function">sh</span> <span class="token string">'npm install hexo --save'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    stage<span class="token punctuation">(</span><span class="token string">'构建发布'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      steps <span class="token punctuation">&#123;</span>        <span class="token function">sh</span> <span class="token string">'hexo clean &amp;&amp; hexo g &amp;&amp; hexo d'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为什么不能删那个点<code>.</code>？</p><blockquote><p>那个点代表当前目录，也就是把你的项目克隆到当前文件。</p><p>2020-04-10更新：因为coding自带环境存在node，因此不再选择环境</p></blockquote><p>然后我们点击左上角的保存。</p><h2 id="3-上传"><a class="markdownIt-Anchor" href="#3-上传"></a> 3. 上传</h2><p>我们新建一篇文章，我本人呢是边写这篇文章边测试的。所以当这篇文章发表出来的时候也就说明自动部署成功了。</p><p>我们进行简单的文章推送。这里我使用的是git小乌龟。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191227.jpeg" alt="7.png" /></p><p>推送成功后coding的自动部署已经在运行了</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191230.jpeg" alt="8.png" /></p><p><img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbpzdlsk0kj30w005hwek.jpg" alt="9.png" /></p><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><ol><li>请确保你的pages项目仓库是公开的，否则请同样配置访问密钥，并修改hexo根目录下的配置文件。</li></ol><p>如果你的pages服务在coding，并且仓库是私有的，那么请添加项目令牌。并替换博客根目录的地址。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191233.jpeg" alt="10.png" /></p><p>然后替换博客根目录下 配置文件中的git地址。</p><p>同样的地址也是<code>https://username:password@项目地址</code></p><p>假如说我的</p><ul><li>令牌用户名是：<code>root</code></li><li>令牌密码是：<code>abcdefg</code></li><li>项目地址是<code>https://e.coding.net/test/test.git</code></li></ul><p>那么在配置文件中的地址就是<code>https://root:abcdefg@e.coding.net/test/test.git</code></p><h3 id="coding可以部署部署几次"><a class="markdownIt-Anchor" href="#coding可以部署部署几次"></a> coding可以部署部署几次</h3><p>coding可以构建多少次。这个问题我曾问过官方：官方的回答是：“CODING的持续集成，每周构建次数是200次，单次构建时长是30分钟。每周一重置次数。”官方还说后期会上线持续集成升级包。</p><p>最后，如果我的文章对你有帮助，那么你可以点下边的赞赏按钮，请作者喝杯咖啡哦！</p><p>如果图片失效请在下方留言，或联系作者。</p><center><font color=red size=5><b>原创不易，所有文字及图片都是我自己一个一个弄得。</b></font></center><center><font color=red size=5><b>搬砖党请尊重一下作者，转载请标明出处。</b></font></center>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过云环境部署Hexo静态博客</title>
      <link href="/posts/ecb793d4/"/>
      <url>/posts/ecb793d4/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>新型冠状病毒好可怕，出门还得带口罩<img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2k1hrj300v00v0pq.jpg" alt="口罩-小康博客" /></p><p>建议在阅读本教程前先学会如何使用hexo。<font color=red><strong>此教程不是零基础学会hexo系列。</strong></font></p><ol><li><p>我为什么要出这份教程？</p><p>首先说明，我自己也是才转到静态博客不久。今天应该是第八天。当初迟迟没有转到静态博客的主要原因是因为发博客不方便。毕竟hexo是本地的。但是一次偶然间，我发现了云环境（其实就是一个网页版的vscode），但其提供服务环境（Ubuntu、node等）。于是我突发奇想，试试能不能通过这个来实现在线写博客。最后成功了，因为我觉得很简单。<img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbk1iwinatj300x011a9t.jpg" alt="脸红-小康博客" /></p></li><li><p>实现云部署需要准备什么。</p><p>必须：</p><ul><li><p>git的基本知识</p><p>我认为这一点是必须的，不然不好操作。</p></li><li><p>两个git仓库</p><p>coding，码云，GitHub等均可以。</p></li></ul><p>非必须：</p><ul><li><p>密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"your_email@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里不写详细教程了。总之生成完之后你的用户目录里会出现一个.ssh的隐藏文件（如果看不到，请打开查看隐藏的设置）</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191326.jpeg" alt="QQ截图20200208182813.png" /></p><p>其中<code>.pub</code>结尾的就是你的公钥了。这个是我们一会儿需要用到的。</p><p>如果使用这种方式，无法使用hexo自动部署。</p></li></ul></li></ol><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>首先我们来捋一下思路。</p><ol><li>既然我们要部署静态博客，那么就需要将<code>public</code>目录上传。（当然，<code>hexo d</code>会帮我我们做这件事情）所以我们这时就需要一个仓库。为了方便我管他叫<font color=red><strong>仓库1</strong></font></li><li>那我们想做的还有在线写博客，那么就需要将博客的全部源代码上传，这时我们就又需要一个仓库。我管他叫<font color=red><strong>仓库2</strong></font></li></ol><p>既然明白了两个仓库的作用，那我们就可以开始了。</p><h2 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h2><p>这里我使用<code>coding</code>，新建两个仓库。个人版与团队版都一样。</p><p>创建两个项目，我这里一个叫page代表仓库1一个叫home代表仓库2</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191331.jpeg" alt="1.png" /></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191334.jpeg" alt="2.png" /><br />然后我们为了方便添加公钥，如果上一步没有生成公钥那么认证的时候可以使用账号密码。（将公钥文件右键用文本文档打开，复制里边的内容即可）</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191338.jpeg" alt="3.png" /><br /><img src="https://file.acs.pw/picGo/2022/03/06/20220306191340.jpeg" alt="4.png" /></p><h2 id="1-配置文件"><a class="markdownIt-Anchor" href="#1-配置文件"></a> 1. 配置文件</h2><p>此步骤是为了方便演示，正常情况下你已经可以通过这个命令部署了。所以如果已经配置了的小伙伴无需新建仓库，来执行此步骤。<font color=red><strong>保留原来的即可。并跳过此步骤看下一个步骤</strong></font></p><p>这里我将我曾经的博客下载下来作为演示，首先将根目录的配置文件中的配置添加上我们的仓库。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@e.coding.net<span class="token punctuation">:</span>imtzk/page.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>安装插件，这样才可以使用<code>hexo d</code>的自动部署</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后我们<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>测试下是否能够自动部署。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191343.jpeg" alt="6.png" /></p><p>可以看到 成功部署了</p><h2 id="2-上传源文件"><a class="markdownIt-Anchor" href="#2-上传源文件"></a> 2. 上传源文件</h2><p>我们上传我们的博客源码到我们的第二个仓库。</p><p>那么执行的操作是：</p><ol><li><p>在博客目录打开命令行工具</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191347.jpeg" alt="7.png" /></p><p>命令行工具自行斟酌，使用git的bash也可以。不过我在这里推荐一款<code>cmder</code>的工具。很好用，我很喜欢<img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2jr8xj300v00w0sh.jpg" alt="-小康博客" /></p></li><li><p>首先输入命令<code>git init</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191350.jpeg" alt="8.png" /></p></li><li><p>然后执行添加文件的命令<code>git add .</code></p><p>这里的<code>.</code>代表添加此目录所有文件，但默认不会添加<code>public</code>和<code>moudles</code>等目录。你也不需要担心，因为这些都是程序生成的。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191353.jpeg" alt="9.png" /></p></li><li><p>接下来是提交修改命令<code>git commit -m '第一次提交'</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191355.gif" alt="gif-1" /></p></li><li><p>接下来我们添加远程的仓库</p><p>进入项目，点击代码仓库就可以看到我们的项目地址了。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191400.jpeg" alt="10.png" /></p><p>因为我已经添加过公钥了，所以我们直接用ssh的方式链接。输入以下命令即可上传到远程仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin 你的地址<span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191402.gif" alt="git-2.gif" /></p></li><li><p>检查一下</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191405.jpeg" alt="11.png" /></p><p>我已经成功将博客源代码传到了第二个仓库。</p></li></ol><h2 id="3-使用云环境"><a class="markdownIt-Anchor" href="#3-使用云环境"></a> 3. 使用云环境</h2><h3 id="写文章"><a class="markdownIt-Anchor" href="#写文章"></a> 写文章</h3><p>为什么使用coding呢？它的优势就来了，它可以直接点进去云环境，如果使用其他平台需要进入腾讯开发者平台。大家自行百度，这里不提供链接了。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191408.jpeg" alt="12.png" /></p><p>进入云环境后先别急着创建项目，我们先点设置，将公钥黏贴到我们的coding中。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191410.jpeg" alt="13.png" /></p><p>这一步和开始我们做的那个一样。这里就不演示了。</p><p>将公钥添加到coding后，我们开始创建项目。</p><ol><li><p>新建工作空间</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191412.jpeg" alt="14.png" /></p><p>如图所示，环境选择<code>node.js</code>，当然选服务器或者<code>Ubuntu</code>也可以，至于怎么配置自行百度。<img src="https://file.acs.pw/picGo/2022/03/06/20220306191420.jpeg" alt="-小康博客" />这里强烈不建议非<code>node.js</code>环境。</p><p>代码来源选择仓库，仓库的地址就是我们第二个仓库的地址。</p></li><li><p>创建</p><p>创建完成后，我们进入工作空间。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191415.jpeg" alt="15.png" /></p></li><li><p>初始化环境</p><p>等上一步加载完之后，就会出现这个界面。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191428.jpeg" alt="16.png" /></p><p>如果你的界面打开之后是英文的，那么点击左边倒数第二个按钮，然后卸载掉<code>Chinese...</code>这个插件，然后在重装一下就好了。（重装后需要重新进入环境，右下角有提示。）</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191430.jpeg" alt="17.png" /></p><p>等待一会儿，我们的项目也就克隆了过来。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191433.jpeg" alt="18.png" /></p><p>如果迟迟不出现，那么点击工具栏的终端-&gt;新建终端-&gt;输出。就可以看到进度了。如果出现错误应该就是你没有加公钥的问题了。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191436.jpeg" alt="19.png" /></p></li><li><p>给cloud studio安装hexo</p><p>点击工具栏的终端-&gt;新建终端-&gt;下边点击终端。输入一下两个命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-clihexo <span class="token function">install</span> hexo --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191438.gif" alt="gif-3.gif" /></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191441.jpeg" alt="20.png" /></p><p>等待安装完成即可。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191444.jpeg" alt="21.png" /></p><p>不出意外，看到上面的提示 说明安装完成了，可以运行一下命令<code>hexo g</code>测试是否生成了文章。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191446.gif" alt="git-4.gif" /></p><p>然后我们可以看到左侧，已经生成了<code>public</code>目录，并且终端也没有报错。（如果报错，说明你的文件有问题，检查一下主题文件是否存在。）</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191449.jpeg" alt="22.png" /></p></li><li><p>用cloud studio写第一篇文章</p><p>在终端中输入命令<code>hexo new 文章名</code>来创建文章</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191452.jpeg" alt="23.png" /></p><p>然后打开<code>/source/_posts</code>就可以看到你刚刚创建的文章了。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191455.jpeg" alt="24.png" /></p><p>写完文章后，（这个里边也是<code>ctrl+s</code>保存文章哦）</p><p>我们设置一下我们的git标识 也就是邮箱和名字。这是git必须要求设置的。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.email <span class="token string">"you@example.com"</span><span class="token function">git</span> config --global user.name <span class="token string">"Your Name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来我们在终端输入hexo发布三连<code>hexo cl&amp;&amp;hexo g &amp;&amp; hexo d</code>的命令。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191459.jpeg" alt="25.png" /></p><p>这是已经发布成功了。</p></li><li><p>查看文章</p><p>上一步我们已经发布完成了。接下来打开看一下。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191502.jpeg" alt="26.png" /></p><p>可以看到我们刚刚上传了，因为coding需要实名，而我还没有实名认证，因此不演示界面了。</p></li><li><p>结束</p><p>此时我们就解决了在线写文章的问题了。</p></li></ol><h3 id="同步文章到仓库"><a class="markdownIt-Anchor" href="#同步文章到仓库"></a> 同步文章到仓库</h3><p>为什么会有这一步？其实很简单，你写的文章都在你的云环境中，并没有同步到你的第二个仓库里（是不是忘了还有这个仓库？<img src="https://file.acs.pw/picGo/2022/03/06/20220306191505.jpeg" alt="-小康博客" />）接下来我们就将代码同步到第二个仓库里。</p><ol><li><p>添加代码<code>git add .</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191510.gif" alt="git-5.gif" /></p></li><li><p>然后提交<code>git commit -m 'cloud提交'</code></p><p>引号里边的内容根据自己写。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191513.gif" alt="git-6.gif" /></p></li><li><p>提交代码到远程仓库<code>git push origin master</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191515.gif" alt="git-7.gif" /></p><p>提交完后可以看到代码仓库的提交记录</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191518.jpeg" alt="27.png" /></p></li></ol><h2 id="4-克隆到本地"><a class="markdownIt-Anchor" href="#4-克隆到本地"></a> 4. 克隆到本地</h2><p>也就是本地编辑，那么第一步需要克隆项目到本地。</p><p><code>git clone 你的项目地址</code></p><p>注意这里的项目地址指的是仓库2，也就是博客全部文件的那个仓库。</p><p>克隆完之后，在此目录打开命令行工具，<code>npm install hexo --save</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191520.jpeg" alt="5.png" /></p><p>等待安装完成后，就可以正常的操作了。也就是你平时你怎么用，克隆回来还是怎么用。</p><h3 id="上传"><a class="markdownIt-Anchor" href="#上传"></a> 上传</h3><p>这里讲一下如何将本地的文件同步到第二个仓库里。</p><ol><li><p>将项目克隆到本地，也就是上面文字介绍的。这里不演示了。</p></li><li><p>同样的我新建一篇文章，并且编辑。(这里跳过了部署的过程，当然你可以部署完后在同步)</p></li><li><p>添加文件<code>git add .</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191525.jpeg" alt="28.png" /></p></li><li><p>提交修改<code>git commit -m '本地修改'</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191527.jpeg" alt="29.png" /></p></li><li><p>推送到远端<code>git push origin master</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191529.jpeg" alt="30.png" /></p></li></ol><p>至此，基本上就完成了大部分操作了。</p><h2 id="5-其他问题"><a class="markdownIt-Anchor" href="#5-其他问题"></a> 5. 其他问题</h2><p>在日常使用的工程中，可能会遇到这种情况</p><blockquote><p>本地代码推送到了仓库，使用<code>cloud studio</code>发表了两个文章，在使用本地的代码无法推送了。或者是本地推送了几次，<code>cloud studio</code>无法推送了。</p></blockquote><p>这样的原因很简单，是因为你当前的版本与服务器的版本不一致造成的。这里涉及到git协同工作的问题了。</p><p>如果又能力的小伙伴可以使用<code>git pull</code>把最新的提交拉去下来。</p><p>当然我相信大多数小伙伴是不太会操作的。那解决方法也很简单，删掉以前的文件（或云环境），重新clone（创建一个云环境）一下就好了。</p><p>当然删除之前记得备份一下仓库里没有的文章或修改的配置。</p><p>所以 强烈建议大家每次发表完文章，同步一下自己的修改到第二个仓库。</p><p>最后，如果我的文章对你有帮助，那么你可以点下边的赞赏按钮，请作者喝杯咖啡哦！</p><p>如果图片失效请在下方留言，或联系作者。</p><center><font color=red size=5><b>原创不易，所有文字及图片都是我自己一个一个弄得。</b></font></center><center><font color=red size=5><b>搬砖党请尊重一下作者，转载请标明出处。</b></font></center>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优雅部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo安装并使用Butterfly主题</title>
      <link href="/posts/75a6347a/"/>
      <url>/posts/75a6347a/</url>
      
        <content type="html"><![CDATA[<div class="note warning icon"><p>由于目前主题已更新，此文件中部分配置可能失效。请参考作者博客或文档进行。<a class="customcolor" href="https://docs.jerryc.me/" title="文档地址" target="_blank" rel="">文档地址</a></p></div><h2 id="前置说明"><a class="markdownIt-Anchor" href="#前置说明"></a> 前置说明</h2><p>本片文章为本人想要换hexo的主题时所写。因此省略<code>node</code>和<code>hexo</code>的安装，直接在初始化博客开始。</p><h2 id="初始化博客"><a class="markdownIt-Anchor" href="#初始化博客"></a> 初始化博客</h2><p>输入一下命令，并等待程序初始化完成。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init MyHexoBlog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191130.jpeg" alt="1.png" /></p><p>此时已初始化完成。</p><h2 id="安装主题"><a class="markdownIt-Anchor" href="#安装主题"></a> 安装主题</h2><blockquote><p>如果没有cheerio安装<code>npm install cheerio@0.22.0 --save</code></p></blockquote><p>在你的博客根目录里</p><p><code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</code><br />如果想要安装比较新的dev分支，可以</p><p><code>git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</code></p><p>我这里选择dev分支。</p><p>等待克隆完成。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191134.jpeg" alt="2.png" /></p><h2 id="启用主题"><a class="markdownIt-Anchor" href="#启用主题"></a> 启用主题</h2><p>修改站点配置文件_config.yml，把主题改为Butterfly</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> Butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装： npm install hexo-renderer-pug hexo-renderer-stylus --save or yarn add hexo-renderer-pug hexo-renderer-stylus</p></blockquote><h2 id="平滑升级"><a class="markdownIt-Anchor" href="#平滑升级"></a> 平滑升级</h2><p>为了主题的平滑升级, <code>Butterfly</code> 使用了 data files特性。</p><p>推荐把主题默认的配置文件<code>_config.yml</code>复製到 Hexo 工作目录下的<code>source/_data/butterfly.yml</code>，如果<code>source/_data</code>的目录不存在那就创建一个。</p><blockquote><p>注意，如果你创建了<code>butterfly.yml</code>, 它将会替换主题默认配置文件<code>_config.yml</code>里的配置项 (不是合併而是替换), 之后你就只需要通过git pull的方式就可以平滑地升级 <code>theme-butterfly</code>了。</p></blockquote><h2 id="主题页面"><a class="markdownIt-Anchor" href="#主题页面"></a> 主题页面</h2><h3 id="page-front-matter"><a class="markdownIt-Anchor" href="#page-front-matter"></a> Page Front-matter</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span><span class="token key atrule">date</span><span class="token punctuation">:</span><span class="token key atrule">type</span><span class="token punctuation">:</span> （tags<span class="token punctuation">,</span>link<span class="token punctuation">,</span>categories这三个页面需要配置）<span class="token key atrule">comments</span><span class="token punctuation">:</span> (是否需要显示评论，默认true)<span class="token key atrule">description</span><span class="token punctuation">:</span><span class="token key atrule">top_img</span><span class="token punctuation">:</span> (设置顶部图)<span class="token key atrule">mathjax</span><span class="token punctuation">:</span>katex<span class="token punctuation">:</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="post-front-matter"><a class="markdownIt-Anchor" href="#post-front-matter"></a> Post Front-matter</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span><span class="token key atrule">date</span><span class="token punctuation">:</span><span class="token key atrule">tags</span><span class="token punctuation">:</span><span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span><span class="token key atrule">description</span><span class="token punctuation">:</span><span class="token key atrule">top_img</span><span class="token punctuation">:</span> （除非特定需要，可以不写）comments  是否显示评论（除非设置false<span class="token punctuation">,</span>可以不写）<span class="token key atrule">cover</span><span class="token punctuation">:</span>  缩略图<span class="token key atrule">toc</span><span class="token punctuation">:</span>  是否显示toc （除非特定文章设置，可以不写）<span class="token key atrule">toc_number</span><span class="token punctuation">:</span> 是否显示toc数字 （除非特定文章设置，可以不写）<span class="token key atrule">copyright</span><span class="token punctuation">:</span> 是否显示版权 （除非特定文章设置，可以不写）<span class="token key atrule">mathjax</span><span class="token punctuation">:</span><span class="token key atrule">katex</span><span class="token punctuation">:</span>hide<span class="token punctuation">:</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标签页"><a class="markdownIt-Anchor" href="#标签页"></a> 标签页</h3><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入<code>hexo new page tags</code></p></li><li><p>你会找到<code>source/tags/index.md</code>这个文件</p></li><li><p>修改这个文件：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 标签<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-02-02 10:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="分类页"><a class="markdownIt-Anchor" href="#分类页"></a> 分类页</h3><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入<code>hexo new page categories</code></p></li><li><p>你会找到source/categories/index.md这个文件</p></li><li><p>修改这个文件：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 分类<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-02-02 10:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="友情链接"><a class="markdownIt-Anchor" href="#友情链接"></a> 友情链接</h3><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入 <code>hexo new page link</code></p></li><li><p>你会找到``source/link/index.md`这个文件</p></li><li><p>修改这个文件：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 友情链接<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-02-02 10:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"link"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加友链</p><p>在Hexo博客目录中的<code>source/_data</code>，创建一个文件<code>link.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">class</span><span class="token punctuation">:</span>  <span class="token key atrule">class_name</span><span class="token punctuation">:</span> 友情链接  <span class="token key atrule">link_list</span><span class="token punctuation">:</span>    <span class="token key atrule">1</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> 小康博客      <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.antmoe.com      <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//img.antmoe.com/avatar.png      <span class="token key atrule">descr</span><span class="token punctuation">:</span> 每天进步一点点    <span class="token key atrule">2</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> test      <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.xxxxxxcn/      <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//xxxxx/avatar.png      <span class="token key atrule">descr</span><span class="token punctuation">:</span> test  <span class="token key atrule">class2</span><span class="token punctuation">:</span>   <span class="token key atrule">class_name</span><span class="token punctuation">:</span> 链接无效   <span class="token key atrule">link_list</span><span class="token punctuation">:</span>     <span class="token key atrule">1</span><span class="token punctuation">:</span>       <span class="token key atrule">name</span><span class="token punctuation">:</span> test       <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//blog.xxx.com       <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//img.antmoe.com/avatar.png       <span class="token key atrule">descr</span><span class="token punctuation">:</span> test     <span class="token key atrule">2</span><span class="token punctuation">:</span>       <span class="token key atrule">name</span><span class="token punctuation">:</span> test       <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.axxxx.cn/       <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//img.antmoe.com/avatar.png       <span class="token key atrule">descr</span><span class="token punctuation">:</span> test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>友情链接界面设置</p><p>需要添加友情链接，可以在<code>Butterfly.yml</code>配置<br />可在友情链接上写上自己的个人资料，方便其他人添加。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Flink</span><span class="token punctuation">:</span>  <span class="token key atrule">headline</span><span class="token punctuation">:</span> 友情链接  <span class="token key atrule">info_headline</span><span class="token punctuation">:</span> 我的Blog资料  <span class="token key atrule">name</span><span class="token punctuation">:</span> Blog 名字： 小康博客  <span class="token key atrule">address</span><span class="token punctuation">:</span> Blog 地址： https<span class="token punctuation">:</span>//www.antmoe.com/  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> Blog 头像： https<span class="token punctuation">:</span>//img.antmoe.com/avatar.jpg  <span class="token key atrule">info</span><span class="token punctuation">:</span> Blog 简介： 一个收藏回忆与分享技术的地方！  <span class="token key atrule">comment</span><span class="token punctuation">:</span> 如果需要交换友链<span class="token punctuation">,</span>请留言<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="音乐界面"><a class="markdownIt-Anchor" href="#音乐界面"></a> 音乐界面</h3><p>音乐界面参考https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</p><h3 id="电影"><a class="markdownIt-Anchor" href="#电影"></a> 电影</h3><p>电影界面参考https://github.com/mythsman/hexo-douban</p><p>本人没有设置这两个界面，因此也没有详细的安装教程</p><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><h3 id="语言"><a class="markdownIt-Anchor" href="#语言"></a> 语言</h3><p>修改站点配置文件 <code>_config.yml</code></p><p>默认语言是 <code>en</code></p><p>主题支持三种语言</p><ul><li>default(en)</li><li>zh-CN (简体中文)</li><li>zh-TW (繁体中文)</li></ul><h3 id="网站资料"><a class="markdownIt-Anchor" href="#网站资料"></a> 网站资料</h3><p>修改网站各种资料，例如标题、副标题和邮箱等个人资料，请修改博客根目录的<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 小康博客<span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'小康博客'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">'一个收藏回忆与分享技术的地方！'</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> 关键词<span class="token key atrule">author</span><span class="token punctuation">:</span> 作者<span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN<span class="token key atrule">timezone</span><span class="token punctuation">:</span> <span class="token string">'时区'</span><span class="token key atrule">email</span><span class="token punctuation">:</span> 邮箱<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="导航菜单"><a class="markdownIt-Anchor" href="#导航菜单"></a> 导航菜单</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Home</span><span class="token punctuation">:</span> / <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>home  <span class="token key atrule">Archives</span><span class="token punctuation">:</span> /archives/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>archive  <span class="token key atrule">Tags</span><span class="token punctuation">:</span> /tags/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span> /categories/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>folder<span class="token punctuation">-</span>open  <span class="token key atrule">Link</span><span class="token punctuation">:</span> /link/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>link  <span class="token key atrule">About</span><span class="token punctuation">:</span> /about/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>heart  <span class="token comment">#List||fa fa-list:</span>   <span class="token comment"># - Music || /music/ || fa fa-music</span>   <span class="token comment"># - Movie || /movies/ || fa fa-film</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>必须是 /xxx/，后面||分开，然后写图标名。菜单名称可自己修改</p><p>格式：</p><p>显示名称:</p><p>路径||icon</p><p>sub-menu格式</p><p>名称||icon:</p><p>名称 || 路径 || icon</p></blockquote><p>导航的文字可以更改</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">首页</span><span class="token punctuation">:</span> / <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>home  <span class="token key atrule">时间轴</span><span class="token punctuation">:</span> /archives/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>archive  <span class="token key atrule">标籤</span><span class="token punctuation">:</span> /tags/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>tags  <span class="token key atrule">分类</span><span class="token punctuation">:</span> /categories/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>folder<span class="token punctuation">-</span>open  <span class="token key atrule">清单||fa fa-heartbeat</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 音乐 <span class="token punctuation">|</span><span class="token punctuation">|</span> /music/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>music    <span class="token punctuation">-</span> 照片 <span class="token punctuation">|</span><span class="token punctuation">|</span> /Gallery/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>picture<span class="token punctuation">-</span>o    <span class="token punctuation">-</span> 电影 <span class="token punctuation">|</span><span class="token punctuation">|</span> /movies/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>film  <span class="token key atrule">友链</span><span class="token punctuation">:</span> /link/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>link  <span class="token key atrule">关于</span><span class="token punctuation">:</span> /about/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>heart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h3><p>Butterfly 支持了 Material Theme全部 5 种代码高亮样式：</p><ul><li>default</li><li>darker</li><li>pale night</li><li>light</li><li>ocean</li></ul><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_theme</span><span class="token punctuation">:</span> light <span class="token comment">#代码高亮主题</span><span class="token key atrule">highlight_copy</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#代码是否启用复制功能</span><span class="token key atrule">highlight_shrink</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#true代码框不展开，需点击 '>' 打开 false展开 none不显示'>'按钮，代码块展开</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="自动换行"><a class="markdownIt-Anchor" href="#自动换行"></a> 自动换行</h4><p>在默认情况下，hexo-highlight在编译的时候不会实现代码自动换行。如果你不希望在代码块的区域里有横向滚动条的话，那么你可以考虑开启这个功能。</p><p>配置butterfly.yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">code_word_wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#代码自动换行</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后找到你站点的 Hexo 配置文件<code>_config.yml</code>，将<code>line_number</code>改成<code>false</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  tab_replace<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="社交图标"><a class="markdownIt-Anchor" href="#社交图标"></a> 社交图标</h2><p>Butterfly支持 <a href="https://fontawesome.com/v4.7.0/">font-awesome v4</a>和 <a href="https://fontawesome.com/icons?from=io">font-awesome v5</a>. 如需开启<a href="https://fontawesome.com/icons?from=io">font-awesome v5</a>,需要在<code>Butterfly.yml</code>上开启</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">CDN_USE</span><span class="token punctuation">:</span>  <span class="token key atrule">css</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/npm/font<span class="token punctuation">-</span>awesome@latest/css/font<span class="token punctuation">-</span>awesome.min.css    <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//use.fontawesome.com/releases/v5.8.1/css/all.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>无论V4还是V5,书写格式都是一样的<code>图标名：url</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">social</span><span class="token punctuation">:</span>  <span class="token key atrule">fa fa-qq</span><span class="token punctuation">:</span> tencent<span class="token punctuation">:</span>//AddContact/<span class="token punctuation">?</span>fromId=50<span class="token important">&amp;fromSubId=1&amp;subcmd=all&amp;uin=535668586</span>  <span class="token key atrule">fa fa-envelope</span><span class="token punctuation">:</span> mailto<span class="token punctuation">:</span>sviptzk@163.com  <span class="token key atrule">fa fa-rss</span><span class="token punctuation">:</span> /atom.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="主页文章节选自动节选和文章页description"><a class="markdownIt-Anchor" href="#主页文章节选自动节选和文章页description"></a> 主页文章节选(自动节选和文章页description)</h2><p>因为主题UI的关系，主页文章节选只支持自动节选和文章页description。优先选择自动节选。</p><p>在<code>butterfly.yml</code>里可以开启<code>auto_excerpt</code>的选项，你的文章将会在自动截取部分显示在主页。（默认显示150个字）。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">auto_excerpt</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">length</span><span class="token punctuation">:</span> <span class="token number">150</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果没有开启<code>自动节选</code>，则会显示文章页front-matter里面设置的<code>description</code>。</p><blockquote><p>注意：如果开启了自动节选功能，代码块的显示将有可能不正常。</p></blockquote><h3 id="顶部图"><a class="markdownIt-Anchor" href="#顶部图"></a> 顶部图</h3><p>顶部图有2种配置：具体url 和（留空，true和false，三个效果一样）</p><h4 id="page页"><a class="markdownIt-Anchor" href="#page页"></a> page页</h4><p>当具体<strong>url</strong>时<br />主页的顶部图可以在<code>Butterfly.yml</code>设置<code>index_img</code></p><p>archives页的顶部图可以在<code>Butterfly.yml</code>设置<code>archive_img</code></p><p>其他<code>page</code>页的顶部图可以在各自的md页面设置<code>front-matter</code>中的<code>top_img</code></p><blockquote><p>页面如果没有设置各自的top_img，则会显示default_top_img图片</p></blockquote><p>当顶部图留空，<code>true</code>和<code>false</code><br />主页会显示纯颜色的顶部图</p><p>其他page的顶部图没有设置时，也会显示纯颜色的顶部图</p><h4 id="post页"><a class="markdownIt-Anchor" href="#post页"></a> post页</h4><p><code>post</code>页的顶部图会优先显示各自<code>front-matter</code>中的<code>top_img</code>,如果没有设置，则会缩略图（即各自<code>front-matter</code>中的<code>cover</code>)，如果没有则会显示显示<code>default_top_img</code>图片</p><h3 id="文章相关项"><a class="markdownIt-Anchor" href="#文章相关项"></a> 文章相关项</h3><p>这个选项是用来显示文章的相关信息的。配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_meta</span><span class="token punctuation">:</span>  <span class="token key atrule">date_type</span><span class="token punctuation">:</span> both <span class="token comment">#可设置文章日期显示创建日期(created)或者更新日期(updated)或者两种都显示(both)</span>  <span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># or false 是否显示分类</span>  <span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># or false 是否显示标签</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文章版权"><a class="markdownIt-Anchor" href="#文章版权"></a> 文章版权</h3><p>为你的博客文章展示文章版权和许可协议。配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_copyright</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">license</span><span class="token punctuation">:</span> CC BY<span class="token punctuation">-</span>NC<span class="token punctuation">-</span>SA 4.0  <span class="token key atrule">license_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//creativecommons.org/licenses/by<span class="token punctuation">-</span>nc<span class="token punctuation">-</span>sa/4.0/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果有文章（例如：转载文章）不需要显示版权，可以在文章Front-matter单独设置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">copyright</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="文章打赏"><a class="markdownIt-Anchor" href="#文章打赏"></a> 文章打赏</h3><p>在你每篇文章的结尾，可以添加打赏按钮。相关二维码可以自行配置 配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">reward</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">QR_code</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">itemlist</span><span class="token punctuation">:</span>        <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/wechat.jpg        <span class="token key atrule">text</span><span class="token punctuation">:</span> 微信    <span class="token punctuation">-</span> <span class="token key atrule">itemlist</span><span class="token punctuation">:</span>        <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/alipay.jpg        <span class="token key atrule">text</span><span class="token punctuation">:</span> 支付宝<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文章的markdown文档上,在Front-matter添加<code>cover</code>,并填上要显示的图片地址。<br />如果不配置<code>cover</code>,可以设置显示默认的<code>cover</code>.</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">default_cover</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//tva1.sinaimg.cn/large/832afe33ly1gbhxplql40j22801e0q3c.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当配置多张图片时,会随机选择一张作爲<code>cover</code>.此时写法应为</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">default_cover</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文章隐藏"><a class="markdownIt-Anchor" href="#文章隐藏"></a> 文章隐藏</h3><p>参考<a href="https://github.com/printempw/hexo-hide-posts/blob/master/README_ZH.md">https://github.com/printempw/hexo-hide-posts/blob/master/README_ZH.md</a></p><p>在文章的Front-matter添加</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">hide: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="头像"><a class="markdownIt-Anchor" href="#头像"></a> 头像</h3><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//img.antmoe.com/avatar.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="toc"><a class="markdownIt-Anchor" href="#toc"></a> TOC</h3><p>在文章页，会有一个目录，用于显示TOC。 手机端默认显示按钮。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">toc</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>   <span class="token comment">#显示章节数字</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>为特定的文章配置是否显示TOC和特定的目录章节数字<br />在你的文章<code>md</code>文件的头部，加入<code>toc_number</code>和<code>toc</code>项，并配置<code>true</code>或者<code>false</code>即可。</p><p><code>toc</code>是否显示文章TOC</p><p><code>toc_number</code> 是否显示章节数</p><p>配置之后你的特定的文章将会拥有它自己的目录数字的显示与否，而不会受全局的配置影响。</p><h4 id="自动打开toc"><a class="markdownIt-Anchor" href="#自动打开toc"></a> 自动打开TOC</h4><p>可选择进入文章页面时，是否自动打开<code>sidebar</code>显示TOC</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">auto_open_sidebar</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="相关文章"><a class="markdownIt-Anchor" href="#相关文章"></a> 相关文章</h3><p>相关文章推荐的原理是根据文章tags的比重来推荐</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">related_post</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">6</span> <span class="token comment"># 显示推荐文章数目</span>  <span class="token key atrule">date_type</span><span class="token punctuation">:</span> created <span class="token comment"># or created or updated 文章日期显示创建日或者更新日</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="footer设置"><a class="markdownIt-Anchor" href="#footer设置"></a> Footer设置</h2><h3 id="博客年份"><a class="markdownIt-Anchor" href="#博客年份"></a> 博客年份</h3><p>since是一个来展示你站点起始时间的选项。它位于页面的最底部。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">since</span><span class="token punctuation">:</span> <span class="token number">2020</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="页脚自定义文字"><a class="markdownIt-Anchor" href="#页脚自定义文字"></a> 页脚自定义文字</h3><p><code>footer_custom_text</code>是一个给你用来在页脚自定义文本的选项。通常你可以在这里写声明文本等。支持 HTML。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">footer_custom_text</span><span class="token punctuation">:</span> Hi<span class="token punctuation">,</span> welcome to my &lt;a href="https<span class="token punctuation">:</span>//www.antmoe.com/"<span class="token punctuation">></span>blog&lt;/a<span class="token punctuation">></span><span class="token tag">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="icp"><a class="markdownIt-Anchor" href="#icp"></a> ICP</h3><p>对于部分有备案的域名，可以在ICP配置显示。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">ICP</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//www.beian.miit.gov.cn/  <span class="token key atrule">text</span><span class="token punctuation">:</span> 粤ICP备xxxx  <span class="token key atrule">icon</span><span class="token punctuation">:</span> /img/icp.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="右下角按钮"><a class="markdownIt-Anchor" href="#右下角按钮"></a> 右下角按钮</h3><p>简繁转换<br />简体繁体互换</p><p>右下角会有简繁转换按钮。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">translate</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 默认按钮显示文字(网站是简体，应设置为'default: 繁')</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span> 简  <span class="token comment">#网站默认语言，1: 繁体中文, 2: 简体中文</span>  <span class="token key atrule">defaultEncoding</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token comment">#延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span>  <span class="token key atrule">translateDelay</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token comment">#博客网址</span>  <span class="token key atrule">cookieDomain</span><span class="token punctuation">:</span> <span class="token string">"https://jerryc.me/"</span>  <span class="token comment">#当文字是简体时，按钮显示的文字</span>  <span class="token key atrule">msgToTraditionalChinese</span><span class="token punctuation">:</span> <span class="token string">"繁"</span>  <span class="token comment">#当文字是繁体时，按钮显示的文字</span>  <span class="token key atrule">msgToSimplifiedChinese</span><span class="token punctuation">:</span> <span class="token string">"简"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="夜间模式"><a class="markdownIt-Anchor" href="#夜间模式"></a> 夜间模式</h3><p>右下角会有夜间模式按钮</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 夜间模式</span><span class="token key atrule">darkmode</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>V2.0.0 开始增加一个选项，可开啓自动切换light mode 和 dark mode</p><p>autoChangeMode: 1 跟随系统而变化，不支持的浏览器/系统将按照时间晚上6点到早上6点之间切换为 dark mode</p><p>autoChangeMode: 2 只按照时间 晚上6点到早上6点之间切换为 dark mode,其余时间为light mode</p><p>autoChangeMode: false 取消自动切换</p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 自动切换 dark mode和 light mode</span><span class="token key atrule">autoChangeMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="阅读模式"><a class="markdownIt-Anchor" href="#阅读模式"></a> 阅读模式</h3><p>閲读模式下会去掉除文章外的内容，避免干扰閲读。</p><p>只会出现在文章页面，右下角会有閲读模式按钮。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">readmode</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="侧边设置"><a class="markdownIt-Anchor" href="#侧边设置"></a> 侧边设置</h2><p>可自行决定哪个项目需要显示，可决定位置。（至少需要显示一个）</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">aside</span><span class="token punctuation">:</span>  <span class="token key atrule">position</span><span class="token punctuation">:</span> right <span class="token comment"># left or right</span>  <span class="token key atrule">card_author</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#作者卡片</span>  <span class="token key atrule">card_announcement</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#公告卡片</span>  <span class="token key atrule">card_recent_post</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#最新文章卡片</span>  <span class="token key atrule">card_categories</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#分类卡片</span>  <span class="token key atrule">card_tags</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#标签卡片</span>  <span class="token key atrule">card_archives</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#归档卡片</span>  <span class="token key atrule">card_webinfo</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#网站信息卡片</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="访问人数"><a class="markdownIt-Anchor" href="#访问人数"></a> 访问人数</h3><p>访问 busuanzi 的官方网站查看更多的介绍。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">busuanzi</span><span class="token punctuation">:</span>  <span class="token key atrule">site_uv</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">site_pv</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">page_pv</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行时间"><a class="markdownIt-Anchor" href="#运行时间"></a> 运行时间</h3><p>网页已运行时间</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">runtimeshow</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">start_date</span><span class="token punctuation">:</span> 2020/2/2 10<span class="token punctuation">:</span><span class="token datetime number">00:00</span>    <span class="token comment">##网页开通时间</span>  <span class="token comment">#格式: 月/日/年 时间</span>  <span class="token comment">#也可以写成 年/月/日 时间</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="标签外挂"><a class="markdownIt-Anchor" href="#标签外挂"></a> 标签外挂</h2><h3 id="note"><a class="markdownIt-Anchor" href="#note"></a> Note</h3><p>移植于next主题（注意，书写不是markdown规范，而是hexo特有的功能，故在其它地方会显示不出效果）<br />配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">note</span><span class="token punctuation">:</span>  <span class="token comment"># Note tag style values:</span>  <span class="token comment">#  - simple    bs-callout old alert style. Default.</span>  <span class="token comment">#  - modern    bs-callout new (v2-v3) alert style.</span>  <span class="token comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span>  <span class="token comment">#  - disabled  disable all CSS styles import of note tag.</span>  <span class="token key atrule">style</span><span class="token punctuation">:</span> simple  <span class="token key atrule">icons</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">border_radius</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span>  <span class="token comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span>  <span class="token key atrule">light_bg_offset</span><span class="token punctuation">:</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://theme-next.org/docs/tag-plugins/note">效果</a>看这里</p><h3 id="gallery相册"><a class="markdownIt-Anchor" href="#gallery相册"></a> Gallery相册</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% gallery %&#125;markdown 图片格式&#123;% endgallery %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% gallery %&#125;![](https://gratisography.com/wp-content/uploads/2019/10/gratisography-scary-pumpkin-hand-900x600.jpg)![](https://gratisography.com/wp-content/uploads/2019/10/gratisography-fresh-fish-dinner-900x600.jpg)![](https://gratisography.com/wp-content/uploads/2019/10/gratisography-mountain-cloud-landscape-900x600.jpg)![](https://picjumbo.com/wp-content/uploads/iphone-free-stock-photos-2210x3315.jpg)![](https://picjumbo.com/wp-content/uploads/young-millennial-girl-drinking-lemonade-and-overlooking-the-city-2210x1473.jpg)![](https://picjumbo.com/wp-content/uploads/modern-graphic-designer-essentials_free_stock_photos_picjumbo_HNCK4919-2210x1474.jpg)&#123;% endgallery %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="评论"><a class="markdownIt-Anchor" href="#评论"></a> 评论</h2><p>评论我只觉得Valine好用。配置遵循<a href="https://github.com/xCss/Valine">Valine</a></p><h2 id="分享"><a class="markdownIt-Anchor" href="#分享"></a> 分享</h2><p>我选择默认的Sharejs就好</p><h2 id="搜索系统"><a class="markdownIt-Anchor" href="#搜索系统"></a> 搜索系统</h2><h3 id="algolia"><a class="markdownIt-Anchor" href="#algolia"></a> Algolia</h3><ol><li><p>你需要安装 <a href="https://github.com/oncletom/hexo-algolia">hexo-algolia</a>或 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch">hexo-algoliasearch</a>. 根据它们的説明文档去做相应的配置。</p></li><li><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">algolia_search</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hits</span><span class="token punctuation">:</span>    <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">6</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">input_placeholder</span><span class="token punctuation">:</span> Search for Posts    <span class="token key atrule">hits_empty</span><span class="token punctuation">:</span> <span class="token string">"We didn't find any results for the search: $&#123;query&#125;"</span> <span class="token comment"># if there are no result</span>    <span class="token key atrule">hits_stats</span><span class="token punctuation">:</span> <span class="token string">"$&#123;hits&#125; results found in $&#123;time&#125; ms"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="本地搜索系统"><a class="markdownIt-Anchor" href="#本地搜索系统"></a> 本地搜索系统</h3><ol><li><p>你需要安装 <a href="https://github.com/PaicHyperionDev/hexo-generator-search">hexo-generator-search</a>. 根据它的文档去做相应配置。注意格式只支持 xml。</p></li><li><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">local_search</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">input_placeholder</span><span class="token punctuation">:</span> Search for Posts    <span class="token key atrule">hits_empty</span><span class="token punctuation">:</span> <span class="token string">"We didn't find any results for the search: $&#123;query&#125;"</span> <span class="token comment"># if there are no result</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="网页验证"><a class="markdownIt-Anchor" href="#网页验证"></a> 网页验证</h2><p>如果需要搜索引擎收录网站，可能需要登录对应搜索引擎的管理平台进行提交。<br />各自的验证码可从各自管理平台拿到</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Google Webmaster tools verification setting</span><span class="token comment"># See: https://www.google.com/webmasters/</span><span class="token key atrule">google_site_verification</span><span class="token punctuation">:</span><span class="token comment"># Bing Webmaster tools verification setting</span><span class="token comment"># See: https://www.bing.com/webmaster/</span><span class="token key atrule">bing_site_verification</span><span class="token punctuation">:</span><span class="token comment"># Yandex Webmaster tools verification setting</span><span class="token comment"># See: https://webmaster.yandex.ru/</span><span class="token key atrule">yandex_site_verification</span><span class="token punctuation">:</span><span class="token comment"># Baidu Webmaster tools verification setting</span><span class="token comment"># See: https://ziyuan.baidu.com/site/</span><span class="token key atrule">baidu_site_verification</span><span class="token punctuation">:</span><span class="token comment"># 360 Webmaster tools verification setting</span><span class="token comment"># see http://zhanzhang.so.com/</span>qihu_site_verification<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分析统计"><a class="markdownIt-Anchor" href="#分析统计"></a> 分析统计</h2><p>统计找到各个平台找到代码即可</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">baidu_analytics</span><span class="token punctuation">:</span> <span class="token comment">#百度统计</span><span class="token key atrule">google_analytics</span><span class="token punctuation">:</span> <span class="token comment"># 谷歌分析通常以`UA-`打头</span><span class="token key atrule">tencent_analytics</span><span class="token punctuation">:</span> <span class="token comment">#腾讯分析</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="广告"><a class="markdownIt-Anchor" href="#广告"></a> 广告</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">google_adsense</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">js</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js  <span class="token key atrule">client</span><span class="token punctuation">:</span> <span class="token comment"># 填入个人识别码</span>  <span class="token key atrule">enable_page_level_ads</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="公式"><a class="markdownIt-Anchor" href="#公式"></a> 公式</h2><h3 id="mathjax"><a class="markdownIt-Anchor" href="#mathjax"></a> MathJax</h3><p>配置<code>butterfly.yml</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">mathjax</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># true 表示每一页都加载mathjax.js</span>  <span class="token comment"># false 需要时加载，须在使用的Markdown Front-matter 加上 mathjax: true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后你需要修改一下默认的markdown渲染引擎来实现 MathJax 的效果。</p><p>查看<a href="https://www.npmjs.com/package/hexo-renderer-kramed">https://www.npmjs.com/package/hexo-renderer-kramed</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-renderer-marked --save<span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-kramed --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kramed</span><span class="token punctuation">:</span>  <span class="token key atrule">gfm</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">pedantic</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">sanitize</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tables</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">breaks</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">smartLists</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">smartypants</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="katex推荐"><a class="markdownIt-Anchor" href="#katex推荐"></a> KaTeX(推荐)</h3><p>首先禁用<code>MathJax</code>（如果你配置过 MathJax 的话），然后修改你的<code>butterfly.yml</code>以便加载<code>katex.min.css</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">katex</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># true 表示每一页都加载katex.js</span>  <span class="token comment"># false 需要时加载，须在使用的Markdown Front-matter 加上 katex: true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">hide_scrollbar</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你不需要添加<code>katex.min.js</code>来渲染数学方程。相应的你需要卸载你之前的 hexo 的 <code>markdown</code> 渲染器以及<code>hexo-math</code>，然后安装新的<code>hexo-renderer-markdown-it-plus</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 替换 `hexo-renderer-kramed` 或者 `hexo-renderer-marked` 等hexo的markdown渲染器</span><span class="token comment"># 你可以在你的package.json里找到hexo的markdwon渲染器，并将其卸载</span>npm un hexo<span class="token punctuation">-</span>renderer<span class="token punctuation">-</span>marked <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span class="token comment"># or</span>npm un hexo<span class="token punctuation">-</span>renderer<span class="token punctuation">-</span>kramed <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span class="token comment"># 卸载 `hexo-math`</span>npm un hexo<span class="token punctuation">-</span>math <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span class="token comment"># 然后安装 `hexo-renderer-markdown-it-plus`</span>npm i @upupming/hexo<span class="token punctuation">-</span>renderer<span class="token punctuation">-</span>markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>plus <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到 <code>hexo-renderer-markdown-it-plus</code>已经无人持续维护, 所以我们使用 <code>@upupming/hexo-renderer-markdown-it-plus</code>。 这份 fork 的代码使用了 <code>@neilsustc/markdown-it-katex</code>同时它也是 VSCode 的插件 <code>Markdown All in One</code>所使用的, 所以我们可以获得最新的 <code>KaTex</code> 功能例如 <code>\tag&#123;&#125;</code>。</p><p>你还可以通过 <code>@neilsustc/markdown-it-katex</code>控制 KaTeX 的设置，所有可配置的选项参见 <a href="%5Bhttps://katex.org/docs/options.html%E3%80%82%5D(https://katex.org/docs/options.html%E3%80%82)">https://katex.org/docs/options.html</a>。 比如你想要禁用掉 KaTeX 在命令行上输出的宂长的警告信息，你可以在根目录的 <code>_config.yml</code> 中使用下面的配置将 <code>strict</code> 设置为 false:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">markdown_it_plus</span><span class="token punctuation">:</span>  <span class="token key atrule">plugins</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">plugin</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'@neilsustc/markdown-it-katex'</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">options</span><span class="token punctuation">:</span>        <span class="token key atrule">strict</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="美化特效"><a class="markdownIt-Anchor" href="#美化特效"></a> 美化/特效</h2><h3 id="自定义颜色"><a class="markdownIt-Anchor" href="#自定义颜色"></a> 自定义颜色</h3><p>配置<code>butterfly.yml</code>，比如：</p><blockquote><p>颜色值必须被双引号包裹，就像&quot;#000&quot;而不是#000。否则将会在构建的时候报错！</p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme_color</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">main</span><span class="token punctuation">:</span> <span class="token string">"#9370DB"</span>  <span class="token key atrule">paginator</span><span class="token punctuation">:</span> <span class="token string">"#7A7FF1"</span>  <span class="token key atrule">button_hover</span><span class="token punctuation">:</span> <span class="token string">"#FF7242"</span>  <span class="token key atrule">text_selection</span><span class="token punctuation">:</span> <span class="token string">"#69c46d"</span>  <span class="token key atrule">link_color</span><span class="token punctuation">:</span> <span class="token string">"#858585"</span>  <span class="token key atrule">hr_color</span><span class="token punctuation">:</span> <span class="token string">"#A4D8FA"</span>  <span class="token key atrule">read-mode-bg_color</span><span class="token punctuation">:</span> <span class="token string">'#FAF9DE'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="网站背景"><a class="markdownIt-Anchor" href="#网站背景"></a> 网站背景</h3><p>默认显示白色，可设置图片或者顔色</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 图片格式 background: url(http://xxxxxx.com/xxx.jpg)</span><span class="token comment"># 顔色 background: '#49B202'</span><span class="token comment"># 留空 显示白色</span><span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">"#efefef"</span><span class="token comment"># background: url(https://i.loli.net/2019/09/09/5oDRkWVKctx2b6A.png)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="footer背景"><a class="markdownIt-Anchor" href="#footer背景"></a> footer背景</h3><p>footer 的背景会与<code>top_img</code>的一致, 当设置false时，将与主题色一致。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># footer是否显示图片背景(与top_img一致)</span><span class="token key atrule">footer_bg</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="打字效果"><a class="markdownIt-Anchor" href="#打字效果"></a> 打字效果</h3><p><a href="https://github.com/disjukr/activate-power-mode">打字效果</a></p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 打字效果</span><span class="token key atrule">activate_power_mode</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">colorful</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 冒光特效</span>  <span class="token key atrule">shake</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 抖动特效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="彩带"><a class="markdownIt-Anchor" href="#彩带"></a> 彩带</h3><p>参考配置文件</p><h3 id="鼠标点击效果"><a class="markdownIt-Anchor" href="#鼠标点击效果"></a> 鼠标点击效果</h3><p>配置<code>butterfly.yml</code>文件</p><ol><li><p>烟花</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">fireworks</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>爱心</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">click_heart</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>文字</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">ClickShowText</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">text</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> 富强    <span class="token punctuation">-</span> 民主    <span class="token punctuation">-</span> 文明    <span class="token punctuation">-</span> 和谐    <span class="token punctuation">-</span> 自由    <span class="token punctuation">-</span> 平等    <span class="token punctuation">-</span> 公正    <span class="token punctuation">-</span> 法治    <span class="token punctuation">-</span> 爱国    <span class="token punctuation">-</span> 敬业    <span class="token punctuation">-</span> 诚信    <span class="token punctuation">-</span> 友善  <span class="token key atrule">fontSize</span><span class="token punctuation">:</span> 15px<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="文章页美化"><a class="markdownIt-Anchor" href="#文章页美化"></a> 文章页美化</h3><p>会改变ol、ul、h1-h5的样式</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_beautify</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title-prefix-icon</span><span class="token punctuation">:</span> <span class="token string">'\f0c1'</span>  <span class="token key atrule">title-prefix-icon-color</span><span class="token punctuation">:</span> <span class="token string">"#F47466"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>title-prefix-icon</code>填写的是fontawesome的icon的Unicode数</p><h3 id="自定义字体"><a class="markdownIt-Anchor" href="#自定义字体"></a> 自定义字体</h3><p>可自行设置字体的<code>font-family</code></p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">font</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">font-family</span><span class="token punctuation">:</span> Lato<span class="token punctuation">,</span> Helvetica Neue For Number<span class="token punctuation">,</span> <span class="token punctuation">-</span>apple<span class="token punctuation">-</span>system<span class="token punctuation">,</span> BlinkMacSystemFont<span class="token punctuation">,</span> Segoe UI<span class="token punctuation">,</span> Roboto<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">,</span> Hiragino Sans GB<span class="token punctuation">,</span><span class="token string">"Microsoft JhengHei"</span><span class="token punctuation">,</span> <span class="token string">"MicrMicrosoft YaHei"</span><span class="token punctuation">,</span> Helvetica Neue<span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans<span class="token punctuation">-</span>serif  <span class="token key atrule">code-font</span><span class="token punctuation">:</span> consolas<span class="token punctuation">,</span> Menlo<span class="token punctuation">,</span> <span class="token string">"PingFang SC"</span><span class="token punctuation">,</span> <span class="token string">"Microsoft JhengHei"</span><span class="token punctuation">,</span><span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span> monospace<span class="token punctuation">,</span> Helvetica Neue For Number<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="网站副标题"><a class="markdownIt-Anchor" href="#网站副标题"></a> 网站副标题</h3><p>可设置主页中显示的网站副标题或者喜欢的座右铭。</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 主页subtitle</span><span class="token comment"># 打字效果</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span>   <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># source调用第三方服务</span>  <span class="token comment"># source: false 关闭调用 </span>  <span class="token comment"># source: 1  调用金山词霸的每日一句（简体）</span>  <span class="token comment"># source: 2  调用一言网的一句话（简体） #https://hitokoto.cn/</span>  <span class="token comment"># source: 3  调用一句网（简体） http://yijuzhan.com/</span>  <span class="token comment"># source: 4  调用今日诗词（简体） https://www.jinrishici.com/</span>  <span class="token comment"># subtitle 会先显示 source , 再显示 sub 的内容</span>  <span class="token key atrule">source</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># (如果有英文逗号' , '，请使用转义字符 &amp;#44;)</span>  <span class="token key atrule">sub</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 今日事&amp;<span class="token comment">#44;今日毕</span>    <span class="token punctuation">-</span> Never put off till tomorrow what you can do today<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="主页文章cover位置"><a class="markdownIt-Anchor" href="#主页文章cover位置"></a> 主页文章cover位置</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 主页文章COVER显示位置</span><span class="token comment"># 三个值可配置 left , right , both</span><span class="token comment"># left(全部图片显示在左边)，right(全部图片显示在右边)，both(左右左右顺序显示)</span><span class="token key atrule">index_post_cover</span><span class="token punctuation">:</span> left<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>主页top_img显示大小，默认的显示为全屏。site-info的区域会居中显示</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 主页设置</span><span class="token comment"># 默认top_img全屏，site_info在中间</span><span class="token comment"># 使用默认, 都无需填写（建议默认）</span><span class="token key atrule">index_top_img_height</span><span class="token punctuation">:</span>  <span class="token comment">#主页top_img高度 例如 300px/300em/300rem  不能使用百分比</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：index_top_img_height的值不能使用百分比。<br />2个都不填的话，会使用默认值</p></blockquote><h3 id="字数统计"><a class="markdownIt-Anchor" href="#字数统计"></a> 字数统计</h3><p>要为Butterfly配上字数统计特性, 你需要如下几个步骤:</p><ol><li><p>打开 hexo 工作目录</p></li><li><p><code>npm install hexo-wordcount --save</code> or <code>yarn add hexo-wordcount</code></p></li><li><p>配置<code>butterfly.yml</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">wordcount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="文章置顶"><a class="markdownIt-Anchor" href="#文章置顶"></a> 文章置顶</h3><p>要为你一些文章置顶，你需要如下步骤:</p><ol><li>打开 hexo 工作目录</li><li><code>npm uninstall hexo-generator-index --save</code> 然后 <code>npm install hexo-generator-index-pin-top --save</code></li><li>你要在文章的<code>front-matter</code>区域里添加<code>top: True</code>属性来把这篇文章置顶。</li><li>你可以参考 <a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a>这个仓库来了解更多细节。</li></ol><h3 id="图片放大查看模式"><a class="markdownIt-Anchor" href="#图片放大查看模式"></a> 图片放大查看模式</h3><h4 id="fancybox"><a class="markdownIt-Anchor" href="#fancybox"></a> fancybox</h4><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># fancybox http://fancyapps.com/fancybox/3/</span><span class="token key atrule">fancybox</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="medium_zoom"><a class="markdownIt-Anchor" href="#medium_zoom"></a> medium_zoom</h4><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">medium_zoom</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="snackbar-弹窗"><a class="markdownIt-Anchor" href="#snackbar-弹窗"></a> Snackbar 弹窗</h3><p>Snackbar弹窗,根据自己爱好开啓</p><p>配置<code>butterfly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Snackbar 弹窗</span><span class="token comment"># https://github.com/polonel/SnackBar</span><span class="token comment"># position 弹窗位置</span><span class="token comment"># 可选 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span><span class="token key atrule">snackbar</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">position</span><span class="token punctuation">:</span> bottom<span class="token punctuation">-</span>left  <span class="token key atrule">bg_light</span><span class="token punctuation">:</span> <span class="token string">'#49b1f5'</span> <span class="token comment">#light mode时弹窗背景</span>  <span class="token key atrule">bg_dark</span><span class="token punctuation">:</span> <span class="token string">'#2d3035'</span> <span class="token comment">#dark mode时弹窗背景</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="插件安装"><a class="markdownIt-Anchor" href="#插件安装"></a> 插件安装</h2>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 主题手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客推荐安装的插件</title>
      <link href="/posts/b411a3f8/"/>
      <url>/posts/b411a3f8/</url>
      
        <content type="html"><![CDATA[<h2 id="seo相关"><a class="markdownIt-Anchor" href="#seo相关"></a> SEO相关</h2><h3 id="百度主动提交连接hexo-baidu-url-submit"><a class="markdownIt-Anchor" href="#百度主动提交连接hexo-baidu-url-submit"></a> 百度主动提交连接（hexo-baidu-url-submit）</h3><p>地址：<a href="https://github.com/huiwang/hexo-baidu-url-submit">https://github.com/huiwang/hexo-baidu-url-submit</a></p><p>首先，在Hexo根目录下，安装本插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-baidu-url-submit --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，同样在根目录下，把以下内容配置到<code>_config.yml</code>文件中:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">baidu_url_submit:  count: <span class="token number">1000</span> <span class="token comment">## 提交最新的一个链接</span>  host: alili.tech <span class="token comment">## 在百度站长平台中注册的域名</span>  token: xxxxx <span class="token comment">## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span>  path: baidu_urls.txt <span class="token comment">## 文本文档的地址， 新链接会保存在此文本文档里</span>  xz_appid: <span class="token string">'xxxxxx'</span> <span class="token comment">## 你的熊掌号 appid</span>  xz_token: <span class="token string">'xxxxxx'</span> <span class="token comment">## 你的熊掌号 token</span>  xz_count: <span class="token number">10</span> <span class="token comment">## 从所有的提交的数据当中选取最新的10条,该数量跟你的熊掌号而定</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其次，记得查看_config.ym文件中url的值， 必须包含是百度站长平台注册的域名（一般有www）， 比如:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># URL</span>url: http://www.antmoe.comroot: /permalink: :year/:month/:day/:title/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后加入新的deployer</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:- type: baidu_url_submitter <span class="token comment"># 百度</span>- type: baidu_xz_url_submitter <span class="token comment"># 百度熊掌号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>实现原理</p><p>推送功能的实现，分为两部分：</p><ul><li>新链接的产生， <code>hexo generate</code> 会产生一个文本文件，里面包含最新的链接</li><li>新链接的提交， <code>hexo deploy</code> 会从上述文件中读取链接，提交至百度搜索引擎</li></ul><h3 id="每天定时提交"><a class="markdownIt-Anchor" href="#每天定时提交"></a> 每天定时提交</h3><p>关于这部分，我在网上没有找到合适的插件，于是利用<code>Leancloud</code>开发了一款扩展工具。具体方法请参照<a href="https://www.antmoe.com/posts/2db95804/index.html">这篇文章</a></p><h3 id="文章永久地址"><a class="markdownIt-Anchor" href="#文章永久地址"></a> 文章永久地址</h3><p>地址:<a href="https://github.com/rozbo/hexo-abbrlink">https://github.com/rozbo/hexo-abbrlink</a></p><p>安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改根目录下的配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">permalink: posts/:abbrlink.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录添加如下配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">abbrlink:  alg: crc32  <span class="token comment">#算法 crc16(default) and crc32</span>  rep: hex    <span class="token comment">#进制 dec(default) and hex 十进制和十六进制，默认为10进制。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>生成的链接示例</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">crc16 <span class="token operator">&amp;</span> hexhttps://post.zz173.com/posts/66c8.htmlcrc16 <span class="token operator">&amp;</span> dechttps://post.zz173.com/posts/65535.htmlcrc32 <span class="token operator">&amp;</span> hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 <span class="token operator">&amp;</span> dechttps://post.zz173.com/posts/1690090958.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="外链跳转插件"><a class="markdownIt-Anchor" href="#外链跳转插件"></a> 外链跳转插件</h3><p>地址：<a href="https://github.com/hvnobug/hexo-external-link">https://github.com/hvnobug/hexo-external-link</a></p><blockquote><p><a href="https://yafine-blog.cn/go.html?url=aHR0cHM6Ly9ibG9nLmh2bm9idWcuY29tL2dvLmh0bWw/dXJsPWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwyaDJibTlpZFdjdmFHVjRieTFsZUhSbGNtNWhiQzFzYVc1cg==">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置<code>target=’_blank’, rel=’external nofollow noopener noreferrer’</code> 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## npm 安装 </span><span class="token function">npm</span> <span class="token function">install</span> hexo-external-link --save <span class="token comment">## yarn 安装 </span><span class="token function">yarn</span> <span class="token function">add</span> hexo-external-link<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在站点根目录的设置中设置如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo_external_link:   enable: <span class="token boolean">true</span>   enable_base64_encode: <span class="token boolean">true</span>   url_param_name: <span class="token string">'u'</span>   html_file_name: <span class="token string">'go.html'</span>   target_blank: <span class="token boolean">true</span>   link_rel: <span class="token string">'external nofollow noopener noreferrer'</span>   domain: <span class="token string">'https://www.antmoe.com/'</span> <span class="token comment"># 如果开启了防盗链 </span>  safety_chain: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>enable</strong> - 是否开启<code>hexo_external_link</code>插件 - 默认 false</li><li><strong>enable_base64_encode</strong> - 是否对跳转<code>url</code>使用<code>base64编码</code> - 默认 fasle</li><li><strong>url_param_name</strong> - url参数名,在跳转到外链传递给<code>html_file_name</code>的参数名 - 默认 ‘u’</li><li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li><li><strong>target_blank</strong> - 是否为外链的<code>a</code>标签添加<code>target='_blank'</code> - 默认 true</li><li><strong>link_rel</strong> - 设置外链的<code>a</code>标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</li><li><strong>domain</strong> - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li><li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li></ul><h3 id="中文转拼音"><a class="markdownIt-Anchor" href="#中文转拼音"></a> 中文转拼音</h3><p>地址<a href="https://github.com/viko16/hexo-permalink-pinyin">https://github.com/viko16/hexo-permalink-pinyin</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在站点根目录设置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#是否开启</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span>   <span class="token comment"># default: '-'链接符</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="加载优化"><a class="markdownIt-Anchor" href="#加载优化"></a> 加载优化</h2><h3 id="图片懒加载"><a class="markdownIt-Anchor" href="#图片懒加载"></a> 图片懒加载</h3><p>地址：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">https://github.com/Troy-Yang/hexo-lazyload-image</a></p><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在站点配置文件下添加下面的代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lazyload: enable: <span class="token boolean">true</span> <span class="token comment"># 是否开启图片懒加载 </span>onlypost: <span class="token boolean">false</span> <span class="token comment"># 是否只对文章的图片做懒加载 </span>loadingImg: /medias/loading.gif <span class="token comment">#显示的图片</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果在markdown或html中指定img标记的属性，也可以禁用延迟进程</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">no-lazy</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里推荐给大家机长图片最为候选哦！。</p><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在站点配置文件下添加下面的代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lazyload: enable: <span class="token boolean">true</span> <span class="token comment"># 是否开启图片懒加载 </span>onlypost: <span class="token boolean">false</span> <span class="token comment"># 是否只对文章的图片做懒加载 </span>loadingImg: medias/loading.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果在markdown或html中指定img标记的属性，也可以禁用延迟进程</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">no-lazy</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://ws1.sinaimg.cn/large/832afe33ly1gbh4a43va4g209g09gmy4.gif">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a43va4g209g09gmy4.gif</a><br /><a href="https://ws1.sinaimg.cn/large/832afe33ly1gbh4a49p3xg20r00lc776.gif">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a49p3xg20r00lc776.gif</a><br /><a href="https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44p6xg20b40b4weq.gif">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44p6xg20b40b4weq.gif</a><br /><a href="https://ws1.sinaimg.cn/large/832afe33ly1gbh4a444wwg20ee0d4gmz.gif">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a444wwg20ee0d4gmz.gif</a><br /><a href="https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44yb4g20m80godif.gif">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44yb4g20m80godif.gif</a></p><h3 id="代码压缩"><a class="markdownIt-Anchor" href="#代码压缩"></a> 代码压缩</h3><p>代码压缩 这里有两种方式第一种 通过gulp代码压缩方式</p><ol><li><p>进入站点根目录下依次执行下面的命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 全局安装gulp模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp -g<span class="token comment"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span><span class="token function">npm</span> <span class="token function">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save<span class="token comment"># 额外的功能模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在Hexo根目录新建文件 <code>gulp.js</code>，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-clean-css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//css压缩组件</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-uglify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//js压缩组件</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlmin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//html压缩组件</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlclean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//html清理组件</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-imagemin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//图片压缩组件</span><span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-changed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//文件更改校验组件</span><span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-if"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//任务 帮助调用组件</span><span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-plumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//容错组件（发生错误不跳出任务，并报出错误内容）</span><span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span><span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//是否调试显示 编译通过的文件</span><span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-babel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-preset-es2015"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"del"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hexo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 初始化一个hexo对象</span><span class="token comment">// 清除public文件夹</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"clean"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"public/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span><span class="token comment">// 创建静态页面 （等同 hexo generate）</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">hexo</span>            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                watch<span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 启动Hexo服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> hexo        <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token function">hexo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">hexo</span>            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                watch<span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩public目录下的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressJs"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"!./public/libs/**"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//排除的js</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress JS:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>            <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                presets<span class="token operator">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span> <span class="token comment">// es5检查机制</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//调用压缩组件方法uglify(),对合并的文件进行压缩</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出到目标目录</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩public目录下的css文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        rebase<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token comment">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span>        compatibility<span class="token operator">:</span> <span class="token string">"ie7"</span> <span class="token comment">//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式]</span>        <span class="token comment">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span>        <span class="token comment">//keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.css"</span><span class="token punctuation">,</span> <span class="token string">"!./public/**/*.min.css"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//排除的css</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress CSS:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩public目录下的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        protect<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\!--%fooTemplate\b.*?%--></span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token comment">//忽略处理</span>        unprotect<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;script [^>]*\btype="text\/x-handlebars-template"[\s\S]+?&lt;\/script></span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span> <span class="token comment">//特殊处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        collapseWhitespace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩HTML</span>        collapseBooleanAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input /></span>        removeEmptyAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;script>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;style>和&lt;link>的type="text/css"</span>        removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//清除HTML注释</span>        minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面JS</span>        minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面CSS</span>        minifyURLs<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//替换页面URL</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/**/*.html"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress HTML:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 public/medias 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        optimizationLevel<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>        progressive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//类型：Boolean 默认：false 无损压缩jpg图片</span>        interlaced<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>        multipass<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/medias/**/*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public/medias"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress Images:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"build"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        <span class="token string">"compressHtml"</span><span class="token punctuation">,</span>        <span class="token string">"compressCss"</span><span class="token punctuation">,</span>        <span class="token string">"compressJs"</span><span class="token punctuation">,</span>        <span class="token string">"compressImage"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 默认任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"default"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token string">"compressJs"</span><span class="token punctuation">,</span><span class="token string">"compressImage"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>以后的执行方式有两种：</p><ul><li>直接在Hexo根目录执行 <code>gulp</code>或者 <code>gulp default</code> ，这个命令相当于 <code>hexo cl&amp;&amp;hexo g</code> 并且再把代码和图片压缩。</li><li>在Hexo根目录执行 <code>gulp build</code> ，这个命令与第1种相比是：在最后又加了个 <code>hexo d</code> ，等于说生成、压缩文件后又帮你自动部署了。</li></ul><blockquote><p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第154行的 <code>&quot;compressImage&quot;,</code> 和第165行的 <code>,&quot;compressImage&quot;</code> 去掉即可</p></blockquote></li></ol><p>第二种方法通过插件完成，也是我目前使用的方法</p><p>地址：<a href="https://github.com/rozbo/hexo-neat">https://github.com/rozbo/hexo-neat</a></p><p>但是这个插件是有Bug的：</p><ul><li>压缩 md 文件会使 markdown 语法的代码块消失</li><li>会删除全角空格</li></ul><p>Hexo根目录执行安装代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-neat --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在Hexo配置文件<code>_config.yml</code> 末尾加入以下配置(此配置仅针对Matery主题)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）</span>neat_enable: <span class="token boolean">true</span>neat_html:  enable: <span class="token boolean">true</span>  exclude:    - <span class="token string">'**/*.md'</span>neat_css:  enable: <span class="token boolean">true</span>  exclude:    - <span class="token string">'**/*.min.css'</span>neat_js:  enable: <span class="token boolean">true</span>  mangle: <span class="token boolean">true</span>  output:  compress:  exclude:    - <span class="token string">'**/*.min.js'</span>    - <span class="token string">'**/**/instantpage.js'</span>    - <span class="token string">'**/matery.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然了 ，如果你是其他主题可以使用网上的通用配置，但我没有尝试过</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">neat_enable: <span class="token boolean">true</span>neat_html:  enable: <span class="token boolean">true</span>  exclude:neat_css:  enable: <span class="token boolean">true</span>  exclude:    - <span class="token string">'*.min.css'</span>neat_js:  enable: <span class="token boolean">true</span>  mangle: <span class="token boolean">true</span>  output:  compress:  exclude:    - <span class="token string">'*.min.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="扩展优化"><a class="markdownIt-Anchor" href="#扩展优化"></a> 扩展优化</h2><h3 id="邮件通知"><a class="markdownIt-Anchor" href="#邮件通知"></a> 邮件通知</h3><p>地址：<a href="https://github.com/zhaojun1998/Valine-Admin">https://github.com/zhaojun1998/Valine-Admin</a></p><p>作者博客：<a href="http://www.zhaojun.im/hexo-valine-admin/">http://www.zhaojun.im/hexo-valine-admin/</a></p><p>相关配置操作请查看作者博客。这里只说说自定义环境变量及使用阿里云邮件推送</p><ul><li><p><code>SITE_NAME</code> : 网站名称。</p></li><li><p><code>SITE_URL</code> : 网站地址, <strong>最后不要加 <code>/</code> 。</strong></p></li><li><p><code>SMTP_USER</code> : SMTP 服务用户名，一般为邮箱地址。</p></li><li><p><code>SMTP_PASS</code> : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</p></li><li><p><code>SMTP_SERVICE</code> : 邮件服务提供商，支持 <code>QQ</code>、<code>163</code>、<code>126</code>、<code>Gmail</code>、<code>&quot;Yahoo&quot;</code>、<code>......</code> ，全部支持请参考 : Nodemailer Supported services。</p><p>如 <code>SMTP_SERVICE</code> 中没有你使用的邮件服务提供商, 也可以进行自定义。</p><p>参数配置如下:</p><ul><li><code>SMTP_HOST</code> : 邮件服务提供商 SMTP 地址，如 qq : <code>smtp.qq.com</code>，<em>此项需要自行查询或询问其服务商</em>。</li><li><code>SMTP_PORT</code> : 邮件服务提供商 SMTP 端口, <em>此项需要自行查询或询问其服务商</em>。</li><li><code>SMTP_SECURE</code> : 是否启用加密, 默认为 <code>true</code>，一般不需要设置，如有特殊请自行配置。 <em>此项需要自行查询或询问其服务商</em>。</li></ul></li><li><p><code>SENDER_NAME</code> : 寄件人名称。</p></li><li><p><code>TEMPLATE_NAME</code>：邮件模板，目前内置了两款主题，分别为 <code>default</code> 与 <code>rainbow</code></p></li></ul><blockquote><p>注: 配置自定义邮件服务器的话，请不要同时配置 SMTP_SERVICE。当 SMTP_SERVICE 未配置时才会启用自定义邮件服务</p></blockquote><h4 id="如何使用阿里云邮件推送"><a class="markdownIt-Anchor" href="#如何使用阿里云邮件推送"></a> 如何使用阿里云邮件推送</h4><p>首先在<a href="https://www.aliyun.com/product/directmail?spm=5176.10695662.1kquk9v2l.1.36a015a5m8fp4Z&amp;aly_as=laPawx1G">阿里云</a>创建好发信地址 类型选择：<strong>触发邮件</strong></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191045.jpeg" alt="1.png" /></p><p>发信地址随便写，然后设置好SMTP密码。</p><p>来到我们的Leancloud</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306191049.jpeg" alt="" /></p><p>按照框框圈的设置好自己的配置即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">SMTP_USER:刚刚创建的发信地址SMTP_PASS：刚刚设置的STMP密码SMTP_HOST：使用阿里云提供的即可 smtpdm.aliyun.comSMTP_PORT：我使用的https协议端口465，可以自行选择SMTP_SECURE：如果没有使用https可以改为false <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 功能增强 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Python和pip环境</title>
      <link href="/posts/86294606/"/>
      <url>/posts/86294606/</url>
      
        <content type="html"><![CDATA[<h2 id="下载安装包"><a class="markdownIt-Anchor" href="#下载安装包"></a> 下载安装包</h2><p><a href="https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz">https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz</a></p><p>建议使用迅雷下载</p><h2 id="上传压缩包后解压"><a class="markdownIt-Anchor" href="#上传压缩包后解压"></a> 上传压缩包后解压</h2><p><code>tar -xvf Python-3.9.6.tgz</code></p><p>然后进入目录 <code>cd Python-3.9.6</code></p><h2 id="删除旧版本"><a class="markdownIt-Anchor" href="#删除旧版本"></a> 删除旧版本</h2><p>如果在这之前安装过其他版本的python，那么建议先删除在重新安装新版本。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf /usr/bin/python3<span class="token function">rm</span> -rf /usr/bin/pip3<span class="token function">rm</span> -rf /usr/local/python3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="安装依赖关系"><a class="markdownIt-Anchor" href="#安装依赖关系"></a> 安装依赖关系</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">yum install gcc patch libffi-devel python-devel  zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>gcc :c编译器<br />python-devel    python 开发包<br />openssl-devel     用于pythn的ssl模块<br />sqlite-devel     轻量级数据库</p></blockquote><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192749.jpeg" alt="" /></p><h2 id="制定安装路径"><a class="markdownIt-Anchor" href="#制定安装路径"></a> 制定安装路径</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>prefix后边加的就是你的路径。我这里表示的是安装到<code>/usr/local/python3</code>这个目录里。</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192754.jpeg" alt="" /></p><h2 id="编译安装"><a class="markdownIt-Anchor" href="#编译安装"></a> 编译&amp;安装</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">make &amp; make install &amp;&amp; make clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192758.jpeg" alt="" /></p><p>我自己在测试中卡在了一个进度，不知道啥原因，解决方式就是<code>ctrl+c</code>强制终止，然后重新运行一下<code>make &amp; make install</code>命令即可。</p><p>此时进入我们的安装目录，已经能看到有文件了</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192801.jpeg" alt="" /></p><h2 id="添加软连接"><a class="markdownIt-Anchor" href="#添加软连接"></a> 添加软连接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -s /usr/local/python3/bin/python3.9 /usr/bin/python3<span class="token function">ln</span> -s /usr/local/python3/bin/pip3.9 /usr/bin/pip3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello-World</title>
      <link href="/posts/f689a288/"/>
      <url>/posts/f689a288/</url>
      
        <content type="html"><![CDATA[<h2 id="这是哪里"><a class="markdownIt-Anchor" href="#这是哪里"></a> 这是哪里</h2><p>这里是<a href="https://antmoe.com/">小康博客</a>Hexo 版，此站将会替代曾经的博客。</p><h2 id="地址说明"><a class="markdownIt-Anchor" href="#地址说明"></a> 地址说明</h2><p>本博客采用的地址是不加<code>www</code>的根域名，这是当初一个错误的决定。因此，当此博客关闭时，这个域名不会解析到新博客，新博客地址为加<code>wwww</code>的即<code>https://www.antmoe.com</code>。在这里我发现 coding 还是挺不错的，给申请 https 证书，不知道能不能自动续期。</p><h2 id="文章说明"><a class="markdownIt-Anchor" href="#文章说明"></a> 文章说明</h2><p>文章这件事我思考了很久，决定只留一些有意义的文章，一些笔记什么的可能就直接放弃了。 不过这么一来好像也就没什么可以留的了。</p><h2 id="最后说明"><a class="markdownIt-Anchor" href="#最后说明"></a> 最后说明</h2><p>关于本博客的一些友情链接，我会在博客关闭前逐一去访问，如果贵站还添加着本站，并且支持 https 那么我会搬到新博客的友情连接。当然了贵站还是可以与本站再次添加友情链接的。</p><h2 id="打赏记录"><a class="markdownIt-Anchor" href="#打赏记录"></a> 打赏记录</h2><p>打赏记录于<span class="inline-tag grey">2020 年 05 月 23 日</span>。其中时间与订单交易时间一致，姓名（昵称）如果没有备注，默认即交易中的名称。如果您觉得侵犯了您的隐私，那么可以私信我，删除姓名（昵称）。</p><table><thead><tr><th style="text-align:center">时间</th><th style="text-align:center">途径</th><th style="text-align:center">姓名(昵称)</th><th style="text-align:center">金额</th></tr></thead><tbody><tr><td style="text-align:center">2021-03-29<br />20:45:50</td><td style="text-align:center">QQ</td><td style="text-align:center">blog</td><td style="text-align:center">￥ 10.00</td></tr><tr><td style="text-align:center">2021-01-13<br />19:19:26</td><td style="text-align:center">微信</td><td style="text-align:center">w*m</td><td style="text-align:center">￥ 8.88</td></tr><tr><td style="text-align:center">2020-09-10<br />10:14:08</td><td style="text-align:center">微信</td><td style="text-align:center">*尔</td><td style="text-align:center">￥ 1.00</td></tr><tr><td style="text-align:center">2020-09-10<br />10:13:05</td><td style="text-align:center">微信</td><td style="text-align:center">*尔</td><td style="text-align:center">￥ 1.00</td></tr><tr><td style="text-align:center">2020-08-11<br />12:00:25</td><td style="text-align:center">支付宝</td><td style="text-align:center">**升</td><td style="text-align:center">￥ 100.00</td></tr><tr><td style="text-align:center">2020-06-18<br />11:17:14</td><td style="text-align:center">支付宝</td><td style="text-align:center">**鹏</td><td style="text-align:center">￥ 0.50</td></tr><tr><td style="text-align:center">2020-05-23<br />10:09:21</td><td style="text-align:center">微信</td><td style="text-align:center">*想</td><td style="text-align:center">￥ 10.00</td></tr><tr><td style="text-align:center">2020-05-23<br />09:10:57</td><td style="text-align:center">微信</td><td style="text-align:center">*想</td><td style="text-align:center">￥ 6.60</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>为服务器添加秘钥进行登录</title>
      <link href="/posts/d2001b63/"/>
      <url>/posts/d2001b63/</url>
      
        <content type="html"><![CDATA[<h2 id="linux准备基础环境"><a class="markdownIt-Anchor" href="#linux准备基础环境"></a> Linux准备基础环境</h2><p>首先在根目录下创建一个隐藏文件<code>mkdir .ssh/</code>,然后设置权限<code>chmod 700 .ssh/</code></p><p>在<code>.ssh</code>目录下创建文件<code>authorized_keys</code> 并赋予权限<code>chmod 600 .ssh/authorized_keys</code></p><h2 id="创建秘钥"><a class="markdownIt-Anchor" href="#创建秘钥"></a> 创建秘钥</h2><p>在<code>xshell</code>菜单中点工具-&gt;新建秘钥向导<img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/9ff9cfc8b050f5a8ffd6475183e5f4e0.png" alt="" /></p><p>秘钥类型及长度根据你自己选择，我这里就默认下一步了</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/40f36a7de3a9e839635a57f27baab2f1.png" alt="" /></p><p>输入完成后可以点击完成，也可以点击下一步选择公钥格式。</p><h2 id="导入公钥"><a class="markdownIt-Anchor" href="#导入公钥"></a> 导入公钥</h2><p>创建完成后会自动弹出用户秘钥的窗口，如果没有弹出，也可以通过菜单栏里的工具找到。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/fb0eb38a2bd741f19dbe8b6f249cc136.png" alt="" /></p><p><img src="https://cdn.antmoe.com/typecho/uploads/2019/06/3893210269.jpg" alt="" /></p><p>接下来复制公钥</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/302b086c5fdc7abd2476a41dcda68f71.png" alt="第一步" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/fc5f784ba46e9dec498a0bc67c7b4275.png" alt="第二步" /></p><p>公钥复制好之后打开我们之前创建的公钥文件(authorized_keys)<code>vim authorized_keys</code> 将复制的公钥写入这个文件。<img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/e324859a2c2d2e140488417282210b9f.png" alt="" /> 然后保存退出。</p><h2 id="测试公钥是否成功"><a class="markdownIt-Anchor" href="#测试公钥是否成功"></a> 测试公钥是否成功</h2><p>登录地址就是主机的ip地址</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/1cf647f433de61d743fbed528d3d49c9.png" alt="" /></p><p>这一步选择公钥登录</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/37ee770fb7a2e690da95b86a5c956b19.png" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密钥登陆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改ssh服务的默认端口</title>
      <link href="/posts/8b7a7556/"/>
      <url>/posts/8b7a7556/</url>
      
        <content type="html"><![CDATA[<h2 id="修改端口前需要做的事情"><a class="markdownIt-Anchor" href="#修改端口前需要做的事情"></a> 修改端口前需要做的事情</h2><p><strong>此步很重要，否则会出现意想不到的惊喜！！！</strong></p><ol><li>关闭selinux<ul><li>临时关闭<code>setenforce 0</code></li><li>永久关闭<code>vim /etc/selinux/config</code> -&gt;将字段修改为disabled<code>SELINUX=disabled</code></li></ul></li><li>关闭防火墙<ul><li>临时关闭<code>systemctl stop firewalld</code></li><li>取消开机自启<code>systemctl enable firewalld</code></li></ul></li></ol><h2 id="修改ssh默认端口"><a class="markdownIt-Anchor" href="#修改ssh默认端口"></a> 修改ssh默认端口</h2><p>用vim打开文件<code>vim /etc/ssh/sshd_config</code>在Port字段下边写上需要修改的端口。例如我将ssh的端口改为1234</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/677d04dee80374ee2d260c3fd88984ca.png" alt="" /></p><p>修改好后，保存退出。重启sshd服务<code>systemctl restart sshd.service</code></p><h2 id="防火墙放行端口"><a class="markdownIt-Anchor" href="#防火墙放行端口"></a> 防火墙放行端口</h2><p><em>首先说一下这一步的作用，在刚刚我们修改了默认端口，那么当开启防火墙的时候会拦截这个端口(默认情况下)，所以我们需要告诉防火墙，不要拦截我刚刚设置的那个端口。</em></p><p><code>firewall-cmd --add-port=1234/tcp --permanent</code> 结尾的<code>--permanent</code>代表永久生效。设置完成后那么让刚刚设置的放行规则生效<code>firewall-cmd --reload</code></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/e641366b8ff9f49bd782e19acb09694c.png" alt="" /></p><h2 id="查看端口"><a class="markdownIt-Anchor" href="#查看端口"></a> 查看端口</h2><p>查看端口很简单，只有一条命令<code>netstat -ntpl</code></p><h2 id="小套路"><a class="markdownIt-Anchor" href="#小套路"></a> 小套路</h2><p>在修改端口时，建议开两个终端，留着一个终端，在另一个终端进行操作，即使手误改错，那么还有一个终端可以操作虚拟机。</p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 修改端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7.6搭建LNMP环境</title>
      <link href="/posts/7a993410/"/>
      <url>/posts/7a993410/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><blockquote><p>系统为centos7.6 nginx为1.12 php为7.2 MySQL为8.0.16</p></blockquote><h2 id="nginx服务"><a class="markdownIt-Anchor" href="#nginx服务"></a> nginx服务</h2><ol><li><p>安装依赖</p><p><code>sudo yum install -y yum-utils</code></p></li><li><p>安装nginx服务</p><p><code>sudo yum install -y nginx</code></p></li><li><p>配置<code>nginx</code>支持php</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span>php$ <span class="token punctuation">&#123;</span>        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">;</span>        <span class="token keyword">root</span> <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token punctuation">;</span>        <span class="token keyword">fastcgi_pass</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">9000</span><span class="token punctuation">;</span>        <span class="token keyword">fastcgi_index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token punctuation">;</span>        <span class="token keyword">fastcgi_param</span> SCRIPT_FILENAME <span class="token variable">$document_root</span><span class="token variable">$fastcgi_script_name</span><span class="token punctuation">;</span>        <span class="token keyword">include</span> fastcgi<span class="token punctuation">.</span>conf<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中第五行是你的web目录，我的(centos7.6+nginx1.12)环境默认在<code>usr/share/nginx/html</code>这个位置</p></li></ol><h2 id="安装php环境"><a class="markdownIt-Anchor" href="#安装php环境"></a> 安装php环境</h2><ol><li><p>如果之前安装过<code>php</code>服务那么请先卸载吧</p><p><code>yum -y remove php*</code></p></li><li><p>由于linux的yum源不存在php7.x，所以我们要改yum源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm <span class="token function">rpm</span> -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>安装php72w和各种扩展，选择自己需要的即可</p><p><code>yum -y install php72w php72w-cli php72w-common php72w-devel php72w-embedded php72w-fpm php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml</code></p></li><li><p>编辑php.ini</p><p>在文件中(<code>vim /etc/php.ini</code>)找到<code>;cgi.fix_pathinfo=1</code>改成<code>cgi.fix_pathinfo=0</code></p></li><li><p>创建nginx用户和组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupadd</span> -r nginx<span class="token function">useradd</span> -r -g nginx nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这一步是为了保险，分别输入以上指令即可，不用管提示</p></li><li><p>编辑php-fmp文件</p><p><code>vim /etc/php-fpm.d/www.conf</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192720.jpeg" alt="" /></p><p>将图中的<code>user = xxx</code>和<code>group = xxx</code>改为<code>user = nginx</code> <code>group = nginx</code></p></li><li><p>nginx伪静态设置(防止文章页404)</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">server</span><span class="token punctuation">&#123;</span>    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">-</span>f <span class="token variable">$request_filename</span><span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">rewrite</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span> $<span class="token number">1</span><span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">-</span>f <span class="token variable">$request_filename</span><span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">rewrite</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span> $<span class="token number">1</span><span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">-</span>f <span class="token variable">$request_filename</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">rewrite</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>启动fpm、设置开启启动并重启nginx</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start php-fpmsystemctl <span class="token builtin class-name">enable</span> php-fpmsystemctl restart nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="安装mysql80服务"><a class="markdownIt-Anchor" href="#安装mysql80服务"></a> 安装MySQL8.0服务</h2><ol><li><p>首先去<a href="https://dev.mysql.com/downloads/repo/yum/">官网</a>查看一下最新的安装包</p></li><li><p>下载MySQL源安装包</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192726.png" alt="" /></p><p>可以下载下来，用<code>xshell</code>工具上传到服务器，也可以用命令直接在服务器上下载<code>wget http://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</code></p></li><li><p>安装刚才下载的yum源</p><p><code>yum -y install mysql80-community-release-el7-3.noarch.rpm</code></p></li><li><p>查看一下安装效果</p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192731.png" alt="" /></p></li><li><p>好了，开始安装！</p><p><code>yum install mysql-community-server</code></p><p>这里可以去喝一杯茶了，时间真的很长！！</p></li><li><p>安装完成 <strong>启动MySQL服务</strong></p><p><code>systemctl start mysqld.service</code>可能会卡顿一下</p></li><li><p>查看MySQL运行状态</p><p><code>systemctl status mysqld.service</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192735.png" alt="" /></p></li><li><p>初始化数据库密码</p><p><strong>查看初始密码</strong><code>grep &quot;password&quot; /var/log/mysqld.log</code></p><p><img src="https://file.acs.pw/picGo/2022/03/06/20220306192739.png" alt="" />用后面那个密码登陆账户root</p></li><li><p>登陆</p><p><code>mysql -uroot -p</code>密码是上一步获取到的</p></li><li><p>改密码</p><p><code>ALTER USER 'root'@'localhost' IDENTIFIED BY '****************';</code>****换成你的密码即可。</p><blockquote><p>mysql默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示ERROR 1819 (HY000): Your password does not satisfy the current policy requirements错误</p></blockquote></li><li><p>设置自动启动</p><p><code>systemctl enable mysqld</code></p><p><code>systemctl daemon-reload</code></p></li></ol><h2 id="创建新用户"><a class="markdownIt-Anchor" href="#创建新用户"></a> 创建新用户</h2><p><code>create user 'username'@'localhost' identified by 'password';</code></p><p>修改认证方式以登陆phpmyadmin</p><p><code>ALTER USER 'username'@'localhost' IDENTIFIED WITH mysql_native_password BY '你的密码';</code></p><p><strong>创建数据库</strong></p><p><code>create typecho;</code></p><p>赋予数据库所有权</p><p><code>grant all on database.* to 'username'@'localhost' ;</code></p>]]></content>
      
      
      <categories>
          
          <category> 技术学习 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
