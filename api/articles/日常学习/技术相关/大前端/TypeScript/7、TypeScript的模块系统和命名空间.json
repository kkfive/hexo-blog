{"title":"7、TypeScript的模块系统和命名空间","slug":"日常学习/技术相关/大前端/TypeScript/7、TypeScript的模块系统和命名空间","date":"2020-12-15T00:40:25.000Z","updated":"2022-02-21T05:08:50.410Z","comments":true,"path":"api/articles/日常学习/技术相关/大前端/TypeScript/7、TypeScript的模块系统和命名空间.json","excerpt":null,"covers":null,"content":"<h2 id=\"模块导出与导入\"><a class=\"markdownIt-Anchor\" href=\"#模块导出与导入\"></a> 模块导出与导入</h2>\n<h3 id=\"导出\"><a class=\"markdownIt-Anchor\" href=\"#导出\"></a> 导出</h3>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> a1 <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">let</span> a2 <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'小康你好'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">&#123;</span> a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> hello <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"没有默认导出\"><a class=\"markdownIt-Anchor\" href=\"#没有默认导出\"></a> 没有默认导出</h3>\n<p>如果一个模块没有默认导出</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// m1.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>则在引入该模块的时候，需要使用下列一些方式来导入</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// main.ts</span>\n<span class=\"token comment\">// error: 提示 m1 模块没有默认导出</span>\n<span class=\"token keyword\">import</span> v <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1'</span>\n\n<span class=\"token comment\">// 可以简单的使用如下方式</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>obj<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1'</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> m1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1'</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">.</span>obj<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"导入\"><a class=\"markdownIt-Anchor\" href=\"#导入\"></a> 导入</h3>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> a1<span class=\"token punctuation\">,</span> hello <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./a'</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"模块编译\"><a class=\"markdownIt-Anchor\" href=\"#模块编译\"></a> 模块编译</h2>\n<p><code>TypeScript</code> 编译器也能够根据相应的编译参数，把代码编译成指定的模块系统使用的代码</p>\n<h3 id=\"module-选项\"><a class=\"markdownIt-Anchor\" href=\"#module-选项\"></a> <code>module</code> 选项</h3>\n<p>在 <code>TypeScript</code> 编译选项中，<code>module</code> 选项是用来指定生成哪个模块系统的代码，可设置的值有：<code>&quot;none&quot;</code>、<code>&quot;commonjs&quot;</code>、<code>&quot;amd&quot;</code>、<code>&quot;udm&quot;</code>、<code>&quot;es6&quot;</code>/<code>&quot;es2015/esnext&quot;</code>、<code>&quot;System&quot;</code></p>\n<ul>\n<li><code>target==&quot;es3&quot; or &quot;es5&quot;</code>：默认使用 <code>commonjs</code></li>\n<li>其它情况，默认 <code>es6</code></li>\n</ul>\n<h2 id=\"加载非-ts-文件\"><a class=\"markdownIt-Anchor\" href=\"#加载非-ts-文件\"></a> 加载非 <code>TS</code> 文件</h2>\n<p>有的时候，我们需要引入一些 <code>js</code> 的模块，比如导入一些第三方的使用 <code>js</code> 而非 <code>ts</code> 编写的模块，默认情况下 <code>tsc</code> 是不对非 <code>ts</code> 模块文件进行处理的</p>\n<p>我们可以通过 <code>allowJs</code> 选项开启该特性</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// m1.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// main.ts</span>\n<span class=\"token keyword\">import</span> m1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1.js'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"非-esm-模块中的默认值问题\"><a class=\"markdownIt-Anchor\" href=\"#非-esm-模块中的默认值问题\"></a> 非 <code>ESM</code> 模块中的默认值问题</h3>\n<p>如果在js文件中导出的模块没有默认导出，那么在ts中加载需要在编译配置中打开<code>allowSyntheticDefaultImports</code>选项。</p>\n<p>虽然可以编译通过，但生成的文件会默认调用<code>default</code>属性，因此打印出的结果是<code>undefined</code>，因此为了处理默认值问题，还需要打开<code>esModuleInterop</code>选项。</p>\n<p>因此，如果处理非默认导出模块需要开启三个选项：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// ...</span>\n        \n        <span class=\"token comment\">// 1. 处理js文件</span>\n        <span class=\"token property\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token comment\">// 2. 允许从没有设置默认导出的模块中默认导入</span>\n        <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token comment\">// 3. 则在编译的同时生成一个 `__importDefault` 函数，用来处理具体的 `default` 默认导出</span>\n        <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>注意：以上设置只能当 <code>module</code> 不为 <code>es6+</code> 的情况下有效</p>\n</blockquote>\n<h3 id=\"以模块的方式加载-json-格式的文件\"><a class=\"markdownIt-Anchor\" href=\"#以模块的方式加载-json-格式的文件\"></a> 以模块的方式加载 JSON 格式的文件</h3>\n<p><code>TypeScript 2.9+</code> 版本添加了一个新的编译选项：<code>resolveJsonModule</code>，它允许我们把一个 <code>JSON</code> 文件作为模块进行加载</p>\n<p><strong>resolveJsonModule</strong></p>\n<p>设置为：<code>true</code> ，可以把 <code>json</code> 文件作为一个模块进行解析</p>\n<p><strong>data.json</strong></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"小康\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"gender\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"男\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>ts文件</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> userData <span class=\"token keyword\">from</span> <span class=\"token string\">'./data.json'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"命名空间\"><a class=\"markdownIt-Anchor\" href=\"#命名空间\"></a> 命名空间</h2>\n<p>在 <code>TS</code> 中，<code>export</code> 和 <code>import</code> 称为 外部模块，<code>TS</code> 中还支持一种内部模块<code>namespace</code>，它的主要作用只是单纯的在文件内部（模块内容）隔离作用域</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">namespace</span> k1 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        a\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">namespace</span> k2 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">.</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"自用配置\"><a class=\"markdownIt-Anchor\" href=\"#自用配置\"></a> 自用配置</h2>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 严格空检查</span>\n    <span class=\"token property\">\"strictNullChecks\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 指定生成哪个模块系统的代码</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CommonJS\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 处理js文件</span>\n    <span class=\"token property\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 允许从没有设置默认导出的模块中默认导入</span>\n    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 则在编译的同时生成一个 `__importDefault` 函数，用来处理具体的 `default` 默认导出</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 加载JSON文件</span>\n    <span class=\"token property\">\"resolveJsonModule\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 启用装饰器</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"模块导出与导入\"><a class=\"markdownIt-Anchor\" href=\"#模块导出与导入\"></a> 模块导出与导入</h2>\n<h3 id=\"导出\"><a class=\"markdownIt-Anchor\" href=\"#导出\"></a> 导出</h3>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> a1 <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">let</span> a2 <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'小康你好'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">&#123;</span> a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> hello <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"没有默认导出\"><a class=\"markdownIt-Anchor\" href=\"#没有默认导出\"></a> 没有默认导出</h3>\n<p>如果一个模块没有默认导出</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// m1.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>则在引入该模块的时候，需要使用下列一些方式来导入</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// main.ts</span>\n<span class=\"token comment\">// error: 提示 m1 模块没有默认导出</span>\n<span class=\"token keyword\">import</span> v <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1'</span>\n\n<span class=\"token comment\">// 可以简单的使用如下方式</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>obj<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1'</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> m1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1'</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">.</span>obj<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"导入\"><a class=\"markdownIt-Anchor\" href=\"#导入\"></a> 导入</h3>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> a1<span class=\"token punctuation\">,</span> hello <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./a'</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"模块编译\"><a class=\"markdownIt-Anchor\" href=\"#模块编译\"></a> 模块编译</h2>\n<p><code>TypeScript</code> 编译器也能够根据相应的编译参数，把代码编译成指定的模块系统使用的代码</p>\n<h3 id=\"module-选项\"><a class=\"markdownIt-Anchor\" href=\"#module-选项\"></a> <code>module</code> 选项</h3>\n<p>在 <code>TypeScript</code> 编译选项中，<code>module</code> 选项是用来指定生成哪个模块系统的代码，可设置的值有：<code>&quot;none&quot;</code>、<code>&quot;commonjs&quot;</code>、<code>&quot;amd&quot;</code>、<code>&quot;udm&quot;</code>、<code>&quot;es6&quot;</code>/<code>&quot;es2015/esnext&quot;</code>、<code>&quot;System&quot;</code></p>\n<ul>\n<li><code>target==&quot;es3&quot; or &quot;es5&quot;</code>：默认使用 <code>commonjs</code></li>\n<li>其它情况，默认 <code>es6</code></li>\n</ul>\n<h2 id=\"加载非-ts-文件\"><a class=\"markdownIt-Anchor\" href=\"#加载非-ts-文件\"></a> 加载非 <code>TS</code> 文件</h2>\n<p>有的时候，我们需要引入一些 <code>js</code> 的模块，比如导入一些第三方的使用 <code>js</code> 而非 <code>ts</code> 编写的模块，默认情况下 <code>tsc</code> 是不对非 <code>ts</code> 模块文件进行处理的</p>\n<p>我们可以通过 <code>allowJs</code> 选项开启该特性</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// m1.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// main.ts</span>\n<span class=\"token keyword\">import</span> m1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./m1.js'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"非-esm-模块中的默认值问题\"><a class=\"markdownIt-Anchor\" href=\"#非-esm-模块中的默认值问题\"></a> 非 <code>ESM</code> 模块中的默认值问题</h3>\n<p>如果在js文件中导出的模块没有默认导出，那么在ts中加载需要在编译配置中打开<code>allowSyntheticDefaultImports</code>选项。</p>\n<p>虽然可以编译通过，但生成的文件会默认调用<code>default</code>属性，因此打印出的结果是<code>undefined</code>，因此为了处理默认值问题，还需要打开<code>esModuleInterop</code>选项。</p>\n<p>因此，如果处理非默认导出模块需要开启三个选项：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// ...</span>\n        \n        <span class=\"token comment\">// 1. 处理js文件</span>\n        <span class=\"token property\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token comment\">// 2. 允许从没有设置默认导出的模块中默认导入</span>\n        <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token comment\">// 3. 则在编译的同时生成一个 `__importDefault` 函数，用来处理具体的 `default` 默认导出</span>\n        <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>注意：以上设置只能当 <code>module</code> 不为 <code>es6+</code> 的情况下有效</p>\n</blockquote>\n<h3 id=\"以模块的方式加载-json-格式的文件\"><a class=\"markdownIt-Anchor\" href=\"#以模块的方式加载-json-格式的文件\"></a> 以模块的方式加载 JSON 格式的文件</h3>\n<p><code>TypeScript 2.9+</code> 版本添加了一个新的编译选项：<code>resolveJsonModule</code>，它允许我们把一个 <code>JSON</code> 文件作为模块进行加载</p>\n<p><strong>resolveJsonModule</strong></p>\n<p>设置为：<code>true</code> ，可以把 <code>json</code> 文件作为一个模块进行解析</p>\n<p><strong>data.json</strong></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"小康\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"gender\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"男\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>ts文件</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> userData <span class=\"token keyword\">from</span> <span class=\"token string\">'./data.json'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"命名空间\"><a class=\"markdownIt-Anchor\" href=\"#命名空间\"></a> 命名空间</h2>\n<p>在 <code>TS</code> 中，<code>export</code> 和 <code>import</code> 称为 外部模块，<code>TS</code> 中还支持一种内部模块<code>namespace</code>，它的主要作用只是单纯的在文件内部（模块内容）隔离作用域</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">namespace</span> k1 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        a\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">namespace</span> k2 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">.</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"自用配置\"><a class=\"markdownIt-Anchor\" href=\"#自用配置\"></a> 自用配置</h2>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 严格空检查</span>\n    <span class=\"token property\">\"strictNullChecks\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 指定生成哪个模块系统的代码</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CommonJS\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 处理js文件</span>\n    <span class=\"token property\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 允许从没有设置默认导出的模块中默认导入</span>\n    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 则在编译的同时生成一个 `__importDefault` 函数，用来处理具体的 `default` 默认导出</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 加载JSON文件</span>\n    <span class=\"token property\">\"resolveJsonModule\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 启用装饰器</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"大前端","path":"api/categories/大前端.json"},{"name":"TypeScript","path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript","path":"api/tags/TypeScript.json"}]}