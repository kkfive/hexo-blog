{"title":"初识vue3之单文件组件script setup","slug":"日常学习/技术相关/Vue/Vue3新特性/初识vue3之单文件组件script setup","date":"2021-12-18T10:52:25.000Z","updated":"2022-02-21T07:18:57.053Z","comments":true,"path":"api/articles/日常学习/技术相关/Vue/Vue3新特性/初识vue3之单文件组件script setup.json","excerpt":null,"covers":null,"content":"<h2 id=\"关于此分类\"><a class=\"markdownIt-Anchor\" href=\"#关于此分类\"></a> 关于此分类</h2>\n<p>关于<a href=\"/categories/Vue/%E5%88%9D%E8%AF%86Vue3/\">初识 vue3</a>分类主要是记录一些通过 vue3 进行的实践与学习记录。</p>\n<blockquote>\n<p>此文主要记录关于 vue3 script setup的尝试。</p>\n</blockquote>\n<p><strong><a href=\"/posts/a6b120db/\">本文</a>会随着<a href=\"https://xiaokang.me/\">作者</a>日常使用进行补充及内容修正</strong></p>\n<p>本文参考于：</p>\n<ul>\n<li><a href=\"https://v3.cn.vuejs.org/api/sfc-script-setup.html#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\">单文件组件<code>&lt;script setup&gt;</code></a></li>\n</ul>\n<h2 id=\"默认自动暴露\"><a class=\"markdownIt-Anchor\" href=\"#默认自动暴露\"></a> 默认自动暴露</h2>\n<p><code>&lt;script setup&gt;</code> 是在单文件组件 (SFC) 中使用<strong>组合式API</strong>的编译时语法糖。相比于普通的<code>&lt;script&gt;</code>语法，它具有更多优势：</p>\n<ul>\n<li>更少的样板内容，更简洁的代码。</li>\n<li>能够使用纯 Typescript 声明 props 和抛出事件。</li>\n<li>更好的运行时性能 (其模板会被编译成与其同一作用域的渲染函数，没有任何的中间代理)。</li>\n<li>更好的 IDE 类型推断性能 (减少语言服务器从代码中抽离类型的工作)。</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>当前msg的值：&#123;&#123; msg &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>当前msg的值(ref的值会被自动解包)：&#123;&#123; msgRef &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token comment\">// 1. 顶层的绑定会暴露给模板</span>\n<span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">'这是一条msg'</span>\n<span class=\"token keyword\">const</span> msgRef <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>同样的导入组件也可以直接使用</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyComponent</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> MyComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyComponent.vue'</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"动态组件\"><a class=\"markdownIt-Anchor\" href=\"#动态组件\"></a> 动态组件</h2>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> Foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./Foo.vue'</span>\n<span class=\"token keyword\">import</span> Bar <span class=\"token keyword\">from</span> <span class=\"token string\">'./Bar.vue'</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">:is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Foo<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">:is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>someCondition ? Foo : Bar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"自定义指令\"><a class=\"markdownIt-Anchor\" href=\"#自定义指令\"></a> 自定义指令</h2>\n<p>但这里有一个需要注意的限制：必须以 <code>vNameOfDirective</code> 的形式来命名本地自定义指令，以使得它们可以直接在模板中使用。</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> vMyDirective <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">beforeMount</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>el<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> Ref<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// value 即传入的参数值</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-my-directive</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"defineprops-defineemits-defineexpose\"><a class=\"markdownIt-Anchor\" href=\"#defineprops-defineemits-defineexpose\"></a> defineProps、defineEmits、defineExpose</h2>\n<p><code>defineProps</code>和<code>defineEmits</code>分别用于定义当前组件需要接收的参数和需要触发的emit。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token function\">defineProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  foo<span class=\"token operator\">:</span> String\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token function\">defineEmits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'delete'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在JavaScript中上述定义即可，但在typescript中可以为其增加类型。</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineProps</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  foo<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  bar<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineEmits</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'update'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>类型声明时的默认值</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineProps</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  foo<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  bar<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineEmits</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'update'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>defineExpose用于定义暴露出去的属性，此模式下默认是全暴露</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;script setup&gt;\nimport &#123; ref &#125; from &#39;vue&#39;\n\nconst a &#x3D; 1\nconst b &#x3D; ref(2)\n\ndefineExpose(&#123;\n  a,\n  b\n&#125;)\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用 <code>&lt;script setup&gt;</code> 的组件是<strong>默认关闭</strong>的，也即通过模板 ref 或者 <code>$parent</code> 链获取到的组件的公开实例，不会暴露任何在 <code>&lt;script setup&gt;</code> 中声明的绑定。</p>\n<p>为了在 <code>&lt;script setup&gt;</code> 组件中明确要暴露出去的属性，使用 <code>defineExpose</code> 编译器宏</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;test&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup&gt;\nconst a &#x3D; 1\ndefineExpose(&#123;\n  a: 1\n&#125;)\n&lt;&#x2F;script&gt;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在父组件中使用</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;testAVue ref&#x3D;&quot;testRef&quot; &#x2F;&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup lang&#x3D;&quot;ts&quot;&gt;\nimport testAVue from &#39;.&#x2F;test-a.vue&#39;\nimport &#123; onMounted, ref &#125; from &#39;vue&#39;\nconst testRef &#x3D; ref(null)\nonMounted(() &#x3D;&gt; &#123;\n  console.log(testRef.value) &#x2F;&#x2F; Proxy &#123;a: 1, __v_skip: true&#125;\n&#125;)\n&lt;&#x2F;script&gt;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"与普通的script使用\"><a class=\"markdownIt-Anchor\" href=\"#与普通的script使用\"></a> 与普通的<code>&lt;script&gt;</code>使用</h2>\n<p><code>&lt;script setup&gt;</code> 可以和普通的 <code>&lt;script&gt;</code> 一起使用。普通的 <code>&lt;script&gt;</code> 在有这些需要的情况下或许会被使用到：</p>\n<ul>\n<li>无法在 <code>&lt;script setup&gt;</code> 声明的选项，例如 <code>inheritAttrs</code> 或通过插件启用的自定义的选项。</li>\n<li>声明命名导出。</li>\n<li>运行副作用或者创建只需要执行一次的对象。</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;script&gt;\n    &#x2F;&#x2F; 普通 &lt;script&gt;, 在模块范围下执行(只执行一次)\n    runSideEffectOnce()\n\n    &#x2F;&#x2F; 声明额外的选项\n    export default &#123;\n        inheritAttrs: false,\n        customOptions: &#123;&#125;\n    &#125;\n&lt;&#x2F;script&gt;\n\n&lt;script setup&gt;\n    &#x2F;&#x2F; 在 setup() 作用域中执行 (对每个实例皆如此)\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"关于此分类\"><a class=\"markdownIt-Anchor\" href=\"#关于此分类\"></a> 关于此分类</h2>\n<p>关于<a href=\"/categories/Vue/%E5%88%9D%E8%AF%86Vue3/\">初识 vue3</a>分类主要是记录一些通过 vue3 进行的实践与学习记录。</p>\n<blockquote>\n<p>此文主要记录关于 vue3 script setup的尝试。</p>\n</blockquote>\n<p><strong><a href=\"/posts/a6b120db/\">本文</a>会随着<a href=\"https://xiaokang.me/\">作者</a>日常使用进行补充及内容修正</strong></p>\n<p>本文参考于：</p>\n<ul>\n<li><a href=\"https://v3.cn.vuejs.org/api/sfc-script-setup.html#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\">单文件组件<code>&lt;script setup&gt;</code></a></li>\n</ul>\n<h2 id=\"默认自动暴露\"><a class=\"markdownIt-Anchor\" href=\"#默认自动暴露\"></a> 默认自动暴露</h2>\n<p><code>&lt;script setup&gt;</code> 是在单文件组件 (SFC) 中使用<strong>组合式API</strong>的编译时语法糖。相比于普通的<code>&lt;script&gt;</code>语法，它具有更多优势：</p>\n<ul>\n<li>更少的样板内容，更简洁的代码。</li>\n<li>能够使用纯 Typescript 声明 props 和抛出事件。</li>\n<li>更好的运行时性能 (其模板会被编译成与其同一作用域的渲染函数，没有任何的中间代理)。</li>\n<li>更好的 IDE 类型推断性能 (减少语言服务器从代码中抽离类型的工作)。</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>当前msg的值：&#123;&#123; msg &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>当前msg的值(ref的值会被自动解包)：&#123;&#123; msgRef &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token comment\">// 1. 顶层的绑定会暴露给模板</span>\n<span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">'这是一条msg'</span>\n<span class=\"token keyword\">const</span> msgRef <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>同样的导入组件也可以直接使用</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyComponent</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> MyComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyComponent.vue'</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"动态组件\"><a class=\"markdownIt-Anchor\" href=\"#动态组件\"></a> 动态组件</h2>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> Foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./Foo.vue'</span>\n<span class=\"token keyword\">import</span> Bar <span class=\"token keyword\">from</span> <span class=\"token string\">'./Bar.vue'</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">:is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Foo<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">:is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>someCondition ? Foo : Bar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"自定义指令\"><a class=\"markdownIt-Anchor\" href=\"#自定义指令\"></a> 自定义指令</h2>\n<p>但这里有一个需要注意的限制：必须以 <code>vNameOfDirective</code> 的形式来命名本地自定义指令，以使得它们可以直接在模板中使用。</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> vMyDirective <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">beforeMount</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>el<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> Ref<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// value 即传入的参数值</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-my-directive</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"defineprops-defineemits-defineexpose\"><a class=\"markdownIt-Anchor\" href=\"#defineprops-defineemits-defineexpose\"></a> defineProps、defineEmits、defineExpose</h2>\n<p><code>defineProps</code>和<code>defineEmits</code>分别用于定义当前组件需要接收的参数和需要触发的emit。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token function\">defineProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  foo<span class=\"token operator\">:</span> String\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token function\">defineEmits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'delete'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在JavaScript中上述定义即可，但在typescript中可以为其增加类型。</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineProps</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  foo<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  bar<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineEmits</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'update'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>类型声明时的默认值</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineProps</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  foo<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  bar<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">defineEmits</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'update'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>defineExpose用于定义暴露出去的属性，此模式下默认是全暴露</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;script setup&gt;\nimport &#123; ref &#125; from &#39;vue&#39;\n\nconst a &#x3D; 1\nconst b &#x3D; ref(2)\n\ndefineExpose(&#123;\n  a,\n  b\n&#125;)\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用 <code>&lt;script setup&gt;</code> 的组件是<strong>默认关闭</strong>的，也即通过模板 ref 或者 <code>$parent</code> 链获取到的组件的公开实例，不会暴露任何在 <code>&lt;script setup&gt;</code> 中声明的绑定。</p>\n<p>为了在 <code>&lt;script setup&gt;</code> 组件中明确要暴露出去的属性，使用 <code>defineExpose</code> 编译器宏</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;test&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup&gt;\nconst a &#x3D; 1\ndefineExpose(&#123;\n  a: 1\n&#125;)\n&lt;&#x2F;script&gt;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在父组件中使用</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;testAVue ref&#x3D;&quot;testRef&quot; &#x2F;&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup lang&#x3D;&quot;ts&quot;&gt;\nimport testAVue from &#39;.&#x2F;test-a.vue&#39;\nimport &#123; onMounted, ref &#125; from &#39;vue&#39;\nconst testRef &#x3D; ref(null)\nonMounted(() &#x3D;&gt; &#123;\n  console.log(testRef.value) &#x2F;&#x2F; Proxy &#123;a: 1, __v_skip: true&#125;\n&#125;)\n&lt;&#x2F;script&gt;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"与普通的script使用\"><a class=\"markdownIt-Anchor\" href=\"#与普通的script使用\"></a> 与普通的<code>&lt;script&gt;</code>使用</h2>\n<p><code>&lt;script setup&gt;</code> 可以和普通的 <code>&lt;script&gt;</code> 一起使用。普通的 <code>&lt;script&gt;</code> 在有这些需要的情况下或许会被使用到：</p>\n<ul>\n<li>无法在 <code>&lt;script setup&gt;</code> 声明的选项，例如 <code>inheritAttrs</code> 或通过插件启用的自定义的选项。</li>\n<li>声明命名导出。</li>\n<li>运行副作用或者创建只需要执行一次的对象。</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;script&gt;\n    &#x2F;&#x2F; 普通 &lt;script&gt;, 在模块范围下执行(只执行一次)\n    runSideEffectOnce()\n\n    &#x2F;&#x2F; 声明额外的选项\n    export default &#123;\n        inheritAttrs: false,\n        customOptions: &#123;&#125;\n    &#125;\n&lt;&#x2F;script&gt;\n\n&lt;script setup&gt;\n    &#x2F;&#x2F; 在 setup() 作用域中执行 (对每个实例皆如此)\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"Vue","path":"api/categories/Vue.json"},{"name":"初识Vue3","path":"api/categories/初识Vue3.json"}],"tags":[{"name":"单文件组件","path":"api/tags/单文件组件.json"},{"name":"script setup","path":"api/tags/script setup.json"}]}