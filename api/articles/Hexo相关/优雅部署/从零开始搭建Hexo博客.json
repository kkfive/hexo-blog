{"title":"从零开始搭建Hexo博客","slug":"Hexo相关/优雅部署/从零开始搭建Hexo博客","date":"2020-04-09T07:57:07.000Z","updated":"2022-02-21T06:22:27.456Z","comments":true,"path":"api/articles/Hexo相关/优雅部署/从零开始搭建Hexo博客.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/8c33331e2a1b3f986e7f193464bdf0be.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/de178507ab6f40c453586f4c727b9eb2.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ec610253e0235a0e916d503a8d54e6be.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/02baf31d43c69871d1d5558373cc386b.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/fe18b109d0fb0ce72ce44118d02a2d6a.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/34c28c2b7272a2a295c31d6ac16cf8e1.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/14cdb4c8ee2692f15621b79049791cc8.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/5abb7f605a6b89f4025a2b3ac4f57c4d.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png","https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ce053efafc20ce9fd5694f309ef5dd9c.png"],"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>写此篇文章的初衷就是当一个完全不懂的小白可以看着此篇教程后就可以完成自己的Hexo博客搭建。</p>\n<p>这篇文章分为三部分：</p>\n<p>第一部分：安装环境</p>\n<p>第二部分：安装Hexo</p>\n<p>第三部分：部署到Github或者Coding或者码云</p>\n<h2 id=\"安装环境\"><a class=\"markdownIt-Anchor\" href=\"#安装环境\"></a> 安装环境</h2>\n<h3 id=\"安装nodejs与git\"><a class=\"markdownIt-Anchor\" href=\"#安装nodejs与git\"></a> 安装node.js与git</h3>\n<p>这里的安装环境主要指的是<a href=\"https://git-scm.com/\">Git</a>与<a href=\"https://nodejs.org/zh-cn/download/\">Node.js</a>环境，因此我们的后续操作都是建立在了这两个的基础上。</p>\n<p>安装下载非常简单，遇到不懂的点下一步即可。但是需要注意的是添加完成后需要添加环境变量，一般情况下它会默认帮你添加上，如果没有添加也不需要担心，我们手动添加即可。</p>\n<ul>\n<li>\n<p>检查是否正确安装</p>\n<p>打开cmd，输入<code>node -v</code>与<code>git --version</code>，如果能输出信息则表示成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/8c33331e2a1b3f986e7f193464bdf0be.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>手动配置环境变量</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/de178507ab6f40c453586f4c727b9eb2.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ec610253e0235a0e916d503a8d54e6be.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/02baf31d43c69871d1d5558373cc386b.png\" alt=\"\" /></p>\n<p>选择Path，然后点击编辑。然后将你的安装目录写在里边即可，如果两个都没有则需要写两个目录（git与node）直到可以使用git与node为止。</p>\n</li>\n</ul>\n<h2 id=\"安装hexo\"><a class=\"markdownIt-Anchor\" href=\"#安装hexo\"></a> 安装Hexo</h2>\n<blockquote>\n<p>这里首先说明下，npm的仓库在国外，这就意味着下载可能非常慢，或者不可以下载。因此我的解决方案是用淘宝的镜像源替代。<a href=\"https://developer.aliyun.com/mirror/NPM?from=tnpm\">更多</a></p>\n<p>替代方案很简单只需要在命令行输入<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>即可，然后每次需要使用<code>npm</code>命令时，将<code>npm</code>换成<code>cnpm</code>即可。</p>\n<p><em>我这里使用以上解决方案，因为实在是慢</em></p>\n</blockquote>\n<p>以上内容非必须，你完全可以不适用淘宝的镜像源，而使用官方的下载方式。即将本教程的<code>cnpm xxxx</code>命令换成<code>npm xxxx</code>即可。</p>\n<ol>\n<li>\n<p>安装Hexo</p>\n<p><code>cnpm install -g hexo-cli</code></p>\n<p>安装完成后依旧使用<code>hexo -v</code>查看以下版本号。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/fe18b109d0fb0ce72ce44118d02a2d6a.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>初始化一个Hexo博客</p>\n<p>在任意位置创建一个文件夹，你的博客将出现在这个文件夹。</p>\n<p>然后我们用命令行进入这个文件夹。<em>如果你是Windows用户，可以使用shift+鼠标右键，然后选择PowerShell。快速进入这个文件夹哦</em></p>\n<p>输入命令<code>hexo init .</code>，然后程序会自动克隆一个Hexo项目到你当前目录。克隆过程中可能速度稍慢，可需要耐心等一会儿。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/34c28c2b7272a2a295c31d6ac16cf8e1.png\" alt=\"\" /></p>\n<p>看到这样的结果，那就说明已经初始化完成了一个Hexo博客。</p>\n</li>\n<li>\n<p>查看Hexo博客</p>\n<p>Hexo博客是自带服务器的，所以我们可以通过<code>hexo s</code>命令查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/14cdb4c8ee2692f15621b79049791cc8.png\" alt=\"\" /></p>\n<p>看到图片上的提示那么此时打开浏览器输入http://127.0.0.1:4000即可查看到博客。</p>\n<img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/5abb7f605a6b89f4025a2b3ac4f57c4d.png\" style=\"zoom:25%;\" />\n</li>\n<li>\n<p>安装一个主题</p>\n<p>这里我是用sakura主题 <a href=\"https://github.com/honjun/hexo-theme-sakura\">github地址</a>，<a href=\"https://docs.hojun.cn/sakura/docs/#/home\">文档地址</a></p>\n<p>此主题较为特殊，此主题需要将GitHub下载的文件在Hexo根目录解压，如果出现重复覆盖即可。关于此主题的更多内容请参考官方文档。</p>\n<p><strong>如果你没有选择此主题，请注意你所选用的主题是否需要放在themes文件里</strong></p>\n<p>请选择完主题后按照主题官方文档进行配置。</p>\n</li>\n</ol>\n<h2 id=\"部署发布\"><a class=\"markdownIt-Anchor\" href=\"#部署发布\"></a> 部署发布</h2>\n<p>我们使用ssh免密部署。</p>\n<h3 id=\"创建密钥对\"><a class=\"markdownIt-Anchor\" href=\"#创建密钥对\"></a> 创建密钥对</h3>\n<p>为了方便运行GitHub Actions时登录GitHub账号，我们使用SSH方式登录。就是要把设备的私钥交给GitHub Actions，公钥交给GitHub，需要去Settings里去配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"Github 的邮箱地址\"</span>\n\n如 ssh-keygen -t rsa -C <span class=\"token string\">\"123123123@gmail.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>密钥对生成后默认的位置是用户文件。以windows为例：密钥对文件在<code>C:\\Users\\用户名</code>里，其中Users可能因为系统原因显示的是<code>用户</code>。这个文件夹里会有一个<code>.ssh</code>的目录，这个里面就是我们的密钥对。</p>\n<p>其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。</p>\n<ul>\n<li>\n<p>配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：github网站–&gt;Settings–&gt;SSH and GPG keys</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png\" alt=\"\" /><br />\n<img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png\" alt=\"\" /></p>\n<p>新增一个公钥，然后把<code>id_rsa.pub</code>这个文件用文本文档打开，将内容复制进去。</p>\n</li>\n<li>\n<p>Coding与GitHub类似</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ce053efafc20ce9fd5694f309ef5dd9c.png\" alt=\"\" /></p>\n<p>在这里将你的公钥添加进去即可。</p>\n</li>\n</ul>\n<h3 id=\"配置部署信息\"><a class=\"markdownIt-Anchor\" href=\"#配置部署信息\"></a> 配置部署信息</h3>\n<p>登录GitHub或者是coding新建一个仓库，用于公开你的博客信息。</p>\n<p>GitHub请以<code>用户名.github.io</code>命名仓库名，例如我的<code>antmoe.github.io</code></p>\n<p>创建好仓库复制ssh连接。</p>\n<p>填到hexo博客根目录下的<code>_config.yml</code>文件中</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> 你的地址\n    <span class=\"token key atrule\">coding</span><span class=\"token punctuation\">:</span> 你的地址\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后输入命令<code>cnpm install hexo-deployer-git --save</code>，否则无法使用自动部署。</p>\n<p>然后输入命令<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>即可完成部署。</p>\n<p>更多关于hexo高级部署请参考<a href=\"https://www.antmoe.com/tags/Hexo/\">我的博客</a></p>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>写此篇文章的初衷就是当一个完全不懂的小白可以看着此篇教程后就可以完成自己的Hexo博客搭建。</p>\n<p>这篇文章分为三部分：</p>\n<p>第一部分：安装环境</p>\n<p>第二部分：安装Hexo</p>\n<p>第三部分：部署到Github或者Coding或者码云</p>\n<h2 id=\"安装环境\"><a class=\"markdownIt-Anchor\" href=\"#安装环境\"></a> 安装环境</h2>\n<h3 id=\"安装nodejs与git\"><a class=\"markdownIt-Anchor\" href=\"#安装nodejs与git\"></a> 安装node.js与git</h3>\n<p>这里的安装环境主要指的是<a href=\"https://git-scm.com/\">Git</a>与<a href=\"https://nodejs.org/zh-cn/download/\">Node.js</a>环境，因此我们的后续操作都是建立在了这两个的基础上。</p>\n<p>安装下载非常简单，遇到不懂的点下一步即可。但是需要注意的是添加完成后需要添加环境变量，一般情况下它会默认帮你添加上，如果没有添加也不需要担心，我们手动添加即可。</p>\n<ul>\n<li>\n<p>检查是否正确安装</p>\n<p>打开cmd，输入<code>node -v</code>与<code>git --version</code>，如果能输出信息则表示成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/8c33331e2a1b3f986e7f193464bdf0be.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>手动配置环境变量</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/de178507ab6f40c453586f4c727b9eb2.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ec610253e0235a0e916d503a8d54e6be.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/02baf31d43c69871d1d5558373cc386b.png\" alt=\"\" /></p>\n<p>选择Path，然后点击编辑。然后将你的安装目录写在里边即可，如果两个都没有则需要写两个目录（git与node）直到可以使用git与node为止。</p>\n</li>\n</ul>\n<h2 id=\"安装hexo\"><a class=\"markdownIt-Anchor\" href=\"#安装hexo\"></a> 安装Hexo</h2>\n<blockquote>\n<p>这里首先说明下，npm的仓库在国外，这就意味着下载可能非常慢，或者不可以下载。因此我的解决方案是用淘宝的镜像源替代。<a href=\"https://developer.aliyun.com/mirror/NPM?from=tnpm\">更多</a></p>\n<p>替代方案很简单只需要在命令行输入<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>即可，然后每次需要使用<code>npm</code>命令时，将<code>npm</code>换成<code>cnpm</code>即可。</p>\n<p><em>我这里使用以上解决方案，因为实在是慢</em></p>\n</blockquote>\n<p>以上内容非必须，你完全可以不适用淘宝的镜像源，而使用官方的下载方式。即将本教程的<code>cnpm xxxx</code>命令换成<code>npm xxxx</code>即可。</p>\n<ol>\n<li>\n<p>安装Hexo</p>\n<p><code>cnpm install -g hexo-cli</code></p>\n<p>安装完成后依旧使用<code>hexo -v</code>查看以下版本号。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/fe18b109d0fb0ce72ce44118d02a2d6a.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>初始化一个Hexo博客</p>\n<p>在任意位置创建一个文件夹，你的博客将出现在这个文件夹。</p>\n<p>然后我们用命令行进入这个文件夹。<em>如果你是Windows用户，可以使用shift+鼠标右键，然后选择PowerShell。快速进入这个文件夹哦</em></p>\n<p>输入命令<code>hexo init .</code>，然后程序会自动克隆一个Hexo项目到你当前目录。克隆过程中可能速度稍慢，可需要耐心等一会儿。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/34c28c2b7272a2a295c31d6ac16cf8e1.png\" alt=\"\" /></p>\n<p>看到这样的结果，那就说明已经初始化完成了一个Hexo博客。</p>\n</li>\n<li>\n<p>查看Hexo博客</p>\n<p>Hexo博客是自带服务器的，所以我们可以通过<code>hexo s</code>命令查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/14cdb4c8ee2692f15621b79049791cc8.png\" alt=\"\" /></p>\n<p>看到图片上的提示那么此时打开浏览器输入http://127.0.0.1:4000即可查看到博客。</p>\n<img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/5abb7f605a6b89f4025a2b3ac4f57c4d.png\" style=\"zoom:25%;\" />\n</li>\n<li>\n<p>安装一个主题</p>\n<p>这里我是用sakura主题 <a href=\"https://github.com/honjun/hexo-theme-sakura\">github地址</a>，<a href=\"https://docs.hojun.cn/sakura/docs/#/home\">文档地址</a></p>\n<p>此主题较为特殊，此主题需要将GitHub下载的文件在Hexo根目录解压，如果出现重复覆盖即可。关于此主题的更多内容请参考官方文档。</p>\n<p><strong>如果你没有选择此主题，请注意你所选用的主题是否需要放在themes文件里</strong></p>\n<p>请选择完主题后按照主题官方文档进行配置。</p>\n</li>\n</ol>\n<h2 id=\"部署发布\"><a class=\"markdownIt-Anchor\" href=\"#部署发布\"></a> 部署发布</h2>\n<p>我们使用ssh免密部署。</p>\n<h3 id=\"创建密钥对\"><a class=\"markdownIt-Anchor\" href=\"#创建密钥对\"></a> 创建密钥对</h3>\n<p>为了方便运行GitHub Actions时登录GitHub账号，我们使用SSH方式登录。就是要把设备的私钥交给GitHub Actions，公钥交给GitHub，需要去Settings里去配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"Github 的邮箱地址\"</span>\n\n如 ssh-keygen -t rsa -C <span class=\"token string\">\"123123123@gmail.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>密钥对生成后默认的位置是用户文件。以windows为例：密钥对文件在<code>C:\\Users\\用户名</code>里，其中Users可能因为系统原因显示的是<code>用户</code>。这个文件夹里会有一个<code>.ssh</code>的目录，这个里面就是我们的密钥对。</p>\n<p>其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。</p>\n<ul>\n<li>\n<p>配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：github网站–&gt;Settings–&gt;SSH and GPG keys</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png\" alt=\"\" /><br />\n<img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png\" alt=\"\" /></p>\n<p>新增一个公钥，然后把<code>id_rsa.pub</code>这个文件用文本文档打开，将内容复制进去。</p>\n</li>\n<li>\n<p>Coding与GitHub类似</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/09/ce053efafc20ce9fd5694f309ef5dd9c.png\" alt=\"\" /></p>\n<p>在这里将你的公钥添加进去即可。</p>\n</li>\n</ul>\n<h3 id=\"配置部署信息\"><a class=\"markdownIt-Anchor\" href=\"#配置部署信息\"></a> 配置部署信息</h3>\n<p>登录GitHub或者是coding新建一个仓库，用于公开你的博客信息。</p>\n<p>GitHub请以<code>用户名.github.io</code>命名仓库名，例如我的<code>antmoe.github.io</code></p>\n<p>创建好仓库复制ssh连接。</p>\n<p>填到hexo博客根目录下的<code>_config.yml</code>文件中</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> 你的地址\n    <span class=\"token key atrule\">coding</span><span class=\"token punctuation\">:</span> 你的地址\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后输入命令<code>cnpm install hexo-deployer-git --save</code>，否则无法使用自动部署。</p>\n<p>然后输入命令<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>即可完成部署。</p>\n<p>更多关于hexo高级部署请参考<a href=\"https://www.antmoe.com/tags/Hexo/\">我的博客</a></p>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"优雅部署","path":"api/categories/优雅部署.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"配置环境","path":"api/tags/配置环境.json"}]}