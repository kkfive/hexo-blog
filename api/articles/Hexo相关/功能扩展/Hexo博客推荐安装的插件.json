{"title":"Hexo博客推荐安装的插件","slug":"Hexo相关/功能扩展/Hexo博客推荐安装的插件","date":"2020-02-01T10:57:07.000Z","updated":"2022-02-21T13:24:30.852Z","comments":true,"path":"api/articles/Hexo相关/功能扩展/Hexo博客推荐安装的插件.json","excerpt":null,"covers":["https://tva1.sinaimg.cn/large/832afe33ly1gbh4pvq700j211i0fgwfy.jpg","https://tva1.sinaimg.cn/large/832afe33ly1gbh4ulyhhmj20or0gst97.jpg"],"content":"<h2 id=\"seo相关\"><a class=\"markdownIt-Anchor\" href=\"#seo相关\"></a> SEO相关</h2>\n<h3 id=\"百度主动提交连接hexo-baidu-url-submit\"><a class=\"markdownIt-Anchor\" href=\"#百度主动提交连接hexo-baidu-url-submit\"></a> 百度主动提交连接（hexo-baidu-url-submit）</h3>\n<p>地址：<a href=\"https://github.com/huiwang/hexo-baidu-url-submit\">https://github.com/huiwang/hexo-baidu-url-submit</a></p>\n<p>首先，在Hexo根目录下，安装本插件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-baidu-url-submit --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，同样在根目录下，把以下内容配置到<code>_config.yml</code>文件中:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">baidu_url_submit:\n  count: <span class=\"token number\">1000</span> <span class=\"token comment\">## 提交最新的一个链接</span>\n  host: alili.tech <span class=\"token comment\">## 在百度站长平台中注册的域名</span>\n  token: xxxxx <span class=\"token comment\">## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span>\n  path: baidu_urls.txt <span class=\"token comment\">## 文本文档的地址， 新链接会保存在此文本文档里</span>\n  xz_appid: <span class=\"token string\">'xxxxxx'</span> <span class=\"token comment\">## 你的熊掌号 appid</span>\n  xz_token: <span class=\"token string\">'xxxxxx'</span> <span class=\"token comment\">## 你的熊掌号 token</span>\n  xz_count: <span class=\"token number\">10</span> <span class=\"token comment\">## 从所有的提交的数据当中选取最新的10条,该数量跟你的熊掌号而定</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其次，记得查看_config.ym文件中url的值， 必须包含是百度站长平台注册的域名（一般有www）， 比如:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># URL</span>\nurl: http://www.antmoe.com\nroot: /\npermalink: :year/:month/:day/:title/\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后加入新的deployer</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deploy:\n- type: baidu_url_submitter <span class=\"token comment\"># 百度</span>\n- type: baidu_xz_url_submitter <span class=\"token comment\"># 百度熊掌号</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>实现原理</p>\n<p>推送功能的实现，分为两部分：</p>\n<ul>\n<li>新链接的产生， <code>hexo generate</code> 会产生一个文本文件，里面包含最新的链接</li>\n<li>新链接的提交， <code>hexo deploy</code> 会从上述文件中读取链接，提交至百度搜索引擎</li>\n</ul>\n<h3 id=\"每天定时提交\"><a class=\"markdownIt-Anchor\" href=\"#每天定时提交\"></a> 每天定时提交</h3>\n<p>关于这部分，我在网上没有找到合适的插件，于是利用<code>Leancloud</code>开发了一款扩展工具。具体方法请参照<a href=\"https://www.antmoe.com/posts/2db95804/index.html\">这篇文章</a></p>\n<h3 id=\"文章永久地址\"><a class=\"markdownIt-Anchor\" href=\"#文章永久地址\"></a> 文章永久地址</h3>\n<p>地址:<a href=\"https://github.com/rozbo/hexo-abbrlink\">https://github.com/rozbo/hexo-abbrlink</a></p>\n<p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-abbrlink --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改根目录下的配置文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">permalink: posts/:abbrlink.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在根目录添加如下配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">abbrlink:\n  alg: crc32  <span class=\"token comment\">#算法 crc16(default) and crc32</span>\n  rep: hex    <span class=\"token comment\">#进制 dec(default) and hex 十进制和十六进制，默认为10进制。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>生成的链接示例</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">crc16 <span class=\"token operator\">&amp;</span> hex\nhttps://post.zz173.com/posts/66c8.html\n\ncrc16 <span class=\"token operator\">&amp;</span> dec\nhttps://post.zz173.com/posts/65535.html\ncrc32 <span class=\"token operator\">&amp;</span> hex\nhttps://post.zz173.com/posts/8ddf18fb.html\n\ncrc32 <span class=\"token operator\">&amp;</span> dec\nhttps://post.zz173.com/posts/1690090958.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"外链跳转插件\"><a class=\"markdownIt-Anchor\" href=\"#外链跳转插件\"></a> 外链跳转插件</h3>\n<p>地址：<a href=\"https://github.com/hvnobug/hexo-external-link\">https://github.com/hvnobug/hexo-external-link</a></p>\n<blockquote>\n<p><a href=\"https://yafine-blog.cn/go.html?url=aHR0cHM6Ly9ibG9nLmh2bm9idWcuY29tL2dvLmh0bWw/dXJsPWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwyaDJibTlpZFdjdmFHVjRieTFsZUhSbGNtNWhiQzFzYVc1cg==\">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置<code>target=’_blank’, rel=’external nofollow noopener noreferrer’</code> 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">## npm 安装 </span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-external-link --save \n<span class=\"token comment\">## yarn 安装 </span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-external-link<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后在站点根目录的设置中设置如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo_external_link: \n  enable: <span class=\"token boolean\">true</span> \n  enable_base64_encode: <span class=\"token boolean\">true</span> \n  url_param_name: <span class=\"token string\">'u'</span> \n  html_file_name: <span class=\"token string\">'go.html'</span> \n  target_blank: <span class=\"token boolean\">true</span> \n  link_rel: <span class=\"token string\">'external nofollow noopener noreferrer'</span> \n  domain: <span class=\"token string\">'https://www.antmoe.com/'</span> <span class=\"token comment\"># 如果开启了防盗链 </span>\n  safety_chain: <span class=\"token boolean\">true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>enable</strong> - 是否开启<code>hexo_external_link</code>插件 - 默认 false</li>\n<li><strong>enable_base64_encode</strong> - 是否对跳转<code>url</code>使用<code>base64编码</code> - 默认 fasle</li>\n<li><strong>url_param_name</strong> - url参数名,在跳转到外链传递给<code>html_file_name</code>的参数名 - 默认 ‘u’</li>\n<li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li>\n<li><strong>target_blank</strong> - 是否为外链的<code>a</code>标签添加<code>target='_blank'</code> - 默认 true</li>\n<li><strong>link_rel</strong> - 设置外链的<code>a</code>标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</li>\n<li><strong>domain</strong> - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li>\n<li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li>\n</ul>\n<h3 id=\"中文转拼音\"><a class=\"markdownIt-Anchor\" href=\"#中文转拼音\"></a> 中文转拼音</h3>\n<p>地址<a href=\"https://github.com/viko16/hexo-permalink-pinyin\">https://github.com/viko16/hexo-permalink-pinyin</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-permalink-pinyin --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后在站点根目录设置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">permalink_pinyin</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#是否开启</span>\n  <span class=\"token key atrule\">separator</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-'</span>   <span class=\"token comment\"># default: '-'链接符</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"加载优化\"><a class=\"markdownIt-Anchor\" href=\"#加载优化\"></a> 加载优化</h2>\n<h3 id=\"图片懒加载\"><a class=\"markdownIt-Anchor\" href=\"#图片懒加载\"></a> 图片懒加载</h3>\n<p>地址：<a href=\"https://github.com/Troy-Yang/hexo-lazyload-image\">https://github.com/Troy-Yang/hexo-lazyload-image</a></p>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-lazyload-image --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>之后在站点配置文件下添加下面的代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lazyload: \n\tenable: <span class=\"token boolean\">true</span> <span class=\"token comment\"># 是否开启图片懒加载 </span>\n\tonlypost: <span class=\"token boolean\">false</span> <span class=\"token comment\"># 是否只对文章的图片做懒加载 </span>\n\tloadingImg: /medias/loading.gif <span class=\"token comment\">#显示的图片</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果在markdown或html中指定img标记的属性，也可以禁用延迟进程</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">no-lazy</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里推荐给大家机长图片最为候选哦！。</p>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-lazyload-image --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>之后在站点配置文件下添加下面的代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lazyload: \n\tenable: <span class=\"token boolean\">true</span> <span class=\"token comment\"># 是否开启图片懒加载 </span>\n\tonlypost: <span class=\"token boolean\">false</span> <span class=\"token comment\"># 是否只对文章的图片做懒加载 </span>\n\tloadingImg: medias/loading.gif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果在markdown或html中指定img标记的属性，也可以禁用延迟进程</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">no-lazy</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a43va4g209g09gmy4.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a43va4g209g09gmy4.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a49p3xg20r00lc776.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a49p3xg20r00lc776.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44p6xg20b40b4weq.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44p6xg20b40b4weq.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a444wwg20ee0d4gmz.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a444wwg20ee0d4gmz.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44yb4g20m80godif.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44yb4g20m80godif.gif</a></p>\n<h3 id=\"代码压缩\"><a class=\"markdownIt-Anchor\" href=\"#代码压缩\"></a> 代码压缩</h3>\n<p>代码压缩 这里有两种方式第一种 通过gulp代码压缩方式</p>\n<ol>\n<li>\n<p>进入站点根目录下依次执行下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 全局安装gulp模块</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp -g\n<span class=\"token comment\"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save\n<span class=\"token comment\"># 额外的功能模块</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>在Hexo根目录新建文件 <code>gulp.js</code>，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> debug <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-debug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cleancss <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-clean-css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//css压缩组件</span>\n<span class=\"token keyword\">var</span> uglify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-uglify\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//js压缩组件</span>\n<span class=\"token keyword\">var</span> htmlmin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-htmlmin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//html压缩组件</span>\n<span class=\"token keyword\">var</span> htmlclean <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-htmlclean\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//html清理组件</span>\n<span class=\"token keyword\">var</span> imagemin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-imagemin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//图片压缩组件</span>\n<span class=\"token keyword\">var</span> changed <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-changed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//文件更改校验组件</span>\n<span class=\"token keyword\">var</span> gulpif <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-if\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//任务 帮助调用组件</span>\n<span class=\"token keyword\">var</span> plumber <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-plumber\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//容错组件（发生错误不跳出任务，并报出错误内容）</span>\n<span class=\"token keyword\">var</span> isScriptAll <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span>\n<span class=\"token keyword\">var</span> isDebug <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//是否调试显示 编译通过的文件</span>\n<span class=\"token keyword\">var</span> gulpBabel <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-babel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> es2015Preset <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"babel-preset-es2015\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> del <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"del\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Hexo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hexo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> hexo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hexo</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始化一个hexo对象</span>\n\n<span class=\"token comment\">// 清除public文件夹</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"public/**/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span>\n<span class=\"token comment\">// 创建静态页面 （等同 hexo generate）</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n                watch<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 启动Hexo服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> hexo\n        <span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 部署到服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n                watch<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的js文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/libs/**\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//排除的js</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress JS:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">gulpBabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>es2015Preset<span class=\"token punctuation\">]</span> <span class=\"token comment\">// es5检查机制</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">uglify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//调用压缩组件方法uglify(),对合并的文件进行压缩</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//输出到目标目录</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的css文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        rebase<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span>\n        compatibility<span class=\"token operator\">:</span> <span class=\"token string\">\"ie7\"</span> <span class=\"token comment\">//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式]</span>\n        <span class=\"token comment\">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span>\n        <span class=\"token comment\">//keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.css\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/**/*.min.css\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//排除的css</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress CSS:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleancss</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的html文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> cleanOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        protect<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\!--%fooTemplate\\b.*?%--></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//忽略处理</span>\n        unprotect<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;script [^>]*\\btype=\"text\\/x-handlebars-template\"[\\s\\S]+?&lt;\\/script></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span> <span class=\"token comment\">//特殊处理</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> minOption <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩HTML</span>\n        collapseBooleanAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//省略布尔属性的值 &lt;input checked=\"true\"/> ==> &lt;input /></span>\n        removeEmptyAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除所有空格作属性值 &lt;input id=\"\" /> ==> &lt;input /></span>\n        removeScriptTypeAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除&lt;script>的type=\"text/javascript\"</span>\n        removeStyleLinkTypeAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除&lt;style>和&lt;link>的type=\"text/css\"</span>\n        removeComments<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//清除HTML注释</span>\n        minifyJS<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩页面JS</span>\n        minifyCSS<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩页面CSS</span>\n        minifyURLs<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">//替换页面URL</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/**/*.html\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress HTML:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">htmlclean</span><span class=\"token punctuation\">(</span>cleanOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">htmlmin</span><span class=\"token punctuation\">(</span>minOption<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩 public/medias 目录内图片</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        optimizationLevel<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>\n        progressive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span>\n        interlaced<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>\n        multipass<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/medias/**/*.*\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/medias\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress Images:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">imagemin</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">,</span>\n        gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 默认任务</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>以后的执行方式有两种：</p>\n<ul>\n<li>直接在Hexo根目录执行 <code>gulp</code>或者 <code>gulp default</code> ，这个命令相当于 <code>hexo cl&amp;&amp;hexo g</code> 并且再把代码和图片压缩。</li>\n<li>在Hexo根目录执行 <code>gulp build</code> ，这个命令与第1种相比是：在最后又加了个 <code>hexo d</code> ，等于说生成、压缩文件后又帮你自动部署了。</li>\n</ul>\n<blockquote>\n<p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第154行的 <code>&quot;compressImage&quot;,</code> 和第165行的 <code>,&quot;compressImage&quot;</code> 去掉即可</p>\n</blockquote>\n</li>\n</ol>\n<p>第二种方法通过插件完成，也是我目前使用的方法</p>\n<p>地址：<a href=\"https://github.com/rozbo/hexo-neat\">https://github.com/rozbo/hexo-neat</a></p>\n<p>但是这个插件是有Bug的：</p>\n<ul>\n<li>压缩 md 文件会使 markdown 语法的代码块消失</li>\n<li>会删除全角空格</li>\n</ul>\n<p>Hexo根目录执行安装代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-neat --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在Hexo配置文件<code>_config.yml</code> 末尾加入以下配置(此配置仅针对Matery主题)：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）</span>\nneat_enable: <span class=\"token boolean\">true</span>\nneat_html:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\n    - <span class=\"token string\">'**/*.md'</span>\nneat_css:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\n    - <span class=\"token string\">'**/*.min.css'</span>\nneat_js:\n  enable: <span class=\"token boolean\">true</span>\n  mangle: <span class=\"token boolean\">true</span>\n  output:\n  compress:\n  exclude:\n    - <span class=\"token string\">'**/*.min.js'</span>\n    - <span class=\"token string\">'**/**/instantpage.js'</span>\n    - <span class=\"token string\">'**/matery.js'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当然了 ，如果你是其他主题可以使用网上的通用配置，但我没有尝试过</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">neat_enable: <span class=\"token boolean\">true</span>\nneat_html:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\nneat_css:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\n    - <span class=\"token string\">'*.min.css'</span>\nneat_js:\n  enable: <span class=\"token boolean\">true</span>\n  mangle: <span class=\"token boolean\">true</span>\n  output:\n  compress:\n  exclude:\n    - <span class=\"token string\">'*.min.js'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"扩展优化\"><a class=\"markdownIt-Anchor\" href=\"#扩展优化\"></a> 扩展优化</h2>\n<h3 id=\"邮件通知\"><a class=\"markdownIt-Anchor\" href=\"#邮件通知\"></a> 邮件通知</h3>\n<p>地址：<a href=\"https://github.com/zhaojun1998/Valine-Admin\">https://github.com/zhaojun1998/Valine-Admin</a></p>\n<p>作者博客：<a href=\"http://www.zhaojun.im/hexo-valine-admin/\">http://www.zhaojun.im/hexo-valine-admin/</a></p>\n<p>相关配置操作请查看作者博客。这里只说说自定义环境变量及使用阿里云邮件推送</p>\n<ul>\n<li>\n<p><code>SITE_NAME</code> : 网站名称。</p>\n</li>\n<li>\n<p><code>SITE_URL</code> : 网站地址, <strong>最后不要加 <code>/</code> 。</strong></p>\n</li>\n<li>\n<p><code>SMTP_USER</code> : SMTP 服务用户名，一般为邮箱地址。</p>\n</li>\n<li>\n<p><code>SMTP_PASS</code> : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</p>\n</li>\n<li>\n<p><code>SMTP_SERVICE</code> : 邮件服务提供商，支持 <code>QQ</code>、<code>163</code>、<code>126</code>、<code>Gmail</code>、<code>&quot;Yahoo&quot;</code>、<code>......</code> ，全部支持请参考 : Nodemailer Supported services。</p>\n<p>如 <code>SMTP_SERVICE</code> 中没有你使用的邮件服务提供商, 也可以进行自定义。</p>\n<p>参数配置如下:</p>\n<ul>\n<li><code>SMTP_HOST</code> : 邮件服务提供商 SMTP 地址，如 qq : <code>smtp.qq.com</code>，<em>此项需要自行查询或询问其服务商</em>。</li>\n<li><code>SMTP_PORT</code> : 邮件服务提供商 SMTP 端口, <em>此项需要自行查询或询问其服务商</em>。</li>\n<li><code>SMTP_SECURE</code> : 是否启用加密, 默认为 <code>true</code>，一般不需要设置，如有特殊请自行配置。 <em>此项需要自行查询或询问其服务商</em>。</li>\n</ul>\n</li>\n<li>\n<p><code>SENDER_NAME</code> : 寄件人名称。</p>\n</li>\n<li>\n<p><code>TEMPLATE_NAME</code>：邮件模板，目前内置了两款主题，分别为 <code>default</code> 与 <code>rainbow</code></p>\n</li>\n</ul>\n<blockquote>\n<p>注: 配置自定义邮件服务器的话，请不要同时配置 SMTP_SERVICE。当 SMTP_SERVICE 未配置时才会启用自定义邮件服务</p>\n</blockquote>\n<h4 id=\"如何使用阿里云邮件推送\"><a class=\"markdownIt-Anchor\" href=\"#如何使用阿里云邮件推送\"></a> 如何使用阿里云邮件推送</h4>\n<p>首先在<a href=\"https://www.aliyun.com/product/directmail?spm=5176.10695662.1kquk9v2l.1.36a015a5m8fp4Z&amp;aly_as=laPawx1G\">阿里云</a>创建好发信地址 类型选择：<strong>触发邮件</strong></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/832afe33ly1gbh4pvq700j211i0fgwfy.jpg\" alt=\"1.png\" /></p>\n<p>发信地址随便写，然后设置好SMTP密码。</p>\n<p>来到我们的Leancloud</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/832afe33ly1gbh4ulyhhmj20or0gst97.jpg\" alt=\"\" /></p>\n<p>按照框框圈的设置好自己的配置即可</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">SMTP_USER:刚刚创建的发信地址\nSMTP_PASS：刚刚设置的STMP密码\nSMTP_HOST：使用阿里云提供的即可 smtpdm.aliyun.com\nSMTP_PORT：我使用的https协议端口465，可以自行选择\nSMTP_SECURE：如果没有使用https可以改为false <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"seo相关\"><a class=\"markdownIt-Anchor\" href=\"#seo相关\"></a> SEO相关</h2>\n<h3 id=\"百度主动提交连接hexo-baidu-url-submit\"><a class=\"markdownIt-Anchor\" href=\"#百度主动提交连接hexo-baidu-url-submit\"></a> 百度主动提交连接（hexo-baidu-url-submit）</h3>\n<p>地址：<a href=\"https://github.com/huiwang/hexo-baidu-url-submit\">https://github.com/huiwang/hexo-baidu-url-submit</a></p>\n<p>首先，在Hexo根目录下，安装本插件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-baidu-url-submit --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，同样在根目录下，把以下内容配置到<code>_config.yml</code>文件中:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">baidu_url_submit:\n  count: <span class=\"token number\">1000</span> <span class=\"token comment\">## 提交最新的一个链接</span>\n  host: alili.tech <span class=\"token comment\">## 在百度站长平台中注册的域名</span>\n  token: xxxxx <span class=\"token comment\">## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span>\n  path: baidu_urls.txt <span class=\"token comment\">## 文本文档的地址， 新链接会保存在此文本文档里</span>\n  xz_appid: <span class=\"token string\">'xxxxxx'</span> <span class=\"token comment\">## 你的熊掌号 appid</span>\n  xz_token: <span class=\"token string\">'xxxxxx'</span> <span class=\"token comment\">## 你的熊掌号 token</span>\n  xz_count: <span class=\"token number\">10</span> <span class=\"token comment\">## 从所有的提交的数据当中选取最新的10条,该数量跟你的熊掌号而定</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其次，记得查看_config.ym文件中url的值， 必须包含是百度站长平台注册的域名（一般有www）， 比如:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># URL</span>\nurl: http://www.antmoe.com\nroot: /\npermalink: :year/:month/:day/:title/\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后加入新的deployer</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deploy:\n- type: baidu_url_submitter <span class=\"token comment\"># 百度</span>\n- type: baidu_xz_url_submitter <span class=\"token comment\"># 百度熊掌号</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>实现原理</p>\n<p>推送功能的实现，分为两部分：</p>\n<ul>\n<li>新链接的产生， <code>hexo generate</code> 会产生一个文本文件，里面包含最新的链接</li>\n<li>新链接的提交， <code>hexo deploy</code> 会从上述文件中读取链接，提交至百度搜索引擎</li>\n</ul>\n<h3 id=\"每天定时提交\"><a class=\"markdownIt-Anchor\" href=\"#每天定时提交\"></a> 每天定时提交</h3>\n<p>关于这部分，我在网上没有找到合适的插件，于是利用<code>Leancloud</code>开发了一款扩展工具。具体方法请参照<a href=\"https://www.antmoe.com/posts/2db95804/index.html\">这篇文章</a></p>\n<h3 id=\"文章永久地址\"><a class=\"markdownIt-Anchor\" href=\"#文章永久地址\"></a> 文章永久地址</h3>\n<p>地址:<a href=\"https://github.com/rozbo/hexo-abbrlink\">https://github.com/rozbo/hexo-abbrlink</a></p>\n<p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-abbrlink --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改根目录下的配置文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">permalink: posts/:abbrlink.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在根目录添加如下配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">abbrlink:\n  alg: crc32  <span class=\"token comment\">#算法 crc16(default) and crc32</span>\n  rep: hex    <span class=\"token comment\">#进制 dec(default) and hex 十进制和十六进制，默认为10进制。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>生成的链接示例</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">crc16 <span class=\"token operator\">&amp;</span> hex\nhttps://post.zz173.com/posts/66c8.html\n\ncrc16 <span class=\"token operator\">&amp;</span> dec\nhttps://post.zz173.com/posts/65535.html\ncrc32 <span class=\"token operator\">&amp;</span> hex\nhttps://post.zz173.com/posts/8ddf18fb.html\n\ncrc32 <span class=\"token operator\">&amp;</span> dec\nhttps://post.zz173.com/posts/1690090958.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"外链跳转插件\"><a class=\"markdownIt-Anchor\" href=\"#外链跳转插件\"></a> 外链跳转插件</h3>\n<p>地址：<a href=\"https://github.com/hvnobug/hexo-external-link\">https://github.com/hvnobug/hexo-external-link</a></p>\n<blockquote>\n<p><a href=\"https://yafine-blog.cn/go.html?url=aHR0cHM6Ly9ibG9nLmh2bm9idWcuY29tL2dvLmh0bWw/dXJsPWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwyaDJibTlpZFdjdmFHVjRieTFsZUhSbGNtNWhiQzFzYVc1cg==\">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置<code>target=’_blank’, rel=’external nofollow noopener noreferrer’</code> 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">## npm 安装 </span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-external-link --save \n<span class=\"token comment\">## yarn 安装 </span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-external-link<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后在站点根目录的设置中设置如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo_external_link: \n  enable: <span class=\"token boolean\">true</span> \n  enable_base64_encode: <span class=\"token boolean\">true</span> \n  url_param_name: <span class=\"token string\">'u'</span> \n  html_file_name: <span class=\"token string\">'go.html'</span> \n  target_blank: <span class=\"token boolean\">true</span> \n  link_rel: <span class=\"token string\">'external nofollow noopener noreferrer'</span> \n  domain: <span class=\"token string\">'https://www.antmoe.com/'</span> <span class=\"token comment\"># 如果开启了防盗链 </span>\n  safety_chain: <span class=\"token boolean\">true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>enable</strong> - 是否开启<code>hexo_external_link</code>插件 - 默认 false</li>\n<li><strong>enable_base64_encode</strong> - 是否对跳转<code>url</code>使用<code>base64编码</code> - 默认 fasle</li>\n<li><strong>url_param_name</strong> - url参数名,在跳转到外链传递给<code>html_file_name</code>的参数名 - 默认 ‘u’</li>\n<li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li>\n<li><strong>target_blank</strong> - 是否为外链的<code>a</code>标签添加<code>target='_blank'</code> - 默认 true</li>\n<li><strong>link_rel</strong> - 设置外链的<code>a</code>标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</li>\n<li><strong>domain</strong> - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li>\n<li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li>\n</ul>\n<h3 id=\"中文转拼音\"><a class=\"markdownIt-Anchor\" href=\"#中文转拼音\"></a> 中文转拼音</h3>\n<p>地址<a href=\"https://github.com/viko16/hexo-permalink-pinyin\">https://github.com/viko16/hexo-permalink-pinyin</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-permalink-pinyin --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后在站点根目录设置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">permalink_pinyin</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#是否开启</span>\n  <span class=\"token key atrule\">separator</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-'</span>   <span class=\"token comment\"># default: '-'链接符</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"加载优化\"><a class=\"markdownIt-Anchor\" href=\"#加载优化\"></a> 加载优化</h2>\n<h3 id=\"图片懒加载\"><a class=\"markdownIt-Anchor\" href=\"#图片懒加载\"></a> 图片懒加载</h3>\n<p>地址：<a href=\"https://github.com/Troy-Yang/hexo-lazyload-image\">https://github.com/Troy-Yang/hexo-lazyload-image</a></p>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-lazyload-image --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>之后在站点配置文件下添加下面的代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lazyload: \n\tenable: <span class=\"token boolean\">true</span> <span class=\"token comment\"># 是否开启图片懒加载 </span>\n\tonlypost: <span class=\"token boolean\">false</span> <span class=\"token comment\"># 是否只对文章的图片做懒加载 </span>\n\tloadingImg: /medias/loading.gif <span class=\"token comment\">#显示的图片</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果在markdown或html中指定img标记的属性，也可以禁用延迟进程</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">no-lazy</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里推荐给大家机长图片最为候选哦！。</p>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-lazyload-image --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>之后在站点配置文件下添加下面的代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lazyload: \n\tenable: <span class=\"token boolean\">true</span> <span class=\"token comment\"># 是否开启图片懒加载 </span>\n\tonlypost: <span class=\"token boolean\">false</span> <span class=\"token comment\"># 是否只对文章的图片做懒加载 </span>\n\tloadingImg: medias/loading.gif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果在markdown或html中指定img标记的属性，也可以禁用延迟进程</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">no-lazy</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a43va4g209g09gmy4.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a43va4g209g09gmy4.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a49p3xg20r00lc776.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a49p3xg20r00lc776.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44p6xg20b40b4weq.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44p6xg20b40b4weq.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a444wwg20ee0d4gmz.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a444wwg20ee0d4gmz.gif</a><br />\n<a href=\"https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44yb4g20m80godif.gif\">https://ws1.sinaimg.cn/large/832afe33ly1gbh4a44yb4g20m80godif.gif</a></p>\n<h3 id=\"代码压缩\"><a class=\"markdownIt-Anchor\" href=\"#代码压缩\"></a> 代码压缩</h3>\n<p>代码压缩 这里有两种方式第一种 通过gulp代码压缩方式</p>\n<ol>\n<li>\n<p>进入站点根目录下依次执行下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 全局安装gulp模块</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp -g\n<span class=\"token comment\"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save\n<span class=\"token comment\"># 额外的功能模块</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>在Hexo根目录新建文件 <code>gulp.js</code>，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> debug <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-debug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cleancss <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-clean-css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//css压缩组件</span>\n<span class=\"token keyword\">var</span> uglify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-uglify\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//js压缩组件</span>\n<span class=\"token keyword\">var</span> htmlmin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-htmlmin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//html压缩组件</span>\n<span class=\"token keyword\">var</span> htmlclean <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-htmlclean\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//html清理组件</span>\n<span class=\"token keyword\">var</span> imagemin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-imagemin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//图片压缩组件</span>\n<span class=\"token keyword\">var</span> changed <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-changed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//文件更改校验组件</span>\n<span class=\"token keyword\">var</span> gulpif <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-if\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//任务 帮助调用组件</span>\n<span class=\"token keyword\">var</span> plumber <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-plumber\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//容错组件（发生错误不跳出任务，并报出错误内容）</span>\n<span class=\"token keyword\">var</span> isScriptAll <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span>\n<span class=\"token keyword\">var</span> isDebug <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//是否调试显示 编译通过的文件</span>\n<span class=\"token keyword\">var</span> gulpBabel <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-babel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> es2015Preset <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"babel-preset-es2015\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> del <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"del\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Hexo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hexo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> hexo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hexo</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始化一个hexo对象</span>\n\n<span class=\"token comment\">// 清除public文件夹</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"public/**/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span>\n<span class=\"token comment\">// 创建静态页面 （等同 hexo generate）</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n                watch<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 启动Hexo服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> hexo\n        <span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 部署到服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n                watch<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的js文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/libs/**\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//排除的js</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress JS:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">gulpBabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>es2015Preset<span class=\"token punctuation\">]</span> <span class=\"token comment\">// es5检查机制</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">uglify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//调用压缩组件方法uglify(),对合并的文件进行压缩</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//输出到目标目录</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的css文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        rebase<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span>\n        compatibility<span class=\"token operator\">:</span> <span class=\"token string\">\"ie7\"</span> <span class=\"token comment\">//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式]</span>\n        <span class=\"token comment\">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span>\n        <span class=\"token comment\">//keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.css\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/**/*.min.css\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//排除的css</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress CSS:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleancss</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的html文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> cleanOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        protect<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\!--%fooTemplate\\b.*?%--></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//忽略处理</span>\n        unprotect<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;script [^>]*\\btype=\"text\\/x-handlebars-template\"[\\s\\S]+?&lt;\\/script></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span> <span class=\"token comment\">//特殊处理</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> minOption <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩HTML</span>\n        collapseBooleanAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//省略布尔属性的值 &lt;input checked=\"true\"/> ==> &lt;input /></span>\n        removeEmptyAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除所有空格作属性值 &lt;input id=\"\" /> ==> &lt;input /></span>\n        removeScriptTypeAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除&lt;script>的type=\"text/javascript\"</span>\n        removeStyleLinkTypeAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除&lt;style>和&lt;link>的type=\"text/css\"</span>\n        removeComments<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//清除HTML注释</span>\n        minifyJS<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩页面JS</span>\n        minifyCSS<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩页面CSS</span>\n        minifyURLs<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">//替换页面URL</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/**/*.html\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress HTML:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">htmlclean</span><span class=\"token punctuation\">(</span>cleanOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">htmlmin</span><span class=\"token punctuation\">(</span>minOption<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩 public/medias 目录内图片</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        optimizationLevel<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>\n        progressive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span>\n        interlaced<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>\n        multipass<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/medias/**/*.*\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/medias\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Compress Images:\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">imagemin</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">,</span>\n        gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 默认任务</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>以后的执行方式有两种：</p>\n<ul>\n<li>直接在Hexo根目录执行 <code>gulp</code>或者 <code>gulp default</code> ，这个命令相当于 <code>hexo cl&amp;&amp;hexo g</code> 并且再把代码和图片压缩。</li>\n<li>在Hexo根目录执行 <code>gulp build</code> ，这个命令与第1种相比是：在最后又加了个 <code>hexo d</code> ，等于说生成、压缩文件后又帮你自动部署了。</li>\n</ul>\n<blockquote>\n<p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第154行的 <code>&quot;compressImage&quot;,</code> 和第165行的 <code>,&quot;compressImage&quot;</code> 去掉即可</p>\n</blockquote>\n</li>\n</ol>\n<p>第二种方法通过插件完成，也是我目前使用的方法</p>\n<p>地址：<a href=\"https://github.com/rozbo/hexo-neat\">https://github.com/rozbo/hexo-neat</a></p>\n<p>但是这个插件是有Bug的：</p>\n<ul>\n<li>压缩 md 文件会使 markdown 语法的代码块消失</li>\n<li>会删除全角空格</li>\n</ul>\n<p>Hexo根目录执行安装代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-neat --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在Hexo配置文件<code>_config.yml</code> 末尾加入以下配置(此配置仅针对Matery主题)：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）</span>\nneat_enable: <span class=\"token boolean\">true</span>\nneat_html:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\n    - <span class=\"token string\">'**/*.md'</span>\nneat_css:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\n    - <span class=\"token string\">'**/*.min.css'</span>\nneat_js:\n  enable: <span class=\"token boolean\">true</span>\n  mangle: <span class=\"token boolean\">true</span>\n  output:\n  compress:\n  exclude:\n    - <span class=\"token string\">'**/*.min.js'</span>\n    - <span class=\"token string\">'**/**/instantpage.js'</span>\n    - <span class=\"token string\">'**/matery.js'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当然了 ，如果你是其他主题可以使用网上的通用配置，但我没有尝试过</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">neat_enable: <span class=\"token boolean\">true</span>\nneat_html:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\nneat_css:\n  enable: <span class=\"token boolean\">true</span>\n  exclude:\n    - <span class=\"token string\">'*.min.css'</span>\nneat_js:\n  enable: <span class=\"token boolean\">true</span>\n  mangle: <span class=\"token boolean\">true</span>\n  output:\n  compress:\n  exclude:\n    - <span class=\"token string\">'*.min.js'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"扩展优化\"><a class=\"markdownIt-Anchor\" href=\"#扩展优化\"></a> 扩展优化</h2>\n<h3 id=\"邮件通知\"><a class=\"markdownIt-Anchor\" href=\"#邮件通知\"></a> 邮件通知</h3>\n<p>地址：<a href=\"https://github.com/zhaojun1998/Valine-Admin\">https://github.com/zhaojun1998/Valine-Admin</a></p>\n<p>作者博客：<a href=\"http://www.zhaojun.im/hexo-valine-admin/\">http://www.zhaojun.im/hexo-valine-admin/</a></p>\n<p>相关配置操作请查看作者博客。这里只说说自定义环境变量及使用阿里云邮件推送</p>\n<ul>\n<li>\n<p><code>SITE_NAME</code> : 网站名称。</p>\n</li>\n<li>\n<p><code>SITE_URL</code> : 网站地址, <strong>最后不要加 <code>/</code> 。</strong></p>\n</li>\n<li>\n<p><code>SMTP_USER</code> : SMTP 服务用户名，一般为邮箱地址。</p>\n</li>\n<li>\n<p><code>SMTP_PASS</code> : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</p>\n</li>\n<li>\n<p><code>SMTP_SERVICE</code> : 邮件服务提供商，支持 <code>QQ</code>、<code>163</code>、<code>126</code>、<code>Gmail</code>、<code>&quot;Yahoo&quot;</code>、<code>......</code> ，全部支持请参考 : Nodemailer Supported services。</p>\n<p>如 <code>SMTP_SERVICE</code> 中没有你使用的邮件服务提供商, 也可以进行自定义。</p>\n<p>参数配置如下:</p>\n<ul>\n<li><code>SMTP_HOST</code> : 邮件服务提供商 SMTP 地址，如 qq : <code>smtp.qq.com</code>，<em>此项需要自行查询或询问其服务商</em>。</li>\n<li><code>SMTP_PORT</code> : 邮件服务提供商 SMTP 端口, <em>此项需要自行查询或询问其服务商</em>。</li>\n<li><code>SMTP_SECURE</code> : 是否启用加密, 默认为 <code>true</code>，一般不需要设置，如有特殊请自行配置。 <em>此项需要自行查询或询问其服务商</em>。</li>\n</ul>\n</li>\n<li>\n<p><code>SENDER_NAME</code> : 寄件人名称。</p>\n</li>\n<li>\n<p><code>TEMPLATE_NAME</code>：邮件模板，目前内置了两款主题，分别为 <code>default</code> 与 <code>rainbow</code></p>\n</li>\n</ul>\n<blockquote>\n<p>注: 配置自定义邮件服务器的话，请不要同时配置 SMTP_SERVICE。当 SMTP_SERVICE 未配置时才会启用自定义邮件服务</p>\n</blockquote>\n<h4 id=\"如何使用阿里云邮件推送\"><a class=\"markdownIt-Anchor\" href=\"#如何使用阿里云邮件推送\"></a> 如何使用阿里云邮件推送</h4>\n<p>首先在<a href=\"https://www.aliyun.com/product/directmail?spm=5176.10695662.1kquk9v2l.1.36a015a5m8fp4Z&amp;aly_as=laPawx1G\">阿里云</a>创建好发信地址 类型选择：<strong>触发邮件</strong></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/832afe33ly1gbh4pvq700j211i0fgwfy.jpg\" alt=\"1.png\" /></p>\n<p>发信地址随便写，然后设置好SMTP密码。</p>\n<p>来到我们的Leancloud</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/832afe33ly1gbh4ulyhhmj20or0gst97.jpg\" alt=\"\" /></p>\n<p>按照框框圈的设置好自己的配置即可</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">SMTP_USER:刚刚创建的发信地址\nSMTP_PASS：刚刚设置的STMP密码\nSMTP_HOST：使用阿里云提供的即可 smtpdm.aliyun.com\nSMTP_PORT：我使用的https协议端口465，可以自行选择\nSMTP_SECURE：如果没有使用https可以改为false <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"功能增强","path":"api/categories/功能增强.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"}]}