{"title":"记录一次Hexo持续集成部署尝试","slug":"Hexo相关/优雅部署/记录一次Hexo持续集成部署尝试","date":"2020-06-26T07:58:00.000Z","updated":"2022-02-21T13:24:30.852Z","comments":true,"path":"api/articles/Hexo相关/优雅部署/记录一次Hexo持续集成部署尝试.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png"],"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>鉴于已经实现了Coding与Github的双部署，而目前使用了GitHub的actions作为主要的生成Hexo页面的环境，但是由于私有仓库使用时间收到了限制。因此考虑将token方式转换为ssh方式。</p>\n<ol>\n<li>\n<p>GitHub可以通过自己的私钥通过ssh地址部署，但Coding不可以</p>\n<blockquote>\n<p>发现用户级别公钥可以实现本地的部署, 但是无法实现 repo 之间的部署, 一直出现<code>Permission denied (publickey)</code></p>\n<p>因此只能使用token</p>\n</blockquote>\n</li>\n<li>\n<p>通过Coding的token尝试，发现了也可以在GitHub使用token，并且比较方便。</p>\n</li>\n</ol>\n<h2 id=\"coding配置文件\"><a class=\"markdownIt-Anchor\" href=\"#coding配置文件\"></a> Coding配置文件</h2>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">pipeline <span class=\"token punctuation\">&#123;</span>\n  agent any\n  stages <span class=\"token punctuation\">&#123;</span>\n    stage('获取最新git提交') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        checkout(<span class=\"token punctuation\">[</span><span class=\"token key atrule\">$class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GitSCM'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> env.GIT_BUILD_REF<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token key atrule\">userRemoteConfigs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> env.GIT_REPO_URL<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">credentialsId</span><span class=\"token punctuation\">:</span> env.CREDENTIALS_ID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>)\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    stage('安装依赖') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        sh 'npm install hexo<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g'\n        sh 'npm install gulp <span class=\"token punctuation\">-</span>g'\n        sh 'npm install'\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    stage('生成页面并压缩') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        sh 'hexo cl <span class=\"token important\">&amp;&amp;</span> hexo g <span class=\"token important\">&amp;&amp;</span> gulp'\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    stage('发布网页') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        sh '''\n          pwd\n          cd ./public\n          pwd\n          git init\n          git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name \\'$<span class=\"token punctuation\">&#123;</span>GIT_USER<span class=\"token punctuation\">&#125;</span>\\'\n          git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email \\'$<span class=\"token punctuation\">&#123;</span>GIT_MAIL<span class=\"token punctuation\">&#125;</span>\\'\n          git add .\n          git commit <span class=\"token punctuation\">-</span>m \"Update\"\n          git push <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>force <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>all https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">&#123;</span>CODING_TOKEN<span class=\"token punctuation\">&#125;</span>@$<span class=\"token punctuation\">&#123;</span>CODING_REPO<span class=\"token punctuation\">&#125;</span>\n          git push <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>force <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>all https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">&#123;</span>GH_TOKEN<span class=\"token punctuation\">&#125;</span>@$<span class=\"token punctuation\">&#123;</span>GH_REPO<span class=\"token punctuation\">&#125;</span>\n        '''\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中需要配置的环境变量：</p>\n<ul>\n<li>\n<p><code>GH_TOKEN</code></p>\n<p>GitHub的token。获取方式：<a href=\"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">Creating a personal access token</a></p>\n</li>\n<li>\n<p><code>CODING_TOKEN</code></p>\n<p>Coding的token。coding的token比较特殊，包含用户和密码。因此获取后将此字段填入的为<code>账户:密码</code>。例如：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png\" alt=\"image-20200626161411316\" /></p>\n<p>以上图为例的账户和密码，则此字段完整填入的为<code>abc:aabbcc</code></p>\n<p>令牌获取方式参照：<a href=\"https://www.antmoe.com/posts/51b0fa77/index.html\">Hexo 利用 coding 自动部署</a></p>\n</li>\n<li>\n<p><code>GIT_USER</code></p>\n<p>git的name。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GIT_MAIL</code></p>\n<p>git的email。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GH_REPO</code></p>\n<p>GitHub仓库地址。格式为HTTPS后边的地址。例如<code>github.com/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n<li>\n<p><code>CODING_REPO</code></p>\n<p>Coding的仓库地址。格式为HTTPS后边的地址。例如<code>e.coding.net/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n</ul>\n<h2 id=\"github-actions配置文件\"><a class=\"markdownIt-Anchor\" href=\"#github-actions配置文件\"></a> Github Actions配置文件</h2>\n<div class=\"note info icon\"><p>1. 密钥方式</p></div>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># workflow name</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Blog CI\n\n<span class=\"token comment\"># master branch on push, auto run</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">strategy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matrix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>10.x<span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># check it to your workflow can access it</span>\n      <span class=\"token comment\"># from: https://github.com/actions/checkout</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 1. 检查master分支\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@master\n\n      <span class=\"token comment\"># from: https://github.com/actions/setup-node</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 2. 设置Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@master\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> matrix.node<span class=\"token punctuation\">-</span>version <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 3. 安装 Hexo CI\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          export TZ='Asia/Shanghai'\n          npm install hexo-cli -g\n          npm install gulp -g</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 4. 缓存\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v1\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> cache<span class=\"token punctuation\">-</span>dependencies\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>runner.OS<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hashFiles('<span class=\"token important\">**/package-lock.json')</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 5. 安装插件\n        <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> steps.cache<span class=\"token punctuation\">-</span>dependencies.outputs.cache<span class=\"token punctuation\">-</span>hit <span class=\"token tag\">!=</span> 'true'\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm install</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 6. 设置私钥信息\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token comment\"># HEXO_DEPLOY_PRIVATE_KEY: $&#123;&#123; secrets.HEXO_DEPLOY_PRIVATE_KEY &#125;&#125;</span>\n          <span class=\"token key atrule\">CODEING_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.CODEING_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n          <span class=\"token key atrule\">GH_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.GH_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          mkdir -p ~/.ssh/\n          echo \"$GH_KEY\" > ~/.ssh/id_rsa\n          echo \"$CODEING_KEY\" > ~/.ssh/coding_rsa\n          chmod 600 ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/coding_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          ssh-keyscan e.coding.net >> ~/.ssh/known_hosts  # 注意，Coding的地址已经改成e.coding.net，很多教程中使用的地址都是旧的，导致无法完成部署</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 7. 设置git信息\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          git config --global user.name '$&#123;&#123; secrets.GIT_USER &#125;&#125;' \n          git config --global user.email '$&#123;&#123; secrets.GIT_MAIL &#125;&#125;'</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 8. hexo命令三连\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          hexo clean\n          hexo generate \n          gulp\n          hexo deploy</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>\n<p><code>GIT_USER</code></p>\n<p>git的name。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GIT_MAIL</code></p>\n<p>git的email。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>CODEING_KEY</code></p>\n<p>向coding仓库推送的<strong>私钥</strong></p>\n</li>\n<li>\n<p><code>GH_KEY</code></p>\n<p>向github仓库推送的<strong>私钥</strong></p>\n</li>\n</ul>\n<div class=\"note info icon\"><p>2. Token方式</p></div>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># workflow name</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Blog CI\n\n<span class=\"token comment\"># master branch on push, auto run</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">strategy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matrix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>10.x<span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># check it to your workflow can access it</span>\n      <span class=\"token comment\"># from: https://github.com/actions/checkout</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 1. 检查master分支\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@master\n\n      <span class=\"token comment\"># from: https://github.com/actions/setup-node</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 2. 设置Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@master\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> matrix.node<span class=\"token punctuation\">-</span>version <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 3. 安装 Hexo CI\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          export TZ='Asia/Shanghai'\n          npm install hexo-cli -g\n          npm install gulp -g</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 4. 缓存\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v1\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> cache<span class=\"token punctuation\">-</span>dependencies\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>runner.OS<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hashFiles('<span class=\"token important\">**/package-lock.json')</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 5. 安装插件\n        <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> steps.cache<span class=\"token punctuation\">-</span>dependencies.outputs.cache<span class=\"token punctuation\">-</span>hit <span class=\"token tag\">!=</span> 'true'\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm install</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 6. 生成页面并压缩\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          hexo cl &amp;&amp; hexo g &amp;&amp; gulp</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 7. 部署页面\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          cd ./public\n          ls\n          git init\n          git config --global user.name '$&#123;&#123; secrets.GIT_USER &#125;&#125;' \n          git config --global user.email '$&#123;&#123; secrets.GIT_MAIL &#125;&#125;'\n          git add .\n          git commit -m \"Update\"\n          git push --force --all https://$&#123;&#123; secrets.GH_TOKEN &#125;&#125;@$&#123;&#123; secrets.GH_REPO &#125;&#125;\n          git push --force --all https://$&#123;&#123; secrets.CODING_TOKEN &#125;&#125;@$&#123;&#123; secrets.CODING_REPO &#125;&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中需要配置的环境变量：</p>\n<ul>\n<li>\n<p><code>GH_TOKEN</code></p>\n<p>GitHub的token。获取方式：<a href=\"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">Creating a personal access token</a></p>\n</li>\n<li>\n<p><code>CODING_TOKEN</code></p>\n<p>Coding的token。coding的token比较特殊，包含用户和密码。因此获取后将此字段填入的为<code>账户:密码</code>。例如：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png\" alt=\"image-20200626161411316\" /></p>\n<p>以上图为例的账户和密码，则此字段完整填入的为<code>abc:aabbcc</code></p>\n<p>令牌获取方式参照：<a href=\"https://www.antmoe.com/posts/51b0fa77/index.html\">Hexo 利用 coding 自动部署</a></p>\n</li>\n<li>\n<p><code>GIT_USER</code></p>\n<p>git的name。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GIT_MAIL</code></p>\n<p>git的email。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GH_REPO</code></p>\n<p>GitHub仓库地址。格式为HTTPS后边的地址。例如<code>github.com/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n<li>\n<p><code>CODING_REPO</code></p>\n<p>Coding的仓库地址。格式为HTTPS后边的地址。例如<code>e.coding.net/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n</ul>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>鉴于已经实现了Coding与Github的双部署，而目前使用了GitHub的actions作为主要的生成Hexo页面的环境，但是由于私有仓库使用时间收到了限制。因此考虑将token方式转换为ssh方式。</p>\n<ol>\n<li>\n<p>GitHub可以通过自己的私钥通过ssh地址部署，但Coding不可以</p>\n<blockquote>\n<p>发现用户级别公钥可以实现本地的部署, 但是无法实现 repo 之间的部署, 一直出现<code>Permission denied (publickey)</code></p>\n<p>因此只能使用token</p>\n</blockquote>\n</li>\n<li>\n<p>通过Coding的token尝试，发现了也可以在GitHub使用token，并且比较方便。</p>\n</li>\n</ol>\n<h2 id=\"coding配置文件\"><a class=\"markdownIt-Anchor\" href=\"#coding配置文件\"></a> Coding配置文件</h2>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">pipeline <span class=\"token punctuation\">&#123;</span>\n  agent any\n  stages <span class=\"token punctuation\">&#123;</span>\n    stage('获取最新git提交') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        checkout(<span class=\"token punctuation\">[</span><span class=\"token key atrule\">$class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GitSCM'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> env.GIT_BUILD_REF<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token key atrule\">userRemoteConfigs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> env.GIT_REPO_URL<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">credentialsId</span><span class=\"token punctuation\">:</span> env.CREDENTIALS_ID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>)\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    stage('安装依赖') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        sh 'npm install hexo<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g'\n        sh 'npm install gulp <span class=\"token punctuation\">-</span>g'\n        sh 'npm install'\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    stage('生成页面并压缩') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        sh 'hexo cl <span class=\"token important\">&amp;&amp;</span> hexo g <span class=\"token important\">&amp;&amp;</span> gulp'\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    stage('发布网页') <span class=\"token punctuation\">&#123;</span>\n      steps <span class=\"token punctuation\">&#123;</span>\n        sh '''\n          pwd\n          cd ./public\n          pwd\n          git init\n          git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name \\'$<span class=\"token punctuation\">&#123;</span>GIT_USER<span class=\"token punctuation\">&#125;</span>\\'\n          git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email \\'$<span class=\"token punctuation\">&#123;</span>GIT_MAIL<span class=\"token punctuation\">&#125;</span>\\'\n          git add .\n          git commit <span class=\"token punctuation\">-</span>m \"Update\"\n          git push <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>force <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>all https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">&#123;</span>CODING_TOKEN<span class=\"token punctuation\">&#125;</span>@$<span class=\"token punctuation\">&#123;</span>CODING_REPO<span class=\"token punctuation\">&#125;</span>\n          git push <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>force <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>all https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">&#123;</span>GH_TOKEN<span class=\"token punctuation\">&#125;</span>@$<span class=\"token punctuation\">&#123;</span>GH_REPO<span class=\"token punctuation\">&#125;</span>\n        '''\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中需要配置的环境变量：</p>\n<ul>\n<li>\n<p><code>GH_TOKEN</code></p>\n<p>GitHub的token。获取方式：<a href=\"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">Creating a personal access token</a></p>\n</li>\n<li>\n<p><code>CODING_TOKEN</code></p>\n<p>Coding的token。coding的token比较特殊，包含用户和密码。因此获取后将此字段填入的为<code>账户:密码</code>。例如：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png\" alt=\"image-20200626161411316\" /></p>\n<p>以上图为例的账户和密码，则此字段完整填入的为<code>abc:aabbcc</code></p>\n<p>令牌获取方式参照：<a href=\"https://www.antmoe.com/posts/51b0fa77/index.html\">Hexo 利用 coding 自动部署</a></p>\n</li>\n<li>\n<p><code>GIT_USER</code></p>\n<p>git的name。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GIT_MAIL</code></p>\n<p>git的email。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GH_REPO</code></p>\n<p>GitHub仓库地址。格式为HTTPS后边的地址。例如<code>github.com/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n<li>\n<p><code>CODING_REPO</code></p>\n<p>Coding的仓库地址。格式为HTTPS后边的地址。例如<code>e.coding.net/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n</ul>\n<h2 id=\"github-actions配置文件\"><a class=\"markdownIt-Anchor\" href=\"#github-actions配置文件\"></a> Github Actions配置文件</h2>\n<div class=\"note info icon\"><p>1. 密钥方式</p></div>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># workflow name</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Blog CI\n\n<span class=\"token comment\"># master branch on push, auto run</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">strategy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matrix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>10.x<span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># check it to your workflow can access it</span>\n      <span class=\"token comment\"># from: https://github.com/actions/checkout</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 1. 检查master分支\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@master\n\n      <span class=\"token comment\"># from: https://github.com/actions/setup-node</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 2. 设置Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@master\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> matrix.node<span class=\"token punctuation\">-</span>version <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 3. 安装 Hexo CI\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          export TZ='Asia/Shanghai'\n          npm install hexo-cli -g\n          npm install gulp -g</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 4. 缓存\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v1\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> cache<span class=\"token punctuation\">-</span>dependencies\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>runner.OS<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hashFiles('<span class=\"token important\">**/package-lock.json')</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 5. 安装插件\n        <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> steps.cache<span class=\"token punctuation\">-</span>dependencies.outputs.cache<span class=\"token punctuation\">-</span>hit <span class=\"token tag\">!=</span> 'true'\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm install</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 6. 设置私钥信息\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token comment\"># HEXO_DEPLOY_PRIVATE_KEY: $&#123;&#123; secrets.HEXO_DEPLOY_PRIVATE_KEY &#125;&#125;</span>\n          <span class=\"token key atrule\">CODEING_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.CODEING_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n          <span class=\"token key atrule\">GH_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.GH_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          mkdir -p ~/.ssh/\n          echo \"$GH_KEY\" > ~/.ssh/id_rsa\n          echo \"$CODEING_KEY\" > ~/.ssh/coding_rsa\n          chmod 600 ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/coding_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          ssh-keyscan e.coding.net >> ~/.ssh/known_hosts  # 注意，Coding的地址已经改成e.coding.net，很多教程中使用的地址都是旧的，导致无法完成部署</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 7. 设置git信息\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          git config --global user.name '$&#123;&#123; secrets.GIT_USER &#125;&#125;' \n          git config --global user.email '$&#123;&#123; secrets.GIT_MAIL &#125;&#125;'</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 8. hexo命令三连\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          hexo clean\n          hexo generate \n          gulp\n          hexo deploy</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>\n<p><code>GIT_USER</code></p>\n<p>git的name。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GIT_MAIL</code></p>\n<p>git的email。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>CODEING_KEY</code></p>\n<p>向coding仓库推送的<strong>私钥</strong></p>\n</li>\n<li>\n<p><code>GH_KEY</code></p>\n<p>向github仓库推送的<strong>私钥</strong></p>\n</li>\n</ul>\n<div class=\"note info icon\"><p>2. Token方式</p></div>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># workflow name</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Blog CI\n\n<span class=\"token comment\"># master branch on push, auto run</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">strategy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matrix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>10.x<span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># check it to your workflow can access it</span>\n      <span class=\"token comment\"># from: https://github.com/actions/checkout</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 1. 检查master分支\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@master\n\n      <span class=\"token comment\"># from: https://github.com/actions/setup-node</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 2. 设置Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@master\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> matrix.node<span class=\"token punctuation\">-</span>version <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 3. 安装 Hexo CI\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          export TZ='Asia/Shanghai'\n          npm install hexo-cli -g\n          npm install gulp -g</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 4. 缓存\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v1\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> cache<span class=\"token punctuation\">-</span>dependencies\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>runner.OS<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hashFiles('<span class=\"token important\">**/package-lock.json')</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 5. 安装插件\n        <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> steps.cache<span class=\"token punctuation\">-</span>dependencies.outputs.cache<span class=\"token punctuation\">-</span>hit <span class=\"token tag\">!=</span> 'true'\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm install</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 6. 生成页面并压缩\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          hexo cl &amp;&amp; hexo g &amp;&amp; gulp</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 7. 部署页面\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          cd ./public\n          ls\n          git init\n          git config --global user.name '$&#123;&#123; secrets.GIT_USER &#125;&#125;' \n          git config --global user.email '$&#123;&#123; secrets.GIT_MAIL &#125;&#125;'\n          git add .\n          git commit -m \"Update\"\n          git push --force --all https://$&#123;&#123; secrets.GH_TOKEN &#125;&#125;@$&#123;&#123; secrets.GH_REPO &#125;&#125;\n          git push --force --all https://$&#123;&#123; secrets.CODING_TOKEN &#125;&#125;@$&#123;&#123; secrets.CODING_REPO &#125;&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中需要配置的环境变量：</p>\n<ul>\n<li>\n<p><code>GH_TOKEN</code></p>\n<p>GitHub的token。获取方式：<a href=\"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">Creating a personal access token</a></p>\n</li>\n<li>\n<p><code>CODING_TOKEN</code></p>\n<p>Coding的token。coding的token比较特殊，包含用户和密码。因此获取后将此字段填入的为<code>账户:密码</code>。例如：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/26/ce087a15ba01c026a79689b0e1a6674c.png\" alt=\"image-20200626161411316\" /></p>\n<p>以上图为例的账户和密码，则此字段完整填入的为<code>abc:aabbcc</code></p>\n<p>令牌获取方式参照：<a href=\"https://www.antmoe.com/posts/51b0fa77/index.html\">Hexo 利用 coding 自动部署</a></p>\n</li>\n<li>\n<p><code>GIT_USER</code></p>\n<p>git的name。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GIT_MAIL</code></p>\n<p>git的email。用于设置全局git基本信息</p>\n</li>\n<li>\n<p><code>GH_REPO</code></p>\n<p>GitHub仓库地址。格式为HTTPS后边的地址。例如<code>github.com/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n<li>\n<p><code>CODING_REPO</code></p>\n<p>Coding的仓库地址。格式为HTTPS后边的地址。例如<code>e.coding.net/xiaokang/xiaokang.git</code>。切记不要加上协议头或者使用ssh地址</p>\n</li>\n</ul>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"优雅部署","path":"api/categories/优雅部署.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"配置环境","path":"api/tags/配置环境.json"}]}