{"title":"利用GitHub+Actions自动部署Hexo博客","slug":"Hexo相关/优雅部署/利用GitHub-Actions自动部署Hexo博客","date":"2020-02-15T05:36:03.000Z","updated":"2022-02-21T06:22:27.456Z","comments":true,"path":"api/articles/Hexo相关/优雅部署/利用GitHub-Actions自动部署Hexo博客.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142023.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142335.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142712.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142807.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142926.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215143157.png"],"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>早就听闻GitHub+Actions真相，于是今天便试了下，作为小康博客的第二个平台。至于为什么要自动部署，我在<a href=\"/posts/51b0fa77/index.html\">另一篇文章</a>介绍过了。</p>\n<h2 id=\"准备仓库\"><a class=\"markdownIt-Anchor\" href=\"#准备仓库\"></a> 准备仓库</h2>\n<ul>\n<li>私有仓库： blog</li>\n</ul>\n<blockquote>\n<p>这里是存放 Hexo 博客源码的</p>\n</blockquote>\n<ul>\n<li>公有仓库： <code>用户名.github.io</code></li>\n</ul>\n<blockquote>\n<p>这里是用来 public 静态页面的，最好是空的，当然是你现在的hexo博客也可以。</p>\n</blockquote>\n<h2 id=\"创建密钥对\"><a class=\"markdownIt-Anchor\" href=\"#创建密钥对\"></a> 创建密钥对</h2>\n<p>为了方便运行GitHub Actions时登录GitHub账号，我们使用SSH方式登录。就是要把设备的私钥交给GitHub Actions，公钥交给GitHub，需要去Settings里去配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"Github 的邮箱地址\"</span>\n\n如 ssh-keygen -t rsa -C <span class=\"token string\">\"123123123@gmail.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>密钥对生成后默认的位置是用户文件。以windows为例：密钥对文件在<code>C:\\Users\\用户名</code>里，其中Users可能因为系统原因显示的是<code>用户</code>。这个文件夹里会有一个<code>.ssh</code>的目录，这个里面就是我们的密钥对。</p>\n<p>其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。</p>\n<ul>\n<li>\n<p>配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：github网站–&gt;Settings–&gt;SSH and GPG keys</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png\" alt=\"\" /><br />\n<img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png\" alt=\"\" /></p>\n<p>新增一个公钥，然后把<code>id_rsa.pub</code>这个文件用文本文档打开，将内容复制进去。</p>\n</li>\n<li>\n<p>配置私钥，blog私有仓库的Settings-&gt;Secrets里添加私钥，名称为<code>HEXO_DEPLOY_PRIVATE_KEY</code></p>\n<p>找到你的<font color=red><strong>私有项目</strong></font>（用于存储博客源码的仓库）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142023.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142335.png\" alt=\"\" /></p>\n<p>将你的私钥添加进去，名字写<code>HEXO_DEPLOY_PRIVATE_KEY</code> 。</p>\n</li>\n</ul>\n<h2 id=\"添加actions\"><a class=\"markdownIt-Anchor\" href=\"#添加actions\"></a> 添加Actions</h2>\n<p>点击私有仓库里的<code>Actions</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142712.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142807.png\" alt=\"\" /></p>\n<p>点击<code>New workflow</code>来创建一个新的actions。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142926.png\" alt=\"\" /></p>\n<p>然后在内容框填入以下代码</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># workflow name</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Blog CI\n\n<span class=\"token comment\"># master branch on push, auto run</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n      \n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest \n        \n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># check it to your workflow can access it</span>\n    <span class=\"token comment\"># from: https://github.com/actions/checkout</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository master branch\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@master \n      \n    <span class=\"token comment\"># from: https://github.com/actions/setup-node  </span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js 10.x \n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@master\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10.x\"</span>\n    \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Hexo Dependencies\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        npm install hexo-cli -g\n        npm install</span>\n    \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Deploy Private Key\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">HEXO_DEPLOY_PRIVATE_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.HEXO_DEPLOY_PRIVATE_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        mkdir -p ~/.ssh/\n        echo \"$HEXO_DEPLOY_PRIVATE_KEY\" > ~/.ssh/id_rsa \n        chmod 600 ~/.ssh/id_rsa\n        ssh-keyscan github.com >> ~/.ssh/known_hosts</span>\n        \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Git Infomation\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"> \n        git config --global user.name '名字' \n        git config --global user.email '邮件'</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy Hexo \n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        hexo clean\n        hexo generate \n        hexo deploy</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后点击提交即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215143157.png\" alt=\"\" /></p>\n<p>这样设置后就不需要在hexo命令三连进行部署了，直接将代码推送到私有仓库，1分钟后即可看到效果。</p>\n<h2 id=\"常见问题\"><a class=\"markdownIt-Anchor\" href=\"#常见问题\"></a> 常见问题</h2>\n<h3 id=\"域名问题\"><a class=\"markdownIt-Anchor\" href=\"#域名问题\"></a> 域名问题</h3>\n<blockquote>\n<p>每次部署完都需要重新绑定域名</p>\n</blockquote>\n<p>解决方式很简单，在博客根目录的配置文件中找到<code>skip_render</code>字段，添加值<code>'CNAME'</code></p>\n<p>如果是多个值的配置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">skip_render</span><span class=\"token punctuation\">:</span> \n  <span class=\"token punctuation\">-</span> <span class=\"token string\">'404/index.html'</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">'CNAME'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>然后在<code>/source</code>的目录中创建一个文件，命名为<code>CNAME</code>，里边的内容写你的域名。只写域名即可。例如<code>www.antmoe.com</code>，不需要添加<code>http(s)://</code></p>\n<h3 id=\"其他问题\"><a class=\"markdownIt-Anchor\" href=\"#其他问题\"></a> 其他问题</h3>\n<p>请在下面留言，并写上常用的邮箱（及时得知博主的回复，邮箱不会泄露）和你的昵称。博主看到后会及时帮助解决问题的。</p>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>早就听闻GitHub+Actions真相，于是今天便试了下，作为小康博客的第二个平台。至于为什么要自动部署，我在<a href=\"/posts/51b0fa77/index.html\">另一篇文章</a>介绍过了。</p>\n<h2 id=\"准备仓库\"><a class=\"markdownIt-Anchor\" href=\"#准备仓库\"></a> 准备仓库</h2>\n<ul>\n<li>私有仓库： blog</li>\n</ul>\n<blockquote>\n<p>这里是存放 Hexo 博客源码的</p>\n</blockquote>\n<ul>\n<li>公有仓库： <code>用户名.github.io</code></li>\n</ul>\n<blockquote>\n<p>这里是用来 public 静态页面的，最好是空的，当然是你现在的hexo博客也可以。</p>\n</blockquote>\n<h2 id=\"创建密钥对\"><a class=\"markdownIt-Anchor\" href=\"#创建密钥对\"></a> 创建密钥对</h2>\n<p>为了方便运行GitHub Actions时登录GitHub账号，我们使用SSH方式登录。就是要把设备的私钥交给GitHub Actions，公钥交给GitHub，需要去Settings里去配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"Github 的邮箱地址\"</span>\n\n如 ssh-keygen -t rsa -C <span class=\"token string\">\"123123123@gmail.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>密钥对生成后默认的位置是用户文件。以windows为例：密钥对文件在<code>C:\\Users\\用户名</code>里，其中Users可能因为系统原因显示的是<code>用户</code>。这个文件夹里会有一个<code>.ssh</code>的目录，这个里面就是我们的密钥对。</p>\n<p>其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。</p>\n<ul>\n<li>\n<p>配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：github网站–&gt;Settings–&gt;SSH and GPG keys</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636.png\" alt=\"\" /><br />\n<img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215141636-1.png\" alt=\"\" /></p>\n<p>新增一个公钥，然后把<code>id_rsa.pub</code>这个文件用文本文档打开，将内容复制进去。</p>\n</li>\n<li>\n<p>配置私钥，blog私有仓库的Settings-&gt;Secrets里添加私钥，名称为<code>HEXO_DEPLOY_PRIVATE_KEY</code></p>\n<p>找到你的<font color=red><strong>私有项目</strong></font>（用于存储博客源码的仓库）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142023.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142335.png\" alt=\"\" /></p>\n<p>将你的私钥添加进去，名字写<code>HEXO_DEPLOY_PRIVATE_KEY</code> 。</p>\n</li>\n</ul>\n<h2 id=\"添加actions\"><a class=\"markdownIt-Anchor\" href=\"#添加actions\"></a> 添加Actions</h2>\n<p>点击私有仓库里的<code>Actions</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142712.png\" alt=\"\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142807.png\" alt=\"\" /></p>\n<p>点击<code>New workflow</code>来创建一个新的actions。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215142926.png\" alt=\"\" /></p>\n<p>然后在内容框填入以下代码</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># workflow name</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Blog CI\n\n<span class=\"token comment\"># master branch on push, auto run</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n      \n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest \n        \n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># check it to your workflow can access it</span>\n    <span class=\"token comment\"># from: https://github.com/actions/checkout</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository master branch\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@master \n      \n    <span class=\"token comment\"># from: https://github.com/actions/setup-node  </span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js 10.x \n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@master\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10.x\"</span>\n    \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Hexo Dependencies\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        npm install hexo-cli -g\n        npm install</span>\n    \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Deploy Private Key\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">HEXO_DEPLOY_PRIVATE_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.HEXO_DEPLOY_PRIVATE_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        mkdir -p ~/.ssh/\n        echo \"$HEXO_DEPLOY_PRIVATE_KEY\" > ~/.ssh/id_rsa \n        chmod 600 ~/.ssh/id_rsa\n        ssh-keyscan github.com >> ~/.ssh/known_hosts</span>\n        \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Git Infomation\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"> \n        git config --global user.name '名字' \n        git config --global user.email '邮件'</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy Hexo \n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        hexo clean\n        hexo generate \n        hexo deploy</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后点击提交即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/15/20200215143157.png\" alt=\"\" /></p>\n<p>这样设置后就不需要在hexo命令三连进行部署了，直接将代码推送到私有仓库，1分钟后即可看到效果。</p>\n<h2 id=\"常见问题\"><a class=\"markdownIt-Anchor\" href=\"#常见问题\"></a> 常见问题</h2>\n<h3 id=\"域名问题\"><a class=\"markdownIt-Anchor\" href=\"#域名问题\"></a> 域名问题</h3>\n<blockquote>\n<p>每次部署完都需要重新绑定域名</p>\n</blockquote>\n<p>解决方式很简单，在博客根目录的配置文件中找到<code>skip_render</code>字段，添加值<code>'CNAME'</code></p>\n<p>如果是多个值的配置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">skip_render</span><span class=\"token punctuation\">:</span> \n  <span class=\"token punctuation\">-</span> <span class=\"token string\">'404/index.html'</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">'CNAME'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>然后在<code>/source</code>的目录中创建一个文件，命名为<code>CNAME</code>，里边的内容写你的域名。只写域名即可。例如<code>www.antmoe.com</code>，不需要添加<code>http(s)://</code></p>\n<h3 id=\"其他问题\"><a class=\"markdownIt-Anchor\" href=\"#其他问题\"></a> 其他问题</h3>\n<p>请在下面留言，并写上常用的邮箱（及时得知博主的回复，邮箱不会泄露）和你的昵称。博主看到后会及时帮助解决问题的。</p>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"优雅部署","path":"api/categories/优雅部署.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"配置环境","path":"api/tags/配置环境.json"}]}