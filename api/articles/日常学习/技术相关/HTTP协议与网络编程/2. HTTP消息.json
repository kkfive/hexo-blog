{"title":"HTTP消息","slug":"日常学习/技术相关/HTTP协议与网络编程/2. HTTP消息","date":"2020-08-08T12:45:01.000Z","updated":"2022-02-21T07:18:57.049Z","comments":true,"path":"api/articles/日常学习/技术相关/HTTP协议与网络编程/2. HTTP消息.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/6f4139f5b094f003d751aa309a6ee884.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/dd2f2cc2ed5f67b9ba5f91d2e1b0fd01.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/c822d217ff8a440cd6eb32eec6771120.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/0746ac48667a2d7d224d6d556239a57c.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/854c9f2ffbea665bf70d5e1d1974d785.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/fc68e55fa9b3ebe70108ee8d8a214ec5.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/a9ca7a8fa048f81bece1ed9624cd7cc7.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/49ba6db38e10edfc889433122cb0d08e.png"],"content":"<h2 id=\"http报文\"><a class=\"markdownIt-Anchor\" href=\"#http报文\"></a> HTTP报文</h2>\n<h3 id=\"http报文是什么\"><a class=\"markdownIt-Anchor\" href=\"#http报文是什么\"></a> HTTP报文是什么</h3>\n<p>HTTP报文，又称HTTP消息，是服务器和客户端之间交换数据的方式。有两种类型的消息：请求，由客户端发送用来触妓一个服务器上的动作；响应，来自服务器的应答。</p>\n<p>HTTP消息由采用ASCII编码的多行文本构成。在HTTP/1.1及早期版本中，这些消息通过连接公开地发送。在HTTP/2中，为了优化和性能方面的改进，曾经可人工阅读的消息被分到多个HTTP帧中。</p>\n<h3 id=\"http请求报文\"><a class=\"markdownIt-Anchor\" href=\"#http请求报文\"></a> HTTP请求报文</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/6f4139f5b094f003d751aa309a6ee884.png\" alt=\"image-20200808211039326\" /></p>\n<h3 id=\"http响应报文\"><a class=\"markdownIt-Anchor\" href=\"#http响应报文\"></a> HTTP响应报文</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/dd2f2cc2ed5f67b9ba5f91d2e1b0fd01.png\" alt=\"image-20200808211148586\" /></p>\n<h2 id=\"http消息\"><a class=\"markdownIt-Anchor\" href=\"#http消息\"></a> HTTP消息</h2>\n<h3 id=\"http消息结构\"><a class=\"markdownIt-Anchor\" href=\"#http消息结构\"></a> HTTP消息结构</h3>\n<ol>\n<li>start line：一行起始行用于描述要执行的请求，或者是对应的状态，成功或失败。这个起始行总是单行的。</li>\n<li>HTTP headers：一个可选的HTTP头集合指明请求或描述消息正文。</li>\n<li>empty line:-个空行指示所有美于请求的元数据已经发送完毕。</li>\n<li>body：一个可选的包含请求相美数据的正文（比如HTML表单内容）或者响应相美的文档。正文的大小有起始行的HTTP头来指定。</li>\n</ol>\n<p>起始行和HTTP消息中的HTTP头统称为“请求头”，而其有效负载被称为“消息正文”。</p>\n<h3 id=\"请求消息与响应消息\"><a class=\"markdownIt-Anchor\" href=\"#请求消息与响应消息\"></a> 请求消息与响应消息</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/c822d217ff8a440cd6eb32eec6771120.png\" alt=\"image-20200808211603763\" /></p>\n<h2 id=\"请求消息\"><a class=\"markdownIt-Anchor\" href=\"#请求消息\"></a> 请求消息</h2>\n<h3 id=\"起始行\"><a class=\"markdownIt-Anchor\" href=\"#起始行\"></a> 起始行</h3>\n<p>起始行包含三个元素</p>\n<ol>\n<li>请求方法</li>\n<li>请求地址</li>\n<li>HTTP版本</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/0746ac48667a2d7d224d6d556239a57c.png\" alt=\"image-20200808213038063\" /></p>\n<h3 id=\"请求方法\"><a class=\"markdownIt-Anchor\" href=\"#请求方法\"></a> 请求方法</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">请求方法</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">GET</td>\n<td style=\"text-align:center\">GET方法请求一个指定资源的表示形式。使用GET的请求应该只被用于获取数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HEAD</td>\n<td style=\"text-align:center\">HEAD方法请求一个与GET请求的响应相同的响应，但没有响应体</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">POST</td>\n<td style=\"text-align:center\">POST方法用于将实体提交到指定的资原，通常导致状态或服务器上的副作用的更改</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PUT</td>\n<td style=\"text-align:center\">PUT方法用请求有效载荷替换目标资源的所有当前表示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DELETE</td>\n<td style=\"text-align:center\">DELETE方法删除指定的资源</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CONNECT</td>\n<td style=\"text-align:center\">ONNECT方法建立一个到由目标资源标识的服务器的隧道</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OPTIONS</td>\n<td style=\"text-align:center\">OPTIONS方法用于描述目标资源的通信选项</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TRACE</td>\n<td style=\"text-align:center\">TRACE方法沿着到目标资源的路径执行一个消息环回测试</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PATCH</td>\n<td style=\"text-align:center\">PATCH方法用于对资源应用部分修改</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"请求头\"><a class=\"markdownIt-Anchor\" href=\"#请求头\"></a> 请求头</h3>\n<p>请求头允许客户端向服务器端传递附加信息。请求头由名称（不区分大小写）后跟一个冒号“：”，冒号后跟具体的值（不带换行符）组成。</p>\n<p>根据不同上下文，可将请求头分为：</p>\n<ol>\n<li>通用头：同时适用于请求和响应消息，但与最终消息主体中传输的数据无美的消息头</li>\n<li>请求头：包含更多有关要获取的资源或客户端本身信息的消息头。</li>\n<li>实体头：包含有关实体主体的更多信息，比如加主体长 Content- Length）度或其MIME类型。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/854c9f2ffbea665bf70d5e1d1974d785.png\" alt=\"image-20200808213632284\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/fc68e55fa9b3ebe70108ee8d8a214ec5.png\" alt=\"image-20200808214223208\" /></p>\n<h3 id=\"请求主体\"><a class=\"markdownIt-Anchor\" href=\"#请求主体\"></a> 请求主体</h3>\n<p>请求消息的最后一部分是请求主体。</p>\n<ul>\n<li>不是所有的请求都需要请求主体：例如获取资源的请求GET、HEAD、 DELEE和 OPTIONS通常它们不需要请求主体。</li>\n<li>有些请求将数据妓送到服务器以便更新数据：常见的的情况是POST请求（包含HTML表单数据）。</li>\n</ul>\n<p>请求主体大致可分为两类</p>\n<ol>\n<li>单一资原圭体：由一个单文件组成。该类型请求主体由两个 header定义： Content-Type和Content-length</li>\n<li>多资源主体：由多部分请求主体组成，每一部分包含不同的信息位。通常是和HTML表单连系在一起</li>\n</ol>\n<h2 id=\"响应消息\"><a class=\"markdownIt-Anchor\" href=\"#响应消息\"></a> 响应消息</h2>\n<h3 id=\"状态行\"><a class=\"markdownIt-Anchor\" href=\"#状态行\"></a> 状态行</h3>\n<p>HTTP响应消息的起始行被称作状态行（statusline),包含以下信息：</p>\n<ol>\n<li>协议版本：通常为HTTP/1.1</li>\n<li>状态码：表明请求是成功或失败。常见的状态码是200,404,或302.</li>\n<li>状态文本：一个简短的，纯粹的信息，通过状态码的文本描述，帮助人们理解该HTTP消息</li>\n</ol>\n<h3 id=\"响应头\"><a class=\"markdownIt-Anchor\" href=\"#响应头\"></a> 响应头</h3>\n<p>响应头允许服务器端向客户端传递附加信息。响应头由名称（不区分大小写）后跟一个冒号“：”，冒号后跟具体的值（不带换行符）组成</p>\n<p>根据不同上下文，可将响应头分为</p>\n<ol>\n<li>通用头：同时适用于请求和响应消息，但与最终消息主体中传输的数据无关的消息头。</li>\n<li>响应头：包含有关响应的补充信息，如其位置或服务器本身（名称和版本等）的消息头。</li>\n<li>实体头：包含有关实体主体的更多信息，比如主体长（ Content- Length）度或其MIME类型。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/a9ca7a8fa048f81bece1ed9624cd7cc7.png\" alt=\"image-20200808221554242\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/49ba6db38e10edfc889433122cb0d08e.png\" alt=\"image-20200808222035731\" /></p>\n<h3 id=\"响应主体\"><a class=\"markdownIt-Anchor\" href=\"#响应主体\"></a> 响应主体</h3>\n<p>响应消息的最后一部分是响应主体。不是所有的响应都需要响应主体：例如具有状态码（如201或204)的响应，通常不会有响应主体。<br />\n响应主体大致可分为两类</p>\n<ol>\n<li>单一资源主体：由已知长度的单个文件组成。该类型响应主体由两个 header定义： Content Type和 Content-length</li>\n<li>单一资原主仲：由未知长度的单个文件组成，通过将 Transfer- Encoding设置为 chunked来使用chunks编码</li>\n<li>多资源主体：由多部分响应主体组成，每部分包含不同的信息段。但这是比较少见的。</li>\n</ol>\n<h2 id=\"状态码\"><a class=\"markdownIt-Anchor\" href=\"#状态码\"></a> 状态码</h2>\n<h3 id=\"信息响应\"><a class=\"markdownIt-Anchor\" href=\"#信息响应\"></a> 信息响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100 Continue</td>\n<td style=\"text-align:center\">这个临时响应表明，迄今为止的所有内容都是可行的，客户端应该继续请求，如果已经完成，则忽略它</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">101 Switching Protocol</td>\n<td style=\"text-align:center\">该代码是响应客户端的 Upgrade标头发送的，井且指示服务器也正在切换的协议</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">102 Processing</td>\n<td style=\"text-align:center\">此代码表示服务器已到井正在处理该请求，但没有响应可用</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"成功响应\"><a class=\"markdownIt-Anchor\" href=\"#成功响应\"></a> 成功响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">200 OK</td>\n<td style=\"text-align:center\">请求成功</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">201 Created</td>\n<td style=\"text-align:center\">该请求已成功，并因此创建了一个新的资源。这通常是在PUT请求之后发送的响应</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">202 Accepted</td>\n<td style=\"text-align:center\">请求已经接收到，但还未响应，没有结果</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">203 Non-authoritative Information</td>\n<td style=\"text-align:center\">服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">204 No Content</td>\n<td style=\"text-align:center\">服务器成功处理了请求，但不需要返回任何实体内容，井且希望返回更新了的元信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">205 Reset Content</td>\n<td style=\"text-align:center\">服务器成功处理了请求，且没有返回任何内容。该响应主要是被用于接受用户输入后，立即重置表单</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">206 Partial Content</td>\n<td style=\"text-align:center\">服务器已经成功处理了部分GET请求</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"重定向\"><a class=\"markdownIt-Anchor\" href=\"#重定向\"></a> 重定向</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">300 Multiple Choice</td>\n<td style=\"text-align:center\">被请求的资源有一系列可供选择的回馈信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">301 Moved Permanently</td>\n<td style=\"text-align:center\">被请求的资源已永久移动到新位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">302 Found</td>\n<td style=\"text-align:center\">请求的资源现在临时从不同的URI响应请求</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">303 See Other</td>\n<td style=\"text-align:center\">对应当前请求的响应可以在另一个UN上被找到，而且客户端应当采用GET的方式访问那个资源</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">304 Not Modified</td>\n<td style=\"text-align:center\">如果客户端发送了一个带条件的GET请求且该请求已被允许，而文档的内容自上次访问以来或者根据请求的条件）并没有改变</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"客户端响应\"><a class=\"markdownIt-Anchor\" href=\"#客户端响应\"></a> 客户端响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">400 Bad Request</td>\n<td style=\"text-align:center\">语义有误，当前请求无法被服务器理解</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">401 Unauthorized</td>\n<td style=\"text-align:center\">当前请求需要用户验证</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">403 Forbidden</td>\n<td style=\"text-align:center\">服务器已经理解请求，但是拒绝执行它</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">404 Not Found</td>\n<td style=\"text-align:center\">请求失败，请求所希望得到的资源未被在服务器上发现</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">405 Method Not Allowed</td>\n<td style=\"text-align:center\">请求行中指定的请求方法不能被用于请求相应的资源</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"服务端响应\"><a class=\"markdownIt-Anchor\" href=\"#服务端响应\"></a> 服务端响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">500 Internal Server Error</td>\n<td style=\"text-align:center\">服务器遇到了不知道如何处理的情况</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">501 Not Implemented</td>\n<td style=\"text-align:center\">此请求方法不被服务器支持且无法被处理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">502 Bad Gateway</td>\n<td style=\"text-align:center\">此错响应表明服务器作为网关需要得到一个处理这个请求的响应</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">503 Service Unavailable</td>\n<td style=\"text-align:center\">服务器没有备好处理请求</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">504 Gateway Timeout</td>\n<td style=\"text-align:center\">当服务器作为网关，不能及时得到响应时返回此错误代码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">505 HTTP Version Not Supported</td>\n<td style=\"text-align:center\">服务器不支持请求中所使用的HTTP协议版本</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mime消息\"><a class=\"markdownIt-Anchor\" href=\"#mime消息\"></a> MIME消息</h2>\n<p>MIME类型全称为 Multipurpose Internet Mail Extensions，被译为多用途 Internet邮件扩展类型，是一种标准化的方式来表示文档的性质和格式。</p>\n<p>浏览器通常使用MIME类型（而不是文件扩展名）来确定如何处理文档；因此服务器设置正确以将正确的MIME类型附加到响应对象的头部是非常重要的。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">经典实例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">text</td>\n<td style=\"text-align:center\">表明文件是普通文本</td>\n<td style=\"text-align:center\">text/plain,text/html</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">image</td>\n<td style=\"text-align:center\">表明是某种图像</td>\n<td style=\"text-align:center\">image/png</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">audio</td>\n<td style=\"text-align:center\">标明是某种音频文件</td>\n<td style=\"text-align:center\">audio/webm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">video</td>\n<td style=\"text-align:center\">标明是某种视频文件</td>\n<td style=\"text-align:center\">video/webm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">application</td>\n<td style=\"text-align:center\">表明是某种二进制数据</td>\n<td style=\"text-align:center\">application/octet-stream</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"http1x的缺点\"><a class=\"markdownIt-Anchor\" href=\"#http1x的缺点\"></a> HTTP1.x的缺点</h2>\n<p>HTTP/1.x报文有一些性能上的缺点</p>\n<ul>\n<li>消息头不像消息主体一样会被压缩</li>\n<li>两个报文之间的header通常非常相似，但它们仍然在连接中重复传输。</li>\n<li>无法复用。当在同一个服务器打开几个连接时，TCP热连接比冷连接更加有效。<br />\nHTTP/2.0引入了ー个额外的步骤，它将HTTP/1.x消息分成帧并嵌入到流（stream）中</li>\n</ul>\n","more":"<h2 id=\"http报文\"><a class=\"markdownIt-Anchor\" href=\"#http报文\"></a> HTTP报文</h2>\n<h3 id=\"http报文是什么\"><a class=\"markdownIt-Anchor\" href=\"#http报文是什么\"></a> HTTP报文是什么</h3>\n<p>HTTP报文，又称HTTP消息，是服务器和客户端之间交换数据的方式。有两种类型的消息：请求，由客户端发送用来触妓一个服务器上的动作；响应，来自服务器的应答。</p>\n<p>HTTP消息由采用ASCII编码的多行文本构成。在HTTP/1.1及早期版本中，这些消息通过连接公开地发送。在HTTP/2中，为了优化和性能方面的改进，曾经可人工阅读的消息被分到多个HTTP帧中。</p>\n<h3 id=\"http请求报文\"><a class=\"markdownIt-Anchor\" href=\"#http请求报文\"></a> HTTP请求报文</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/6f4139f5b094f003d751aa309a6ee884.png\" alt=\"image-20200808211039326\" /></p>\n<h3 id=\"http响应报文\"><a class=\"markdownIt-Anchor\" href=\"#http响应报文\"></a> HTTP响应报文</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/dd2f2cc2ed5f67b9ba5f91d2e1b0fd01.png\" alt=\"image-20200808211148586\" /></p>\n<h2 id=\"http消息\"><a class=\"markdownIt-Anchor\" href=\"#http消息\"></a> HTTP消息</h2>\n<h3 id=\"http消息结构\"><a class=\"markdownIt-Anchor\" href=\"#http消息结构\"></a> HTTP消息结构</h3>\n<ol>\n<li>start line：一行起始行用于描述要执行的请求，或者是对应的状态，成功或失败。这个起始行总是单行的。</li>\n<li>HTTP headers：一个可选的HTTP头集合指明请求或描述消息正文。</li>\n<li>empty line:-个空行指示所有美于请求的元数据已经发送完毕。</li>\n<li>body：一个可选的包含请求相美数据的正文（比如HTML表单内容）或者响应相美的文档。正文的大小有起始行的HTTP头来指定。</li>\n</ol>\n<p>起始行和HTTP消息中的HTTP头统称为“请求头”，而其有效负载被称为“消息正文”。</p>\n<h3 id=\"请求消息与响应消息\"><a class=\"markdownIt-Anchor\" href=\"#请求消息与响应消息\"></a> 请求消息与响应消息</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/c822d217ff8a440cd6eb32eec6771120.png\" alt=\"image-20200808211603763\" /></p>\n<h2 id=\"请求消息\"><a class=\"markdownIt-Anchor\" href=\"#请求消息\"></a> 请求消息</h2>\n<h3 id=\"起始行\"><a class=\"markdownIt-Anchor\" href=\"#起始行\"></a> 起始行</h3>\n<p>起始行包含三个元素</p>\n<ol>\n<li>请求方法</li>\n<li>请求地址</li>\n<li>HTTP版本</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/0746ac48667a2d7d224d6d556239a57c.png\" alt=\"image-20200808213038063\" /></p>\n<h3 id=\"请求方法\"><a class=\"markdownIt-Anchor\" href=\"#请求方法\"></a> 请求方法</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">请求方法</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">GET</td>\n<td style=\"text-align:center\">GET方法请求一个指定资源的表示形式。使用GET的请求应该只被用于获取数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HEAD</td>\n<td style=\"text-align:center\">HEAD方法请求一个与GET请求的响应相同的响应，但没有响应体</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">POST</td>\n<td style=\"text-align:center\">POST方法用于将实体提交到指定的资原，通常导致状态或服务器上的副作用的更改</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PUT</td>\n<td style=\"text-align:center\">PUT方法用请求有效载荷替换目标资源的所有当前表示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DELETE</td>\n<td style=\"text-align:center\">DELETE方法删除指定的资源</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CONNECT</td>\n<td style=\"text-align:center\">ONNECT方法建立一个到由目标资源标识的服务器的隧道</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OPTIONS</td>\n<td style=\"text-align:center\">OPTIONS方法用于描述目标资源的通信选项</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TRACE</td>\n<td style=\"text-align:center\">TRACE方法沿着到目标资源的路径执行一个消息环回测试</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PATCH</td>\n<td style=\"text-align:center\">PATCH方法用于对资源应用部分修改</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"请求头\"><a class=\"markdownIt-Anchor\" href=\"#请求头\"></a> 请求头</h3>\n<p>请求头允许客户端向服务器端传递附加信息。请求头由名称（不区分大小写）后跟一个冒号“：”，冒号后跟具体的值（不带换行符）组成。</p>\n<p>根据不同上下文，可将请求头分为：</p>\n<ol>\n<li>通用头：同时适用于请求和响应消息，但与最终消息主体中传输的数据无美的消息头</li>\n<li>请求头：包含更多有关要获取的资源或客户端本身信息的消息头。</li>\n<li>实体头：包含有关实体主体的更多信息，比如加主体长 Content- Length）度或其MIME类型。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/854c9f2ffbea665bf70d5e1d1974d785.png\" alt=\"image-20200808213632284\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/fc68e55fa9b3ebe70108ee8d8a214ec5.png\" alt=\"image-20200808214223208\" /></p>\n<h3 id=\"请求主体\"><a class=\"markdownIt-Anchor\" href=\"#请求主体\"></a> 请求主体</h3>\n<p>请求消息的最后一部分是请求主体。</p>\n<ul>\n<li>不是所有的请求都需要请求主体：例如获取资源的请求GET、HEAD、 DELEE和 OPTIONS通常它们不需要请求主体。</li>\n<li>有些请求将数据妓送到服务器以便更新数据：常见的的情况是POST请求（包含HTML表单数据）。</li>\n</ul>\n<p>请求主体大致可分为两类</p>\n<ol>\n<li>单一资原圭体：由一个单文件组成。该类型请求主体由两个 header定义： Content-Type和Content-length</li>\n<li>多资源主体：由多部分请求主体组成，每一部分包含不同的信息位。通常是和HTML表单连系在一起</li>\n</ol>\n<h2 id=\"响应消息\"><a class=\"markdownIt-Anchor\" href=\"#响应消息\"></a> 响应消息</h2>\n<h3 id=\"状态行\"><a class=\"markdownIt-Anchor\" href=\"#状态行\"></a> 状态行</h3>\n<p>HTTP响应消息的起始行被称作状态行（statusline),包含以下信息：</p>\n<ol>\n<li>协议版本：通常为HTTP/1.1</li>\n<li>状态码：表明请求是成功或失败。常见的状态码是200,404,或302.</li>\n<li>状态文本：一个简短的，纯粹的信息，通过状态码的文本描述，帮助人们理解该HTTP消息</li>\n</ol>\n<h3 id=\"响应头\"><a class=\"markdownIt-Anchor\" href=\"#响应头\"></a> 响应头</h3>\n<p>响应头允许服务器端向客户端传递附加信息。响应头由名称（不区分大小写）后跟一个冒号“：”，冒号后跟具体的值（不带换行符）组成</p>\n<p>根据不同上下文，可将响应头分为</p>\n<ol>\n<li>通用头：同时适用于请求和响应消息，但与最终消息主体中传输的数据无关的消息头。</li>\n<li>响应头：包含有关响应的补充信息，如其位置或服务器本身（名称和版本等）的消息头。</li>\n<li>实体头：包含有关实体主体的更多信息，比如主体长（ Content- Length）度或其MIME类型。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/a9ca7a8fa048f81bece1ed9624cd7cc7.png\" alt=\"image-20200808221554242\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/08/08/49ba6db38e10edfc889433122cb0d08e.png\" alt=\"image-20200808222035731\" /></p>\n<h3 id=\"响应主体\"><a class=\"markdownIt-Anchor\" href=\"#响应主体\"></a> 响应主体</h3>\n<p>响应消息的最后一部分是响应主体。不是所有的响应都需要响应主体：例如具有状态码（如201或204)的响应，通常不会有响应主体。<br />\n响应主体大致可分为两类</p>\n<ol>\n<li>单一资源主体：由已知长度的单个文件组成。该类型响应主体由两个 header定义： Content Type和 Content-length</li>\n<li>单一资原主仲：由未知长度的单个文件组成，通过将 Transfer- Encoding设置为 chunked来使用chunks编码</li>\n<li>多资源主体：由多部分响应主体组成，每部分包含不同的信息段。但这是比较少见的。</li>\n</ol>\n<h2 id=\"状态码\"><a class=\"markdownIt-Anchor\" href=\"#状态码\"></a> 状态码</h2>\n<h3 id=\"信息响应\"><a class=\"markdownIt-Anchor\" href=\"#信息响应\"></a> 信息响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100 Continue</td>\n<td style=\"text-align:center\">这个临时响应表明，迄今为止的所有内容都是可行的，客户端应该继续请求，如果已经完成，则忽略它</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">101 Switching Protocol</td>\n<td style=\"text-align:center\">该代码是响应客户端的 Upgrade标头发送的，井且指示服务器也正在切换的协议</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">102 Processing</td>\n<td style=\"text-align:center\">此代码表示服务器已到井正在处理该请求，但没有响应可用</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"成功响应\"><a class=\"markdownIt-Anchor\" href=\"#成功响应\"></a> 成功响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">200 OK</td>\n<td style=\"text-align:center\">请求成功</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">201 Created</td>\n<td style=\"text-align:center\">该请求已成功，并因此创建了一个新的资源。这通常是在PUT请求之后发送的响应</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">202 Accepted</td>\n<td style=\"text-align:center\">请求已经接收到，但还未响应，没有结果</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">203 Non-authoritative Information</td>\n<td style=\"text-align:center\">服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">204 No Content</td>\n<td style=\"text-align:center\">服务器成功处理了请求，但不需要返回任何实体内容，井且希望返回更新了的元信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">205 Reset Content</td>\n<td style=\"text-align:center\">服务器成功处理了请求，且没有返回任何内容。该响应主要是被用于接受用户输入后，立即重置表单</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">206 Partial Content</td>\n<td style=\"text-align:center\">服务器已经成功处理了部分GET请求</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"重定向\"><a class=\"markdownIt-Anchor\" href=\"#重定向\"></a> 重定向</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">300 Multiple Choice</td>\n<td style=\"text-align:center\">被请求的资源有一系列可供选择的回馈信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">301 Moved Permanently</td>\n<td style=\"text-align:center\">被请求的资源已永久移动到新位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">302 Found</td>\n<td style=\"text-align:center\">请求的资源现在临时从不同的URI响应请求</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">303 See Other</td>\n<td style=\"text-align:center\">对应当前请求的响应可以在另一个UN上被找到，而且客户端应当采用GET的方式访问那个资源</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">304 Not Modified</td>\n<td style=\"text-align:center\">如果客户端发送了一个带条件的GET请求且该请求已被允许，而文档的内容自上次访问以来或者根据请求的条件）并没有改变</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"客户端响应\"><a class=\"markdownIt-Anchor\" href=\"#客户端响应\"></a> 客户端响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">400 Bad Request</td>\n<td style=\"text-align:center\">语义有误，当前请求无法被服务器理解</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">401 Unauthorized</td>\n<td style=\"text-align:center\">当前请求需要用户验证</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">403 Forbidden</td>\n<td style=\"text-align:center\">服务器已经理解请求，但是拒绝执行它</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">404 Not Found</td>\n<td style=\"text-align:center\">请求失败，请求所希望得到的资源未被在服务器上发现</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">405 Method Not Allowed</td>\n<td style=\"text-align:center\">请求行中指定的请求方法不能被用于请求相应的资源</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"服务端响应\"><a class=\"markdownIt-Anchor\" href=\"#服务端响应\"></a> 服务端响应</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">500 Internal Server Error</td>\n<td style=\"text-align:center\">服务器遇到了不知道如何处理的情况</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">501 Not Implemented</td>\n<td style=\"text-align:center\">此请求方法不被服务器支持且无法被处理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">502 Bad Gateway</td>\n<td style=\"text-align:center\">此错响应表明服务器作为网关需要得到一个处理这个请求的响应</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">503 Service Unavailable</td>\n<td style=\"text-align:center\">服务器没有备好处理请求</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">504 Gateway Timeout</td>\n<td style=\"text-align:center\">当服务器作为网关，不能及时得到响应时返回此错误代码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">505 HTTP Version Not Supported</td>\n<td style=\"text-align:center\">服务器不支持请求中所使用的HTTP协议版本</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mime消息\"><a class=\"markdownIt-Anchor\" href=\"#mime消息\"></a> MIME消息</h2>\n<p>MIME类型全称为 Multipurpose Internet Mail Extensions，被译为多用途 Internet邮件扩展类型，是一种标准化的方式来表示文档的性质和格式。</p>\n<p>浏览器通常使用MIME类型（而不是文件扩展名）来确定如何处理文档；因此服务器设置正确以将正确的MIME类型附加到响应对象的头部是非常重要的。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">经典实例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">text</td>\n<td style=\"text-align:center\">表明文件是普通文本</td>\n<td style=\"text-align:center\">text/plain,text/html</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">image</td>\n<td style=\"text-align:center\">表明是某种图像</td>\n<td style=\"text-align:center\">image/png</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">audio</td>\n<td style=\"text-align:center\">标明是某种音频文件</td>\n<td style=\"text-align:center\">audio/webm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">video</td>\n<td style=\"text-align:center\">标明是某种视频文件</td>\n<td style=\"text-align:center\">video/webm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">application</td>\n<td style=\"text-align:center\">表明是某种二进制数据</td>\n<td style=\"text-align:center\">application/octet-stream</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"http1x的缺点\"><a class=\"markdownIt-Anchor\" href=\"#http1x的缺点\"></a> HTTP1.x的缺点</h2>\n<p>HTTP/1.x报文有一些性能上的缺点</p>\n<ul>\n<li>消息头不像消息主体一样会被压缩</li>\n<li>两个报文之间的header通常非常相似，但它们仍然在连接中重复传输。</li>\n<li>无法复用。当在同一个服务器打开几个连接时，TCP热连接比冷连接更加有效。<br />\nHTTP/2.0引入了ー个额外的步骤，它将HTTP/1.x消息分成帧并嵌入到流（stream）中</li>\n</ul>\n","categories":[{"name":"HTTP网络协议","path":"api/categories/HTTP网络协议.json"}],"tags":[{"name":"HTTP","path":"api/tags/HTTP.json"},{"name":"网络编程","path":"api/tags/网络编程.json"}]}