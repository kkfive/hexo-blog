{"title":"优雅使用JsDeliver加速文件","slug":"Hexo相关/优雅部署/优雅使用JsDeliver加速文件","date":"2020-05-28T00:53:00.000Z","updated":"2022-02-21T04:45:27.384Z","comments":true,"path":"api/articles/Hexo相关/优雅部署/优雅使用JsDeliver加速文件.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/bac8d3113ba958f1192a1abfd6e31ebc.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/f908ef5f6898f66f9e66463398fa6164.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/87a5106dae590cb9d4aa6373c969286a.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/1a7a301470e6564a118585aded6dc972.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/cb43fa11bd315ed8f5346ace0ea08b5c.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/6bfbc3a1f5e33fa07801acd99038edb4.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/27308378700d0eb953aa47751df86560.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/e5cb1fb4ee213a924436ef3008a82ecb.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d86cbae93878d06c323c6bcdc7603b4.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/a800e6fdd6ae614dca6e78237d24c0b7.png","https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d32f3d272157531ac383ba30ba5933b.png"],"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>看到好多人不会用GitHub+JsDeliver来加速自己的静态文件。遂决定水一篇，帮助一下弱者！</p>\n<h2 id=\"正式开始\"><a class=\"markdownIt-Anchor\" href=\"#正式开始\"></a> 正式开始</h2>\n<div class=\"snote quote\"><p class='p subtitle'>前期准备</p>\n<ol>\n<li>一个Github账号</li>\n<li>可以登录GitHub</li>\n<li>懂得如何向GitHub仓库push文件</li>\n</ol>\n</div>\n<p>关于Github仓库可以新建，也可以使用<code>&lt;用户名&gt;.github.io</code>这个仓库。这里我就新建一个仓库为例。</p>\n<ol>\n<li>\n<p>建立仓库</p>\n<p>仓库名称与描述看自己心情写即可。但仓库一定要<strong>公开</strong>，不能是私有。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/bac8d3113ba958f1192a1abfd6e31ebc.png\" alt=\"image-20200528080046828\" /></p>\n</li>\n<li>\n<p>上传文件</p>\n<p>这里我将上传一张图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/f908ef5f6898f66f9e66463398fa6164.png\" alt=\"image-20200528080846385\" /></p>\n<p>一张6m的图😄</p>\n</li>\n<li>\n<p>使用JSD引用。</p>\n<p>这里我并未发布版本，但依然可以引用！<em>（仓库水完这篇文章也就删了，因此不要试图访问这个链接哦！但是本文图片全用的这种方式。）</em></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png\" alt=\"image-20200528083046335\" /></p>\n</li>\n</ol>\n<h2 id=\"常见问题\"><a class=\"markdownIt-Anchor\" href=\"#常见问题\"></a> 常见问题</h2>\n<p>上边的方式非常简单粗暴，几乎就是上传即可。但是这种方式存在几个问题。在这部分将解答疑惑。</p>\n<h3 id=\"jsd的链接是什么\"><a class=\"markdownIt-Anchor\" href=\"#jsd的链接是什么\"></a> JSD的链接是什么</h3>\n<div class=\"snote idea yellow\"><p>JSD的链接是什么？</p></div>\n<p>在我上图的链接为<code>https://cdn.jsdelivr.net/gh/sviptzk/Jsd_test/79601805_p0.png</code>，但这并不意味着JSD只有这一种引用方式。</p>\n<ol>\n<li>\n<p>直接引用</p>\n<p>这种方式也就是上边的方式，格式为：<code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;/&lt;文件及路径&gt;</code></p>\n<p>例如：<code>https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png</code>代表用户名<code>blogimg</code>下的<code>HexoStaticFlle2</code>仓库中文件夹<code>/2020/05/28/</code>里的<code>911db4c3b95ed896b066b6e9aabae311.png</code>文件。</p>\n</li>\n<li>\n<p>分支及版本号</p>\n<p>分支与版本号加到仓库后变，用<code>@</code>符链接。格式为：<code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;@[分支/版本号]/&lt;文件及路径&gt;</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">分支名</th>\n<th style=\"text-align:center\">简述</th>\n<th style=\"text-align:center\">特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">普通分支</td>\n<td style=\"text-align:center\">即GitHub的分支，可以创建多个。默认为master</td>\n<td style=\"text-align:center\">按分支引用，如同按分支开发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>latest</code></td>\n<td style=\"text-align:center\">最后一次提交</td>\n<td style=\"text-align:center\">代表最后一次的提交，即每上传一个新文件，都可以用这个分支引用到。也就是不加版本号的默认情况。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">版本号</td>\n<td style=\"text-align:center\">即指定版本的内容，需配合版本发布</td>\n<td style=\"text-align:center\">已发布的版本不会受到仓库内容变化的影响</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"如何按版本号引用\"><a class=\"markdownIt-Anchor\" href=\"#如何按版本号引用\"></a> 如何按版本号引用</h3>\n<div class=\"snote idea yellow\"><p>如何按版本号引用</p></div>\n<p>使用版本号引用的优点在于：这个链接仅停留在发布版本号的时刻，无论仓库如何变化，这个版本号的文件都不会受到影响。同时可以避免JSD缓存问题。</p>\n<ol>\n<li>\n<p>发布版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/87a5106dae590cb9d4aa6373c969286a.png\" alt=\"image-20200528084631488\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/1a7a301470e6564a118585aded6dc972.png\" alt=\"image-20200528084647411\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/cb43fa11bd315ed8f5346ace0ea08b5c.png\" alt=\"image-20200528084720237\" /></p>\n</li>\n<li>\n<p>使用版本号引用</p>\n<p>刚刚发布的版本中只有一个图片，那么即使我在上传一张图片也是无法引用到的。</p>\n<p>例如我在向仓库push一张<code>1.jpg</code>，使用版本号方式引用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/6bfbc3a1f5e33fa07801acd99038edb4.png\" alt=\"image-20200528085930130\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/27308378700d0eb953aa47751df86560.png\" alt=\"image-20200528085944413\" /></p>\n</li>\n</ol>\n<h3 id=\"关于缓存问题\"><a class=\"markdownIt-Anchor\" href=\"#关于缓存问题\"></a> 关于缓存问题</h3>\n<div class=\"snote idea yellow\"><p>关于缓存问题</p></div>\n<p>这个问题向迷一样，根据我自己的实测不仅与分支有关系而且与文件名有关系。文件名为<code>*.min.*</code>或者是<code>*.*</code>，也就是带<code>min</code>的和不带<code>min</code>的。这里我以<code>index.min.css</code>和<code>index.css</code>为例。</p>\n<p>先来看看<code>index.css</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">分支</th>\n<th>首次上传</th>\n<th style=\"text-align:center\">能否及时更新</th>\n<th style=\"text-align:center\">缓存天数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>master</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">第一次push和第一次修改可以更新</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>latest</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">与master分支几乎一致</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">版本号</td>\n<td>发布版本后引用</td>\n<td style=\"text-align:center\">发布后及时更新</td>\n<td style=\"text-align:center\">每个版本独立</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/e5cb1fb4ee213a924436ef3008a82ecb.png\" alt=\"image-20200528091044063\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d86cbae93878d06c323c6bcdc7603b4.png\" alt=\"image-20200528091150570\" /></p>\n<p>在来看看<code>index.min.css</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">分支</th>\n<th>首次上传</th>\n<th style=\"text-align:center\">能否及时更新</th>\n<th style=\"text-align:center\">缓存天数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>master</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">第一次push可以更新</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>latest</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">第一次push和第一次修改可以更新</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">版本号</td>\n<td>发布版本后引用</td>\n<td style=\"text-align:center\">发布后及时更新</td>\n<td style=\"text-align:center\">每个版本独立</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/a800e6fdd6ae614dca6e78237d24c0b7.png\" alt=\"image-20200528091907595\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d32f3d272157531ac383ba30ba5933b.png\" alt=\"image-20200528092301901\" /></p>\n<p>因此总结下的使用方式就是：</p>\n<ul>\n<li>\n<p>图床（不需要修改文件）</p>\n<p>使用latest分支或者master分支即可。</p>\n</li>\n<li>\n<p>静态文件仓库（经常改动文件）</p>\n<p>建议使用版本号方式</p>\n</li>\n</ul>\n<h3 id=\"文件是否有限制\"><a class=\"markdownIt-Anchor\" href=\"#文件是否有限制\"></a> 文件是否有限制</h3>\n<div class=\"snote idea yellow\"><p>文件是否有限制？</p></div>\n<ol>\n<li>\n<p>先说说GitHub仓库</p>\n<p>GitHub公开仓库大小为100GB，是不是听起来很爽。并且可以创建无数个仓库哦！</p>\n<p>但是这100GB我们并不能全用完，甚至每个仓库不能超过1G。为什么？因为可能被封号。官方的解释是尽量不要传大文件，且仓库超过1G后会有人工审核仓库内容，如果发现用来做图床~~~😏。轻则删库，重则封号。因此为了安全建议在1G之前就换个仓库，反正可以创建无数个仓库嘛。</p>\n</li>\n<li>\n<p>文件大小</p>\n<p>Github单文件上传为100M，但是JSD加速的单文件大小为50M。因此也就意味着单文件大小为50MB。</p>\n</li>\n<li>\n<p>文件类型</p>\n<p>基本的图片视频静态文件应该都可以。</p>\n</li>\n</ol>\n<h3 id=\"查看仓库文件\"><a class=\"markdownIt-Anchor\" href=\"#查看仓库文件\"></a> 查看仓库文件</h3>\n<div class=\"snote idea yellow\"><p>查看仓库文件</p></div>\n<p>查看仓库文件有大小限制，因此当你的仓库文件大于50MB时，就无法通过JSD查看了，只能在GitHub仓库查看。</p>\n<p>JSD的查看仓库文件有两种方式：</p>\n<ol>\n<li>\n<p>查看仓库的版本号</p>\n<p>格式：<code>https://www.jsdelivr.com/package/gh/</code>+ 用户名 +<code>/</code>+ 仓库名</p>\n<p>例如：<code>https://www.jsdelivr.com/package/gh/sviptzk/HexoStaticFile</code></p>\n</li>\n<li>\n<p>查看仓库文件</p>\n<p>格式 <code>https://cdn.jsdelivr.net/gh/</code>+ 用户名 +<code>/</code>+ 仓库名 +<code>/</code> 仓库名[@分支]</p>\n<p>例如<code>仓库名@master</code>，默认为 master 分支<code>https://cdn.jsdelivr.net/gh/sviptzk/sviptzk.github.io@master/</code></p>\n</li>\n</ol>\n<h2 id=\"利用cloudfare\"><a class=\"markdownIt-Anchor\" href=\"#利用cloudfare\"></a> 利用CloudFare</h2>\n<p>这个没有啥难度，因此只提供思路。</p>\n<ol>\n<li>\n<p>将GitHub仓库开启Pages服务，并绑定自己的域名</p>\n</li>\n<li>\n<p>域名需要在CloudFare解析</p>\n</li>\n<li>\n<p>接下来就可以用你的域名访问仓库文件了。</p>\n<p>例如：<code>https://cdn.antmoe.com/1.jpg</code>。代表访问仓库根目录下的<code>1.jpg</code>文件</p>\n<p>上边只是一个示例，不要试图访问哦！</p>\n</li>\n</ol>\n<h2 id=\"其他问题\"><a class=\"markdownIt-Anchor\" href=\"#其他问题\"></a> 其他问题</h2>\n<ol>\n<li>上传文件后如果不能立即访问到，那么稍等片刻即可。</li>\n<li>JSD最近很不稳定，遇到突然不能打开很正常。</li>\n</ol>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>看到好多人不会用GitHub+JsDeliver来加速自己的静态文件。遂决定水一篇，帮助一下弱者！</p>\n<h2 id=\"正式开始\"><a class=\"markdownIt-Anchor\" href=\"#正式开始\"></a> 正式开始</h2>\n<div class=\"snote quote\"><p class='p subtitle'>前期准备</p>\n<ol>\n<li>一个Github账号</li>\n<li>可以登录GitHub</li>\n<li>懂得如何向GitHub仓库push文件</li>\n</ol>\n</div>\n<p>关于Github仓库可以新建，也可以使用<code>&lt;用户名&gt;.github.io</code>这个仓库。这里我就新建一个仓库为例。</p>\n<ol>\n<li>\n<p>建立仓库</p>\n<p>仓库名称与描述看自己心情写即可。但仓库一定要<strong>公开</strong>，不能是私有。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/bac8d3113ba958f1192a1abfd6e31ebc.png\" alt=\"image-20200528080046828\" /></p>\n</li>\n<li>\n<p>上传文件</p>\n<p>这里我将上传一张图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/f908ef5f6898f66f9e66463398fa6164.png\" alt=\"image-20200528080846385\" /></p>\n<p>一张6m的图😄</p>\n</li>\n<li>\n<p>使用JSD引用。</p>\n<p>这里我并未发布版本，但依然可以引用！<em>（仓库水完这篇文章也就删了，因此不要试图访问这个链接哦！但是本文图片全用的这种方式。）</em></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png\" alt=\"image-20200528083046335\" /></p>\n</li>\n</ol>\n<h2 id=\"常见问题\"><a class=\"markdownIt-Anchor\" href=\"#常见问题\"></a> 常见问题</h2>\n<p>上边的方式非常简单粗暴，几乎就是上传即可。但是这种方式存在几个问题。在这部分将解答疑惑。</p>\n<h3 id=\"jsd的链接是什么\"><a class=\"markdownIt-Anchor\" href=\"#jsd的链接是什么\"></a> JSD的链接是什么</h3>\n<div class=\"snote idea yellow\"><p>JSD的链接是什么？</p></div>\n<p>在我上图的链接为<code>https://cdn.jsdelivr.net/gh/sviptzk/Jsd_test/79601805_p0.png</code>，但这并不意味着JSD只有这一种引用方式。</p>\n<ol>\n<li>\n<p>直接引用</p>\n<p>这种方式也就是上边的方式，格式为：<code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;/&lt;文件及路径&gt;</code></p>\n<p>例如：<code>https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png</code>代表用户名<code>blogimg</code>下的<code>HexoStaticFlle2</code>仓库中文件夹<code>/2020/05/28/</code>里的<code>911db4c3b95ed896b066b6e9aabae311.png</code>文件。</p>\n</li>\n<li>\n<p>分支及版本号</p>\n<p>分支与版本号加到仓库后变，用<code>@</code>符链接。格式为：<code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;@[分支/版本号]/&lt;文件及路径&gt;</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">分支名</th>\n<th style=\"text-align:center\">简述</th>\n<th style=\"text-align:center\">特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">普通分支</td>\n<td style=\"text-align:center\">即GitHub的分支，可以创建多个。默认为master</td>\n<td style=\"text-align:center\">按分支引用，如同按分支开发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>latest</code></td>\n<td style=\"text-align:center\">最后一次提交</td>\n<td style=\"text-align:center\">代表最后一次的提交，即每上传一个新文件，都可以用这个分支引用到。也就是不加版本号的默认情况。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">版本号</td>\n<td style=\"text-align:center\">即指定版本的内容，需配合版本发布</td>\n<td style=\"text-align:center\">已发布的版本不会受到仓库内容变化的影响</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"如何按版本号引用\"><a class=\"markdownIt-Anchor\" href=\"#如何按版本号引用\"></a> 如何按版本号引用</h3>\n<div class=\"snote idea yellow\"><p>如何按版本号引用</p></div>\n<p>使用版本号引用的优点在于：这个链接仅停留在发布版本号的时刻，无论仓库如何变化，这个版本号的文件都不会受到影响。同时可以避免JSD缓存问题。</p>\n<ol>\n<li>\n<p>发布版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/87a5106dae590cb9d4aa6373c969286a.png\" alt=\"image-20200528084631488\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/1a7a301470e6564a118585aded6dc972.png\" alt=\"image-20200528084647411\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/cb43fa11bd315ed8f5346ace0ea08b5c.png\" alt=\"image-20200528084720237\" /></p>\n</li>\n<li>\n<p>使用版本号引用</p>\n<p>刚刚发布的版本中只有一个图片，那么即使我在上传一张图片也是无法引用到的。</p>\n<p>例如我在向仓库push一张<code>1.jpg</code>，使用版本号方式引用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/6bfbc3a1f5e33fa07801acd99038edb4.png\" alt=\"image-20200528085930130\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/27308378700d0eb953aa47751df86560.png\" alt=\"image-20200528085944413\" /></p>\n</li>\n</ol>\n<h3 id=\"关于缓存问题\"><a class=\"markdownIt-Anchor\" href=\"#关于缓存问题\"></a> 关于缓存问题</h3>\n<div class=\"snote idea yellow\"><p>关于缓存问题</p></div>\n<p>这个问题向迷一样，根据我自己的实测不仅与分支有关系而且与文件名有关系。文件名为<code>*.min.*</code>或者是<code>*.*</code>，也就是带<code>min</code>的和不带<code>min</code>的。这里我以<code>index.min.css</code>和<code>index.css</code>为例。</p>\n<p>先来看看<code>index.css</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">分支</th>\n<th>首次上传</th>\n<th style=\"text-align:center\">能否及时更新</th>\n<th style=\"text-align:center\">缓存天数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>master</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">第一次push和第一次修改可以更新</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>latest</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">与master分支几乎一致</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">版本号</td>\n<td>发布版本后引用</td>\n<td style=\"text-align:center\">发布后及时更新</td>\n<td style=\"text-align:center\">每个版本独立</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/e5cb1fb4ee213a924436ef3008a82ecb.png\" alt=\"image-20200528091044063\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d86cbae93878d06c323c6bcdc7603b4.png\" alt=\"image-20200528091150570\" /></p>\n<p>在来看看<code>index.min.css</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">分支</th>\n<th>首次上传</th>\n<th style=\"text-align:center\">能否及时更新</th>\n<th style=\"text-align:center\">缓存天数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>master</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">第一次push可以更新</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>latest</code></td>\n<td>可以被引用</td>\n<td style=\"text-align:center\">第一次push和第一次修改可以更新</td>\n<td style=\"text-align:center\">可能1天</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">版本号</td>\n<td>发布版本后引用</td>\n<td style=\"text-align:center\">发布后及时更新</td>\n<td style=\"text-align:center\">每个版本独立</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/a800e6fdd6ae614dca6e78237d24c0b7.png\" alt=\"image-20200528091907595\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/05/28/5d32f3d272157531ac383ba30ba5933b.png\" alt=\"image-20200528092301901\" /></p>\n<p>因此总结下的使用方式就是：</p>\n<ul>\n<li>\n<p>图床（不需要修改文件）</p>\n<p>使用latest分支或者master分支即可。</p>\n</li>\n<li>\n<p>静态文件仓库（经常改动文件）</p>\n<p>建议使用版本号方式</p>\n</li>\n</ul>\n<h3 id=\"文件是否有限制\"><a class=\"markdownIt-Anchor\" href=\"#文件是否有限制\"></a> 文件是否有限制</h3>\n<div class=\"snote idea yellow\"><p>文件是否有限制？</p></div>\n<ol>\n<li>\n<p>先说说GitHub仓库</p>\n<p>GitHub公开仓库大小为100GB，是不是听起来很爽。并且可以创建无数个仓库哦！</p>\n<p>但是这100GB我们并不能全用完，甚至每个仓库不能超过1G。为什么？因为可能被封号。官方的解释是尽量不要传大文件，且仓库超过1G后会有人工审核仓库内容，如果发现用来做图床~~~😏。轻则删库，重则封号。因此为了安全建议在1G之前就换个仓库，反正可以创建无数个仓库嘛。</p>\n</li>\n<li>\n<p>文件大小</p>\n<p>Github单文件上传为100M，但是JSD加速的单文件大小为50M。因此也就意味着单文件大小为50MB。</p>\n</li>\n<li>\n<p>文件类型</p>\n<p>基本的图片视频静态文件应该都可以。</p>\n</li>\n</ol>\n<h3 id=\"查看仓库文件\"><a class=\"markdownIt-Anchor\" href=\"#查看仓库文件\"></a> 查看仓库文件</h3>\n<div class=\"snote idea yellow\"><p>查看仓库文件</p></div>\n<p>查看仓库文件有大小限制，因此当你的仓库文件大于50MB时，就无法通过JSD查看了，只能在GitHub仓库查看。</p>\n<p>JSD的查看仓库文件有两种方式：</p>\n<ol>\n<li>\n<p>查看仓库的版本号</p>\n<p>格式：<code>https://www.jsdelivr.com/package/gh/</code>+ 用户名 +<code>/</code>+ 仓库名</p>\n<p>例如：<code>https://www.jsdelivr.com/package/gh/sviptzk/HexoStaticFile</code></p>\n</li>\n<li>\n<p>查看仓库文件</p>\n<p>格式 <code>https://cdn.jsdelivr.net/gh/</code>+ 用户名 +<code>/</code>+ 仓库名 +<code>/</code> 仓库名[@分支]</p>\n<p>例如<code>仓库名@master</code>，默认为 master 分支<code>https://cdn.jsdelivr.net/gh/sviptzk/sviptzk.github.io@master/</code></p>\n</li>\n</ol>\n<h2 id=\"利用cloudfare\"><a class=\"markdownIt-Anchor\" href=\"#利用cloudfare\"></a> 利用CloudFare</h2>\n<p>这个没有啥难度，因此只提供思路。</p>\n<ol>\n<li>\n<p>将GitHub仓库开启Pages服务，并绑定自己的域名</p>\n</li>\n<li>\n<p>域名需要在CloudFare解析</p>\n</li>\n<li>\n<p>接下来就可以用你的域名访问仓库文件了。</p>\n<p>例如：<code>https://cdn.antmoe.com/1.jpg</code>。代表访问仓库根目录下的<code>1.jpg</code>文件</p>\n<p>上边只是一个示例，不要试图访问哦！</p>\n</li>\n</ol>\n<h2 id=\"其他问题\"><a class=\"markdownIt-Anchor\" href=\"#其他问题\"></a> 其他问题</h2>\n<ol>\n<li>上传文件后如果不能立即访问到，那么稍等片刻即可。</li>\n<li>JSD最近很不稳定，遇到突然不能打开很正常。</li>\n</ol>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"优雅部署","path":"api/categories/优雅部署.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"配置环境","path":"api/tags/配置环境.json"}]}