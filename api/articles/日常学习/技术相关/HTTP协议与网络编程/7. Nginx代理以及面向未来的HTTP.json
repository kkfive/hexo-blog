{"title":"Nginx代理以及面向未来的HTTP","slug":"日常学习/技术相关/HTTP协议与网络编程/7. Nginx代理以及面向未来的HTTP","date":"2020-08-14T07:56:01.000Z","updated":"2022-02-21T05:08:50.398Z","comments":true,"path":"api/articles/日常学习/技术相关/HTTP协议与网络编程/7. Nginx代理以及面向未来的HTTP.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/08/14/44f9441c0b6da.png","https://files.alexhchu.com/2020/08/14/c953b9bb64db9.png","https://files.alexhchu.com/2020/08/14/3d10fe62d535a.png","https://files.alexhchu.com/2020/08/15/a70172b9c6a51.png","https://files.alexhchu.com/2020/08/15/1ae04786cca4d.png","https://files.alexhchu.com/2020/08/15/da5054bacc036.png"],"content":"<h2 id=\"windows下使用nginx\"><a class=\"markdownIt-Anchor\" href=\"#windows下使用nginx\"></a> windows下使用nginx</h2>\n<p>通过<a href=\"http://nginx.org/en/download.html\">官网</a>下载Nginx，将其解压。在命令行内输入<code>./nginx.exe</code>即可启动。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/14/44f9441c0b6da.png\" alt=\"image-20200814195306631\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/14/c953b9bb64db9.png\" alt=\"image-20200814195331140\" /></p>\n<h2 id=\"基础代理配置\"><a class=\"markdownIt-Anchor\" href=\"#基础代理配置\"></a> 基础代理配置</h2>\n<blockquote>\n<p>如果启动的nginx进程过多，可能会导致代理不生效！</p>\n<p>通过<code>taskkill /IM nginx.exe /F</code>命令可以清除所有nginx进程。</p>\n</blockquote>\n<ol>\n<li>\n<p>通过<code>include server/*.conf</code>实现为单独一个站点设置配置文件</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">http</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">include</span> <span class=\"token keyword\">server</span><span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>conf\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/14/3d10fe62d535a.png\" alt=\"image-20200814195736125\" /></p>\n<p>此配置代表将server文件下的所有conf文件导入。</p>\n</li>\n<li>\n<p>最简单的代理</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 修改代理头为请求的地址</span>\n        <span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>以上配置表示 当访问test.com时会映射到本地8888端口。<code>$host</code>表示请求的地址。</p>\n</li>\n</ol>\n<h2 id=\"代理缓存\"><a class=\"markdownIt-Anchor\" href=\"#代理缓存\"></a> 代理缓存</h2>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">proxy_cache_path</span> cache levels<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span> keys_zone<span class=\"token operator\">=</span>my_cache<span class=\"token punctuation\">:</span><span class=\"token number\">10</span>m<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span>        <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 修改代理头为请求的地址</span>\n        <span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 设置缓存(名字与上方对应)</span>\n        <span class=\"token keyword\">proxy_cache</span> my_cache<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Vary\">Vary</a>对不同请求头设置缓存。</p>\n<h2 id=\"https\"><a class=\"markdownIt-Anchor\" href=\"#https\"></a> HTTPS</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/a70172b9c6a51.png\" alt=\"image-20200815083641945\" /></p>\n<p>证书生成命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">openssl req -x509 -newkey rsa:2048 -nodes -sha256 -keyout localhost-privkey.pem -out localhost-cert.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>通过nginx部署https服务</li>\n</ul>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span>        <span class=\"token keyword\">ssl</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">ssl</span> on<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">ssl_certificate_key</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>certs<span class=\"token operator\">/</span>localhost<span class=\"token operator\">-</span>privkey<span class=\"token punctuation\">.</span>pem<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">ssl_certificate</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>certs<span class=\"token operator\">/</span>localhost<span class=\"token operator\">-</span>cert<span class=\"token punctuation\">.</span>pem<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 修改代理头为请求的地址</span>\n        <span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中将证书放到了根目录下<code>certs</code>文件夹下。</p>\n<ul>\n<li>\n<p>访问自动跳转https</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span> default_server<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span> default_server<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">302</span> <span class=\"token keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token variable\">$server_name</span><span class=\"token variable\">$request_url</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"http2的优势\"><a class=\"markdownIt-Anchor\" href=\"#http2的优势\"></a> HTTP2的优势</h2>\n<ul>\n<li>\n<p>信道复用</p>\n</li>\n<li>\n<p>分帧传输</p>\n</li>\n<li>\n<p>Server Push</p>\n<p>HTTP1.1中</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/1ae04786cca4d.png\" alt=\"image-20200815090204244\" /></p>\n<p>HTTP2中</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/da5054bacc036.png\" alt=\"image-20200815090355014\" /></p>\n</li>\n</ul>\n<h2 id=\"通过nginx设置http2\"><a class=\"markdownIt-Anchor\" href=\"#通过nginx设置http2\"></a> 通过nginx设置HTTP2</h2>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span>        <span class=\"token keyword\">ssl</span> http2<span class=\"token punctuation\">;</span>\n    http2_push_preload on<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>http2必须在https的基础上开启。</p>\n","more":"<h2 id=\"windows下使用nginx\"><a class=\"markdownIt-Anchor\" href=\"#windows下使用nginx\"></a> windows下使用nginx</h2>\n<p>通过<a href=\"http://nginx.org/en/download.html\">官网</a>下载Nginx，将其解压。在命令行内输入<code>./nginx.exe</code>即可启动。</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/14/44f9441c0b6da.png\" alt=\"image-20200814195306631\" /></p>\n<p><img src=\"https://files.alexhchu.com/2020/08/14/c953b9bb64db9.png\" alt=\"image-20200814195331140\" /></p>\n<h2 id=\"基础代理配置\"><a class=\"markdownIt-Anchor\" href=\"#基础代理配置\"></a> 基础代理配置</h2>\n<blockquote>\n<p>如果启动的nginx进程过多，可能会导致代理不生效！</p>\n<p>通过<code>taskkill /IM nginx.exe /F</code>命令可以清除所有nginx进程。</p>\n</blockquote>\n<ol>\n<li>\n<p>通过<code>include server/*.conf</code>实现为单独一个站点设置配置文件</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">http</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">include</span> <span class=\"token keyword\">server</span><span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>conf\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/14/3d10fe62d535a.png\" alt=\"image-20200814195736125\" /></p>\n<p>此配置代表将server文件下的所有conf文件导入。</p>\n</li>\n<li>\n<p>最简单的代理</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 修改代理头为请求的地址</span>\n        <span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>以上配置表示 当访问test.com时会映射到本地8888端口。<code>$host</code>表示请求的地址。</p>\n</li>\n</ol>\n<h2 id=\"代理缓存\"><a class=\"markdownIt-Anchor\" href=\"#代理缓存\"></a> 代理缓存</h2>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">proxy_cache_path</span> cache levels<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span> keys_zone<span class=\"token operator\">=</span>my_cache<span class=\"token punctuation\">:</span><span class=\"token number\">10</span>m<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span>        <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 修改代理头为请求的地址</span>\n        <span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 设置缓存(名字与上方对应)</span>\n        <span class=\"token keyword\">proxy_cache</span> my_cache<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Vary\">Vary</a>对不同请求头设置缓存。</p>\n<h2 id=\"https\"><a class=\"markdownIt-Anchor\" href=\"#https\"></a> HTTPS</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/a70172b9c6a51.png\" alt=\"image-20200815083641945\" /></p>\n<p>证书生成命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">openssl req -x509 -newkey rsa:2048 -nodes -sha256 -keyout localhost-privkey.pem -out localhost-cert.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>通过nginx部署https服务</li>\n</ul>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span>        <span class=\"token keyword\">ssl</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">ssl</span> on<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">ssl_certificate_key</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>certs<span class=\"token operator\">/</span>localhost<span class=\"token operator\">-</span>privkey<span class=\"token punctuation\">.</span>pem<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">ssl_certificate</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>certs<span class=\"token operator\">/</span>localhost<span class=\"token operator\">-</span>cert<span class=\"token punctuation\">.</span>pem<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\"># 修改代理头为请求的地址</span>\n        <span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中将证书放到了根目录下<code>certs</code>文件夹下。</p>\n<ul>\n<li>\n<p>访问自动跳转https</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span> default_server<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span> default_server<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> test<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">302</span> <span class=\"token keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token variable\">$server_name</span><span class=\"token variable\">$request_url</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"http2的优势\"><a class=\"markdownIt-Anchor\" href=\"#http2的优势\"></a> HTTP2的优势</h2>\n<ul>\n<li>\n<p>信道复用</p>\n</li>\n<li>\n<p>分帧传输</p>\n</li>\n<li>\n<p>Server Push</p>\n<p>HTTP1.1中</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/1ae04786cca4d.png\" alt=\"image-20200815090204244\" /></p>\n<p>HTTP2中</p>\n<p><img src=\"https://files.alexhchu.com/2020/08/15/da5054bacc036.png\" alt=\"image-20200815090355014\" /></p>\n</li>\n</ul>\n<h2 id=\"通过nginx设置http2\"><a class=\"markdownIt-Anchor\" href=\"#通过nginx设置http2\"></a> 通过nginx设置HTTP2</h2>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">listen</span>        <span class=\"token keyword\">ssl</span> http2<span class=\"token punctuation\">;</span>\n    http2_push_preload on<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>http2必须在https的基础上开启。</p>\n","categories":[{"name":"HTTP网络协议","path":"api/categories/HTTP网络协议.json"}],"tags":[{"name":"HTTP","path":"api/tags/HTTP.json"},{"name":"网络编程","path":"api/tags/网络编程.json"}]}