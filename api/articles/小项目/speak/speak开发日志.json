{"title":"Speak开坑记录","slug":"小项目/speak/speak开发日志","date":"2020-09-21T09:20:25.000Z","updated":"2022-02-21T07:18:57.041Z","comments":true,"path":"api/articles/小项目/speak/speak开发日志.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/09/21/59c7e63d3e50c.png","https://file.acs.pw/picGo/2021/3/22/fec9a52c7561cc957c9d9ca42a5a0ba0.jpg","https://file.acs.pw/picGo/2021/3/22/53011f6726a7d81c99cae603f0964f40.png"],"content":"<h2 id=\"项目说明\"><a class=\"markdownIt-Anchor\" href=\"#项目说明\"></a> 项目说明</h2>\n<p>一个基于Gitee的“说说”，通过在gitee仓库中的issue进行说说的展示。项目灵感来自于：<a href=\"https://tomotoes.com/blog/weibo/\">微博</a></p>\n<p><img src=\"https://files.alexhchu.com/2020/09/21/59c7e63d3e50c.png\" alt=\"image-20200921161543706\" /></p>\n<h2 id=\"开坑记录\"><a class=\"markdownIt-Anchor\" href=\"#开坑记录\"></a> 开坑记录</h2>\n<blockquote>\n<p>项目最早写于2020年8月9日，但当时的做法是通过外部载入各种依赖（JQuery、marked等）进行的，虽然中间还有一次试图将其并入js内部，但采用的方式仅仅是通过jQuery的getScript方式，由于同时间所用Hexo博客主题作者更新了pjax，导致出现了一些出人意料地错误。直到9月20日，最终决定通过webpack打包，将其放在一起并放弃jQuery（为了减少体积）。</p>\n<ul>\n<li>2021年3月22日，通过vue重构整个项目</li>\n</ul>\n</blockquote>\n<h2 id=\"3x\"><a class=\"markdownIt-Anchor\" href=\"#3x\"></a> 3.x</h2>\n<blockquote>\n<p>预览地址： <a href=\"https://www.antmoe.com/speak/\" target=\"_blank\">https://www.antmoe.com/speak/</a></p>\n</blockquote>\n<p>关于数据源的几个问题：</p>\n<ol>\n<li>\n<p>为什么选择Gitee/GitHub作为数据源，而不是直接自建？</p>\n<p>选择Gitee/GitHub等现有平台主要因为这样就不需要考虑写身份验证，防刷机制等问题。只需要考虑将其数据读取并存储即可。</p>\n</li>\n<li>\n<p>为什么选择MongoDB，而不是MySQL？</p>\n<p>首先是因为MongoDB官网提供免费的512m的存储，其次身为前端程序员，MySQL这种关系型数据库的玩法早已万光。</p>\n</li>\n<li>\n<p>为什么将Gitee/GitHub数据存储到数据库而不是在线获取？</p>\n<p>Gitee/GitHub的API在未认证的情况下每小时只可以请求60次（GitHub未验证），这60次包含任何请求，为了避开这个限制，只能将数据存储到其他数据库。</p>\n</li>\n<li>\n<p>API怎么搭建？</p>\n<p>api使用koa2，因此你可以自由选择部署到服务器亦或者是vercel。</p>\n</li>\n</ol>\n<h3 id=\"33\"><a class=\"markdownIt-Anchor\" href=\"#33\"></a> 3.3</h3>\n<blockquote>\n<p>由于vercel部分情况下过于龟速，因此添加了代理功能，目前试用CF进行代理。用户可以根据自身情况决定试用何种CDN代理。</p>\n</blockquote>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/22/fec9a52c7561cc957c9d9ca42a5a0ba0.jpg\" alt=\"ispeak3.3流程图\" /></p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/22/53011f6726a7d81c99cae603f0964f40.png\" alt=\"\" /></p>\n<blockquote>\n<p>此浏览器插件修改自handsome时光机插件。</p>\n</blockquote>\n<h3 id=\"32\"><a class=\"markdownIt-Anchor\" href=\"#32\"></a> 3.2</h3>\n<blockquote>\n<p>弃用爬虫项目，使用基于vercel部署的api服务获取数据。</p>\n</blockquote>\n<h3 id=\"31\"><a class=\"markdownIt-Anchor\" href=\"#31\"></a> 3.1</h3>\n<blockquote>\n<p>改变3.0版本一次性加载全部数据为分批加载。</p>\n</blockquote>\n<h3 id=\"30\"><a class=\"markdownIt-Anchor\" href=\"#30\"></a> 3.0</h3>\n<blockquote>\n<p>使用vue2.0重构项目，数据来源：爬虫项目爬取issue并发布到npm。</p>\n</blockquote>\n<h2 id=\"3x之前\"><a class=\"markdownIt-Anchor\" href=\"#3x之前\"></a> 3.x之前</h2>\n<blockquote>\n<p>好像已经不能用了qwq</p>\n</blockquote>\n<h3 id=\"基本架构\"><a class=\"markdownIt-Anchor\" href=\"#基本架构\"></a> 基本架构</h3>\n<p>为了方便使用，采用了类似jQuery的写法。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 导入代码高亮模块</span>\n<span class=\"token keyword\">const</span> hljs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./js/highlight.min\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// // 导入marked解析模块</span>\n<span class=\"token keyword\">const</span> marked <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./js/marked.min\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">window<span class=\"token punctuation\">,</span> undefiend</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">Speak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 传入一个对象</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Speak<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>init</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        constructor<span class=\"token operator\">:</span> Speak<span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// 调用初始化方法</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    Speak<span class=\"token punctuation\">.</span>extend <span class=\"token operator\">=</span> <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">extend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 插入元素方法</span>\n    Speak<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 对象方法</span>\n    <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        s<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span>Speak <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其好处就是在使用时只需要实例化Speak对象即可完成一切。</p>\n<h3 id=\"第一个问题原生js发送异步请求\"><a class=\"markdownIt-Anchor\" href=\"#第一个问题原生js发送异步请求\"></a> 第一个问题：原生JS发送异步请求</h3>\n<p>由于一开始的写法是获取与创建是分开写的，即获取后返回一个promise对象，通过then方法在将获取到的数据进行创建（渲染）。因此放弃jQuery的Ajax方法后也要返回一个Promise对象，这样才能以最小的成本兼容以前的写法。</p>\n<blockquote>\n<p>参数<code>_this</code>调用时传入this</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">getSpeak</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span>\n            <span class=\"token string\">\"https://gitee.com/api/v5/repos/\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>owner <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>repo <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"/issues?state=open&amp;sort=created&amp;direction=desc&amp;page=\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>page <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"&amp;per_page=\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>per_page <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"&amp;creator=\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 创建核心对象</span>\n        <span class=\"token keyword\">let</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 发送请求</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 监听请求</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 如果成功则执行</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(2|3)\\d&#123;2&#125;$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span>\n                    _this<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    _this<span class=\"token punctuation\">.</span>total_count <span class=\"token operator\">=</span> xhr<span class=\"token punctuation\">.</span><span class=\"token function\">getResponseHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_count\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    _this<span class=\"token punctuation\">.</span>total_page <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">.</span>total_count <span class=\"token operator\">/</span> _this<span class=\"token punctuation\">.</span>per_page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        date <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>comments <span class=\"token operator\">=</span> date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"comments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>labels <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">.</span><span class=\"token function\">getLabels</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"labels\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>created_at <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"created_at\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>html_url <span class=\"token operator\">=</span> date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"html_url\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            _this<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token comment\">// 失败执行</span>\n                <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>statusText<span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 发送请求数据</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>调用API后，将返回的数据再次进行提取与处理即（<code>getBody</code>、<code>getLabels</code>等方法），并将结果放入一个临时的对象，将其对象添加到数组。等渲染时遍历此数组即可。因此这个数组大概是这样的：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 内容</span>\n        comments<span class=\"token operator\">:</span><span class=\"token string\">'内容'</span><span class=\"token punctuation\">,</span>\n        labels<span class=\"token operator\">:</span><span class=\"token string\">'标签'</span><span class=\"token punctuation\">,</span>\n        created_at<span class=\"token operator\">:</span><span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span>\n        html_url<span class=\"token operator\">:</span><span class=\"token string\">'当前issue的地址'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 内容</span>\n        comments<span class=\"token operator\">:</span><span class=\"token string\">'内容'</span><span class=\"token punctuation\">,</span>\n        labels<span class=\"token operator\">:</span><span class=\"token string\">'标签'</span><span class=\"token punctuation\">,</span>\n        created_at<span class=\"token operator\">:</span><span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span>\n        html_url<span class=\"token operator\">:</span><span class=\"token string\">'当前issue的地址'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"第二个问题创建元素\"><a class=\"markdownIt-Anchor\" href=\"#第二个问题创建元素\"></a> 第二个问题：创建元素</h3>\n<p>jQuery的工厂函数过于好用，但为了减少体积，不得不抛弃。因此便遇到了另一个问题，dom元素的操作。</p>\n<ol>\n<li>\n<p>由于gitee的图片是带有防盗链的，因此需要在头部插入一个标签meta标签，表示<code>no-referrer</code>才可以正常使用其防盗链图片。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">noRefer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"meta\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"referrer\"</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> <span class=\"token string\">\"no-referrer\"</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>外部CSS的嵌入</p>\n<p>由于使用了打包工具，只需要通过<code>require</code>进行加载即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">loadingCss</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./css/loading.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token function-variable function\">speakCss</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./css/Speak.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>按钮的插入</p>\n<p>起初并不打算插入翻页按钮，因为嵌入到博客后，每个博客都会有自己的风格及按钮样式，但又为了初始化及使用方便，因此还是决定添加按钮和页码显示的label。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">createBtn</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'is-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>prevBtn<span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>nextBtn<span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>pageLabel<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>关于<code>insertAdjacentHTML</code>方法可参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/insertAdjacentHTML\">insertAdjacentHTML</a></p>\n</li>\n</ol>\n<h3 id=\"第三个问题代码高亮插件highlight过大\"><a class=\"markdownIt-Anchor\" href=\"#第三个问题代码高亮插件highlight过大\"></a> 第三个问题：代码高亮插件highlight过大</h3>\n<p><code>highlight.min.js</code>文件已经100kb大小了，加上<code>marked.min.js</code>34kb，导致最后生成的文件大小150kb+。</p>\n<blockquote>\n<p>不过没办法，目前无解。</p>\n</blockquote>\n<h2 id=\"如何使用\"><a class=\"markdownIt-Anchor\" href=\"#如何使用\"></a> 如何使用</h2>\n<p>使用很简单，只需要一个class为<code>container</code>的容器和一个实例化的Speak对象即可。</p>\n<blockquote>\n<p>由于基于某个主题开发，部分样式可能存在细微差别。</p>\n</blockquote>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>is-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">&#123;</span>\n            nickname<span class=\"token operator\">:</span> <span class=\"token string\">'🦄Dreamy.TZK'</span><span class=\"token punctuation\">,</span>\n            per_page<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n            owner<span class=\"token operator\">:</span> <span class=\"token string\">\"antmoe\"</span><span class=\"token punctuation\">,</span>\n            repo<span class=\"token operator\">:</span> <span class=\"token string\">\"xiaokang.me\"</span><span class=\"token punctuation\">,</span>\n            defaultLabelName<span class=\"token operator\">:</span> <span class=\"token string\">\"Default\"</span><span class=\"token punctuation\">,</span>\n            defaultLabelColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#ffc107\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// highlight样式</span>\n            highlightcss<span class=\"token operator\">:</span>\n            <span class=\"token string\">\"https://cdn.bootcdn.net/ajax/libs/highlight.js/10.1.1/styles/monokai-sublime.min.css\"</span><span class=\"token punctuation\">,</span>\n            emojiLabel<span class=\"token operator\">:</span>\n            <span class=\"token punctuation\">&#123;</span>\n                Coder<span class=\"token operator\">:</span> <span class=\"token string\">\"🎯\"</span><span class=\"token punctuation\">,</span>\n                日常<span class=\"token operator\">:</span> <span class=\"token string\">\"💬\"</span><span class=\"token punctuation\">,</span>\n                Whoiam<span class=\"token operator\">:</span> <span class=\"token string\">'😶'</span><span class=\"token punctuation\">,</span>\n                想法<span class=\"token operator\">:</span> <span class=\"token string\">\"💫\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">TODO</span><span class=\"token operator\">:</span> <span class=\"token string\">\"🚧\"</span><span class=\"token punctuation\">,</span>\n                随便说说<span class=\"token operator\">:</span> <span class=\"token string\">\"🎈\"</span><span class=\"token punctuation\">,</span>\n                测试<span class=\"token operator\">:</span> <span class=\"token string\">'👻'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            prevBtn<span class=\"token operator\">:</span><span class=\"token string\">'&lt;a class=\"btn-beautify button--animated left larger prev red\" href=\"#\" title=\"上一页\" style=\"display:none;float:left\" data-pjax-state=\"\">&lt;i class=\"far fa-hand-point-left fa-fw\">&lt;/i> 上一页&lt;/a>'</span><span class=\"token punctuation\">,</span>\n            nextBtn<span class=\"token operator\">:</span><span class=\"token string\">'&lt;a class=\"btn-beautify button--animated larger next red\" href=\"#\" title=\"下一页\" style=\"float: right; display: block;\" data-pjax-state=\"\">&lt;i class=\"far fa-hand-point-right fa-fw\">&lt;/i> 下一页&lt;/a>'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>DEMO：<a href=\"https://www.antmoe.com/speak\">Speak</a></p>\n","more":"<h2 id=\"项目说明\"><a class=\"markdownIt-Anchor\" href=\"#项目说明\"></a> 项目说明</h2>\n<p>一个基于Gitee的“说说”，通过在gitee仓库中的issue进行说说的展示。项目灵感来自于：<a href=\"https://tomotoes.com/blog/weibo/\">微博</a></p>\n<p><img src=\"https://files.alexhchu.com/2020/09/21/59c7e63d3e50c.png\" alt=\"image-20200921161543706\" /></p>\n<h2 id=\"开坑记录\"><a class=\"markdownIt-Anchor\" href=\"#开坑记录\"></a> 开坑记录</h2>\n<blockquote>\n<p>项目最早写于2020年8月9日，但当时的做法是通过外部载入各种依赖（JQuery、marked等）进行的，虽然中间还有一次试图将其并入js内部，但采用的方式仅仅是通过jQuery的getScript方式，由于同时间所用Hexo博客主题作者更新了pjax，导致出现了一些出人意料地错误。直到9月20日，最终决定通过webpack打包，将其放在一起并放弃jQuery（为了减少体积）。</p>\n<ul>\n<li>2021年3月22日，通过vue重构整个项目</li>\n</ul>\n</blockquote>\n<h2 id=\"3x\"><a class=\"markdownIt-Anchor\" href=\"#3x\"></a> 3.x</h2>\n<blockquote>\n<p>预览地址： <a href=\"https://www.antmoe.com/speak/\" target=\"_blank\">https://www.antmoe.com/speak/</a></p>\n</blockquote>\n<p>关于数据源的几个问题：</p>\n<ol>\n<li>\n<p>为什么选择Gitee/GitHub作为数据源，而不是直接自建？</p>\n<p>选择Gitee/GitHub等现有平台主要因为这样就不需要考虑写身份验证，防刷机制等问题。只需要考虑将其数据读取并存储即可。</p>\n</li>\n<li>\n<p>为什么选择MongoDB，而不是MySQL？</p>\n<p>首先是因为MongoDB官网提供免费的512m的存储，其次身为前端程序员，MySQL这种关系型数据库的玩法早已万光。</p>\n</li>\n<li>\n<p>为什么将Gitee/GitHub数据存储到数据库而不是在线获取？</p>\n<p>Gitee/GitHub的API在未认证的情况下每小时只可以请求60次（GitHub未验证），这60次包含任何请求，为了避开这个限制，只能将数据存储到其他数据库。</p>\n</li>\n<li>\n<p>API怎么搭建？</p>\n<p>api使用koa2，因此你可以自由选择部署到服务器亦或者是vercel。</p>\n</li>\n</ol>\n<h3 id=\"33\"><a class=\"markdownIt-Anchor\" href=\"#33\"></a> 3.3</h3>\n<blockquote>\n<p>由于vercel部分情况下过于龟速，因此添加了代理功能，目前试用CF进行代理。用户可以根据自身情况决定试用何种CDN代理。</p>\n</blockquote>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/22/fec9a52c7561cc957c9d9ca42a5a0ba0.jpg\" alt=\"ispeak3.3流程图\" /></p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/22/53011f6726a7d81c99cae603f0964f40.png\" alt=\"\" /></p>\n<blockquote>\n<p>此浏览器插件修改自handsome时光机插件。</p>\n</blockquote>\n<h3 id=\"32\"><a class=\"markdownIt-Anchor\" href=\"#32\"></a> 3.2</h3>\n<blockquote>\n<p>弃用爬虫项目，使用基于vercel部署的api服务获取数据。</p>\n</blockquote>\n<h3 id=\"31\"><a class=\"markdownIt-Anchor\" href=\"#31\"></a> 3.1</h3>\n<blockquote>\n<p>改变3.0版本一次性加载全部数据为分批加载。</p>\n</blockquote>\n<h3 id=\"30\"><a class=\"markdownIt-Anchor\" href=\"#30\"></a> 3.0</h3>\n<blockquote>\n<p>使用vue2.0重构项目，数据来源：爬虫项目爬取issue并发布到npm。</p>\n</blockquote>\n<h2 id=\"3x之前\"><a class=\"markdownIt-Anchor\" href=\"#3x之前\"></a> 3.x之前</h2>\n<blockquote>\n<p>好像已经不能用了qwq</p>\n</blockquote>\n<h3 id=\"基本架构\"><a class=\"markdownIt-Anchor\" href=\"#基本架构\"></a> 基本架构</h3>\n<p>为了方便使用，采用了类似jQuery的写法。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 导入代码高亮模块</span>\n<span class=\"token keyword\">const</span> hljs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./js/highlight.min\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// // 导入marked解析模块</span>\n<span class=\"token keyword\">const</span> marked <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./js/marked.min\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">window<span class=\"token punctuation\">,</span> undefiend</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">Speak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 传入一个对象</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Speak<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>init</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        constructor<span class=\"token operator\">:</span> Speak<span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// 调用初始化方法</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    Speak<span class=\"token punctuation\">.</span>extend <span class=\"token operator\">=</span> <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">extend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 插入元素方法</span>\n    Speak<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 对象方法</span>\n    <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        s<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span>Speak <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其好处就是在使用时只需要实例化Speak对象即可完成一切。</p>\n<h3 id=\"第一个问题原生js发送异步请求\"><a class=\"markdownIt-Anchor\" href=\"#第一个问题原生js发送异步请求\"></a> 第一个问题：原生JS发送异步请求</h3>\n<p>由于一开始的写法是获取与创建是分开写的，即获取后返回一个promise对象，通过then方法在将获取到的数据进行创建（渲染）。因此放弃jQuery的Ajax方法后也要返回一个Promise对象，这样才能以最小的成本兼容以前的写法。</p>\n<blockquote>\n<p>参数<code>_this</code>调用时传入this</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">getSpeak</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span>\n            <span class=\"token string\">\"https://gitee.com/api/v5/repos/\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>owner <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>repo <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"/issues?state=open&amp;sort=created&amp;direction=desc&amp;page=\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>page <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"&amp;per_page=\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>per_page <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"&amp;creator=\"</span> <span class=\"token operator\">+</span>\n            _this<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 创建核心对象</span>\n        <span class=\"token keyword\">let</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 发送请求</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 监听请求</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 如果成功则执行</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(2|3)\\d&#123;2&#125;$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span>\n                    _this<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    _this<span class=\"token punctuation\">.</span>total_count <span class=\"token operator\">=</span> xhr<span class=\"token punctuation\">.</span><span class=\"token function\">getResponseHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_count\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    _this<span class=\"token punctuation\">.</span>total_page <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">.</span>total_count <span class=\"token operator\">/</span> _this<span class=\"token punctuation\">.</span>per_page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        date <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>comments <span class=\"token operator\">=</span> date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"comments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>labels <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">.</span><span class=\"token function\">getLabels</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"labels\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>created_at <span class=\"token operator\">=</span> Speak<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"created_at\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            temp<span class=\"token punctuation\">.</span>html_url <span class=\"token operator\">=</span> date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"html_url\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            _this<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token comment\">// 失败执行</span>\n                <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>statusText<span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 发送请求数据</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>调用API后，将返回的数据再次进行提取与处理即（<code>getBody</code>、<code>getLabels</code>等方法），并将结果放入一个临时的对象，将其对象添加到数组。等渲染时遍历此数组即可。因此这个数组大概是这样的：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 内容</span>\n        comments<span class=\"token operator\">:</span><span class=\"token string\">'内容'</span><span class=\"token punctuation\">,</span>\n        labels<span class=\"token operator\">:</span><span class=\"token string\">'标签'</span><span class=\"token punctuation\">,</span>\n        created_at<span class=\"token operator\">:</span><span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span>\n        html_url<span class=\"token operator\">:</span><span class=\"token string\">'当前issue的地址'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 内容</span>\n        comments<span class=\"token operator\">:</span><span class=\"token string\">'内容'</span><span class=\"token punctuation\">,</span>\n        labels<span class=\"token operator\">:</span><span class=\"token string\">'标签'</span><span class=\"token punctuation\">,</span>\n        created_at<span class=\"token operator\">:</span><span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span>\n        html_url<span class=\"token operator\">:</span><span class=\"token string\">'当前issue的地址'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"第二个问题创建元素\"><a class=\"markdownIt-Anchor\" href=\"#第二个问题创建元素\"></a> 第二个问题：创建元素</h3>\n<p>jQuery的工厂函数过于好用，但为了减少体积，不得不抛弃。因此便遇到了另一个问题，dom元素的操作。</p>\n<ol>\n<li>\n<p>由于gitee的图片是带有防盗链的，因此需要在头部插入一个标签meta标签，表示<code>no-referrer</code>才可以正常使用其防盗链图片。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">noRefer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"meta\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"referrer\"</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> <span class=\"token string\">\"no-referrer\"</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>外部CSS的嵌入</p>\n<p>由于使用了打包工具，只需要通过<code>require</code>进行加载即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">loadingCss</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./css/loading.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token function-variable function\">speakCss</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./css/Speak.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>按钮的插入</p>\n<p>起初并不打算插入翻页按钮，因为嵌入到博客后，每个博客都会有自己的风格及按钮样式，但又为了初始化及使用方便，因此还是决定添加按钮和页码显示的label。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">createBtn</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'is-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>prevBtn<span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>nextBtn<span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>pageLabel<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>关于<code>insertAdjacentHTML</code>方法可参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/insertAdjacentHTML\">insertAdjacentHTML</a></p>\n</li>\n</ol>\n<h3 id=\"第三个问题代码高亮插件highlight过大\"><a class=\"markdownIt-Anchor\" href=\"#第三个问题代码高亮插件highlight过大\"></a> 第三个问题：代码高亮插件highlight过大</h3>\n<p><code>highlight.min.js</code>文件已经100kb大小了，加上<code>marked.min.js</code>34kb，导致最后生成的文件大小150kb+。</p>\n<blockquote>\n<p>不过没办法，目前无解。</p>\n</blockquote>\n<h2 id=\"如何使用\"><a class=\"markdownIt-Anchor\" href=\"#如何使用\"></a> 如何使用</h2>\n<p>使用很简单，只需要一个class为<code>container</code>的容器和一个实例化的Speak对象即可。</p>\n<blockquote>\n<p>由于基于某个主题开发，部分样式可能存在细微差别。</p>\n</blockquote>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>is-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Speak</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">&#123;</span>\n            nickname<span class=\"token operator\">:</span> <span class=\"token string\">'🦄Dreamy.TZK'</span><span class=\"token punctuation\">,</span>\n            per_page<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n            owner<span class=\"token operator\">:</span> <span class=\"token string\">\"antmoe\"</span><span class=\"token punctuation\">,</span>\n            repo<span class=\"token operator\">:</span> <span class=\"token string\">\"xiaokang.me\"</span><span class=\"token punctuation\">,</span>\n            defaultLabelName<span class=\"token operator\">:</span> <span class=\"token string\">\"Default\"</span><span class=\"token punctuation\">,</span>\n            defaultLabelColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#ffc107\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// highlight样式</span>\n            highlightcss<span class=\"token operator\">:</span>\n            <span class=\"token string\">\"https://cdn.bootcdn.net/ajax/libs/highlight.js/10.1.1/styles/monokai-sublime.min.css\"</span><span class=\"token punctuation\">,</span>\n            emojiLabel<span class=\"token operator\">:</span>\n            <span class=\"token punctuation\">&#123;</span>\n                Coder<span class=\"token operator\">:</span> <span class=\"token string\">\"🎯\"</span><span class=\"token punctuation\">,</span>\n                日常<span class=\"token operator\">:</span> <span class=\"token string\">\"💬\"</span><span class=\"token punctuation\">,</span>\n                Whoiam<span class=\"token operator\">:</span> <span class=\"token string\">'😶'</span><span class=\"token punctuation\">,</span>\n                想法<span class=\"token operator\">:</span> <span class=\"token string\">\"💫\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">TODO</span><span class=\"token operator\">:</span> <span class=\"token string\">\"🚧\"</span><span class=\"token punctuation\">,</span>\n                随便说说<span class=\"token operator\">:</span> <span class=\"token string\">\"🎈\"</span><span class=\"token punctuation\">,</span>\n                测试<span class=\"token operator\">:</span> <span class=\"token string\">'👻'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            prevBtn<span class=\"token operator\">:</span><span class=\"token string\">'&lt;a class=\"btn-beautify button--animated left larger prev red\" href=\"#\" title=\"上一页\" style=\"display:none;float:left\" data-pjax-state=\"\">&lt;i class=\"far fa-hand-point-left fa-fw\">&lt;/i> 上一页&lt;/a>'</span><span class=\"token punctuation\">,</span>\n            nextBtn<span class=\"token operator\">:</span><span class=\"token string\">'&lt;a class=\"btn-beautify button--animated larger next red\" href=\"#\" title=\"下一页\" style=\"float: right; display: block;\" data-pjax-state=\"\">&lt;i class=\"far fa-hand-point-right fa-fw\">&lt;/i> 下一页&lt;/a>'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>DEMO：<a href=\"https://www.antmoe.com/speak\">Speak</a></p>\n","categories":[{"name":"Project","path":"api/categories/Project.json"}],"tags":[{"name":"Speak","path":"api/tags/Speak.json"}]}