<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>小康博客</title>
    <link>https://www.antmoe.com/</link>
    
    <author>
      <name>DreamyTZK</name>
      <email>dreamytzk@outlook.com</email>
    </author>
    
    
    <image>
      <url>https://cdn.jsdelivr.net/npm/kang-static@latest/avatar.jpg</url>
      <title>小康博客</title>
      <link>https://www.antmoe.com/</link>
    </image>
    
    <atom:link href="https://www.antmoe.com/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>一个收藏回忆与分享技术的地方！</description>
    <pubDate>Tue, 08 Mar 2022 14:02:47 GMT</pubDate>
    <lastBuildDate>Tue, 08 Mar 2022 14:02:47 GMT</lastBuildDate>
    <generator>小康博客</generator>
    <copyright>Copyright © 2020-present DreamyTZK All rights reserved.</copyright>
    
    <item>
      <title>使用vscode进行远程开发</title>
      <link>https://www.antmoe.com/posts/99dbbe8d/</link>
      <guid>https://www.antmoe.com/posts/99dbbe8d/</guid>
      <pubDate>Tue, 08 Mar 2022 14:02:47 GMT</pubDate>
      
      <description>使用vscode进行远程开发</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>为什么突然想到了 vscode 远程开发，其实是因为在知乎上看到了一个问题，某人的回答指出了是因为 vscode 能够远程开发，他才抛弃了其他工具，转向了 vscode。</p><p>其实对于我一个转向前端的程序员 👨‍💻，使用 vscode 也是迟早的事情。虽然 jetbrains 全家桶很 X，但是有时候会卡住，而且时间长了，打开还得等一会儿。。</p><p>目前我只有开发 python 才会使用。当然了，等这段时间过了，估计也会很长一段时间不会碰 python 了，所以转向 vscode 了。<img src="https://file.acs.pw/picGo/2022/03/06/20220306192857.jpeg" alt="-小康博客" /></p><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><h3 id="为-vscode-安装插件"><a class="markdownIt-Anchor" href="#为-vscode-安装插件"></a> 为 vscode 安装插件</h3><p>插件名为 Remote Development</p><p>地址<code>https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack</code></p><p>当然了，直接搜索也是可以的。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218223231.png" alt="" /></p><p>安装这个插件，会连同最上面那四个一起安装，虽然不知道为啥。</p><h3 id="生成密钥对"><a class="markdownIt-Anchor" href="#生成密钥对"></a> 生成密钥对</h3><p>密钥对对于搞 Hexo 的小伙伴相信都不陌生，对于开发者来说应该更不陌生。生成的命令很简单</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后一路回车即可。如果遇到问题，请自行百度。</p><p>密钥对生成好了之后，默认的位置是用户目录的.ssh 里。例如我的用户名是<code>antmoe</code>那么我的文件就在<code>C:\Users\antmoe\.ssh</code>里。我们进入这个文件，将里边的<code>id_rsa.pub</code>文件用文本文档打开。</p><blockquote><p>这里推荐一款工具：notepad++ 免费而且贼好用。</p></blockquote><p>复制里边的内容</p><h3 id="为服务器添加公钥"><a class="markdownIt-Anchor" href="#为服务器添加公钥"></a> 为服务器添加公钥</h3><p>我们登录服务器，在你个人用户的目录新建一个<code>.ssh</code>目录，并赋予权限 700，然后在这个目录里新建一个文件<code>authorized_keys</code> 里边写入我们公钥的内容，并赋予权限 600</p><p>如果你是 Linux 小白或者忘了 Linux 的命令，那么我在这里提供命令哦！</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">mkdir</span> ~/.ssh<span class="token function">chmod</span> <span class="token number">700</span> ~/.ssh/<span class="token function">vi</span> ~/.ssh/authorized_keys<span class="token function">chmod</span> <span class="token number">600</span> ~/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>关于第三行使用了 vi 编辑器，如果你不会用或想了解这款工具请自行百度，这里只提供粘贴公钥和保存的基本操作。</p><ol><li><p>粘贴公钥</p><p>当输入第三步的命令后，看到了一个黑框框，我们按键盘上的字母键<code>i</code>，然后左下角会提示<code>INSERT</code>或者提示插入或者插入模式。这都是一样么。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218224804.png" alt="" /></p><p>然后我们按鼠标的右键，粘贴复制的公钥内容。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218224844.png" alt="" /></p></li><li><p>保存内容</p><p>保存也很简单，我们先按键盘左上角的<code>ESC</code>建。然后输入<code>:wq</code>(左下角会显示)</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225000.png" alt="" /></p></li></ol><h3 id="vscode-连接"><a class="markdownIt-Anchor" href="#vscode-连接"></a> vscode 连接</h3><p>进入 vscode，你会看到左边菜单栏多出了一个小电脑的标志，我们点它。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225253.png" alt="" /></p><p>左边那里选择<code>SSH Targels</code>，然后点击小齿轮选择 user/用户名/.ssh/config 这样的，通常是第一个或者第二个。然后就可以看到上边的配置界面了。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225433.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225444.png" alt="" /></p><h3 id="测试连接"><a class="markdownIt-Anchor" href="#测试连接"></a> 测试连接</h3><p>不出意外的话，这是就可以连接成功了。</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218225734.png" alt="" /></p><h2 id="可能会遇到的问题"><a class="markdownIt-Anchor" href="#可能会遇到的问题"></a> 可能会遇到的问题</h2><h3 id="bad-owner-or-permissions-on-cusersadministratorsshconfig"><a class="markdownIt-Anchor" href="#bad-owner-or-permissions-on-cusersadministratorsshconfig"></a> Bad owner or permissions on C:\Users\Administrator/.ssh/config</h3><blockquote><p>Windows 下 VSCode 使用 SSH 连接报 Bad owner or permissions on C:\Users\Administrator/.ssh/config 错误问题</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/18/20200218230043.png" alt="" /></p><p>这个错误意味着：文件夹.ssh 的权限不仅仅是 windows 当前用户拥有或者当前用户权限不足，故修改权限即可。</p><p>解决方案很简单，找到我们的<code>.ssh</code>文件，进入里边会有一个<code>config</code>的文件。</p><ol><li>右键单击.ssh 文件夹，然后单击“属性”。</li><li>找到并点击“安全”标签。</li><li>然后单击“高级”。 单击“禁用继承”，单击“确定”。 将出现警告弹出窗口。单击“<strong>从此对象中删除所有继承的权限</strong>”。</li><li>你会注意到所有用户都将被删除。让我们添加所有者。在同一窗口中，单击“编辑”按钮。</li><li>接下来，单击“添加”以显示“选择用户或组”窗口。</li><li>单击“高级”，然后单击“立即查找”按钮。应显示用户结果列表。 选择<strong>您的用户帐户</strong>。</li><li>然后单击“确定”（大约三次）以关闭所有窗口。</li><li>完成所有操作后，再次关闭并打开 VSCode 并尝试连接到远程 SSH 主机。</li></ol><p>此解决方案来源于 CSDN 博客<a href="https://blog.csdn.net/chaoenhu/article/details/103698804">犹新</a></p><h3 id="更多问题"><a class="markdownIt-Anchor" href="#更多问题"></a> 更多问题</h3><p>如果遇到其他问题，可以在下方留言哦！</p><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>现在已经是晚上 11 点钟了，刚刚写完这篇文字，大约花费了 40 分钟的时间。说真的。现在越来越觉得 vscode 牛 X 了。</p><p>不过经过我的测试 远程开发并不好用，经常会遇到掉线的情况。。不知道是因为服务器的原因还是我的网络原因。</p><p>但是虚拟机好像没有掉线过，所以我的开发流程变成了</p><ol><li>打开虚拟机</li><li>vscode 远程连接</li><li>开发</li></ol><p>好了 晚安 睡觉 <img src="https://file.acs.pw/picGo/2022/03/06/20220306192905.jpeg" alt="-小康博客" /></p>]]></content:encoded>
      
      
      <category domain="https://www.antmoe.com/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/">软件配置</category>
      
      <category domain="https://www.antmoe.com/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/VSCode/">VSCode</category>
      
      
      <category domain="https://www.antmoe.com/tags/%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/">远程开发</category>
      
      
      <comments>https://www.antmoe.com/posts/99dbbe8d/#post-comment</comments>
      
    </item>
    
    <item>
      <title>typora自动图片自动上传到图床</title>
      <link>https://www.antmoe.com/posts/c765ad20/</link>
      <guid>https://www.antmoe.com/posts/c765ad20/</guid>
      <pubDate>Tue, 08 Mar 2022 14:02:47 GMT</pubDate>
      
      <description>配置Typora编辑器将图片自动同步到图床。自动上传至GitHub、阿里、七牛、又拍、sm等图床。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>由于突然发现 Typora0.9.84 的更新中有一个 Support upload images via PicGo or custom commands.</p><p>于是便尝试了一下。<img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091215.png" alt="" /></p><p>其实 我感觉效果还是挺一般的。可能是因为我用的 GitHub，可能有时因为网络问题的原因吧。</p><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><h3 id="picgo-设置"><a class="markdownIt-Anchor" href="#picgo-设置"></a> PicGo 设置</h3><ol><li><p>PicGo 的版本必须是 2.2.0 及以上。至于图床配置可以参考另一篇文章。<a href="/posts/c9c6437b/index.html">配置 picgo 成为多平台图床工具</a></p></li><li><p>激活 PicGo-Server</p><p>打开 PicGo 详细页面，进入 PicGo 设置–设置 Server</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091619.png" alt="" /></p><p><strong>这里的监听地址就是默认的 127.0.0.1，端口修改为 36677</strong>，否则会上传失败。</p></li></ol><h3 id="typora-配置"><a class="markdownIt-Anchor" href="#typora-配置"></a> Typora 配置</h3><p>对于 Typora 也是有版本要求的，大家也看到了，这个功能是 0.9.84 才加入的，所以 Typora 的版本也得是 0.9.84 及以上。</p><ol><li><p>Typora 版本 0.9.84 及以上。</p></li><li><p>设置（左上角文件-&gt;偏好设置-&gt;图像）</p><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314092035.png" alt="" /></p></li><li><p>然后左下角有一个验证上传，一般情况下这里就已经好了。</p></li></ol><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><p>picgo 更多图床配置：<a href="https://www.antmoe.com/posts/c9c6437b/index.html">配置 picgo 成为多平台图床工具</a></p><h3 id="图片上传失败"><a class="markdownIt-Anchor" href="#图片上传失败"></a> 图片上传失败</h3><p>参考<a href="https://www.antmoe.com/posts/c9c6437b/index.html#github%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E5%A4%B1%E8%B4%A5">github 图片上传失败</a></p><h3 id="其他问题"><a class="markdownIt-Anchor" href="#其他问题"></a> 其他问题</h3><p>如果出现 PicGo 可以上传，但 Typora 无法上传基本上就是配置问题了。</p>]]></content:encoded>
      
      
      <category domain="https://www.antmoe.com/categories/%E4%BC%98%E9%9B%85%E5%86%99%E4%BD%9C/">优雅写作</category>
      
      <category domain="https://www.antmoe.com/categories/%E4%BC%98%E9%9B%85%E5%86%99%E4%BD%9C/Typora/">Typora</category>
      
      
      <category domain="https://www.antmoe.com/tags/Typora/">Typora</category>
      
      
      <comments>https://www.antmoe.com/posts/c765ad20/#post-comment</comments>
      
    </item>
    
    <item>
      <title>小康博客测试专用文章</title>
      <link>https://www.antmoe.com/posts/80526a9f/</link>
      <guid>https://www.antmoe.com/posts/80526a9f/</guid>
      <pubDate>Tue, 08 Mar 2022 14:02:47 GMT</pubDate>
      
        
        
          
          
      <description></description>
          
        
      
      
      
      <content:encoded><![CDATA[<script src="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js"></script><div class="is-container"><img src='https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.9/butterfly/img/loading.gif' /></div><a class="btn-beautify button--animated  left larger prev" href="#" title="上一页" style='display:none;'><i class="far fa-hand-point-left fa-fw "></i> 上一页 </a><p><span class="inline-tag grey page" style="position: absolute;transform: translateX(-50%);left: 50%;">页码</span></p><p><a class="btn-beautify button--animated larger next" href="#" title="下一页" style="float: right;display: none;"><i class="far fa-hand-point-right fa-fw "></i> 下一页 </a></p><script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script><script>$(document).ready(function(){function e(e,t,o){return $.ajax({url:"https://gitee.com/api/v5/repos/"+t+"/"+o+"/issues?state=open&sort=created&direction=desc&page="+e+"&per_page="+l+"&creator=antmoe",type:"get",complete:function(e,t){u=e.getResponseHeader("total_count")},success:function(e,t,o){if(r=[],u=o.getResponseHeader("total_count"),i=Math.ceil(u/l),e)for(let t in e){var c={};c.body=n(e[t].body),c.labels=s(e[t].labels),c.updated_at=a(e[t].updated_at),c.html_url=e[t].html_url,r.push(c)}}})}function t(){let e="";for(let t in r)e+=`<div class="is-issue" style="transform-origin: center top;"><div class="is-issue-content">\n                <div class="is-issue-header"><a href="${r[t].html_url}" target="_blank"><span class="is-issue-username">XiaoKang🦄</span></a><span\n                        class="is-verified-badge"><svg class="is-badge" viewBox="0 0 512 512"\n                            xmlns="http://www.w3.org/2000/svg">\n                            <path\n                                d="m512 268c0 17.9-4.3 34.5-12.9 49.7s-20.1 27.1-34.6 35.4c.4 2.7.6 6.9.6 12.6 0 27.1-9.1 50.1-27.1 69.1-18.1 19.1-39.9 28.6-65.4 28.6-11.4 0-22.3-2.1-32.6-6.3-8 16.4-19.5 29.6-34.6 39.7-15 10.2-31.5 15.2-49.4 15.2-18.3 0-34.9-4.9-49.7-14.9-14.9-9.9-26.3-23.2-34.3-40-10.3 4.2-21.1 6.3-32.6 6.3-25.5 0-47.4-9.5-65.7-28.6-18.3-19-27.4-42.1-27.4-69.1 0-3 .4-7.2 1.1-12.6-14.5-8.4-26-20.2-34.6-35.4-8.5-15.2-12.8-31.8-12.8-49.7 0-19 4.8-36.5 14.3-52.3s22.3-27.5 38.3-35.1c-4.2-11.4-6.3-22.9-6.3-34.3 0-27 9.1-50.1 27.4-69.1s40.2-28.6 65.7-28.6c11.4 0 22.3 2.1 32.6 6.3 8-16.4 19.5-29.6 34.6-39.7 15-10.1 31.5-15.2 49.4-15.2s34.4 5.1 49.4 15.1c15 10.1 26.6 23.3 34.6 39.7 10.3-4.2 21.1-6.3 32.6-6.3 25.5 0 47.3 9.5 65.4 28.6s27.1 42.1 27.1 69.1c0 12.6-1.9 24-5.7 34.3 16 7.6 28.8 19.3 38.3 35.1 9.5 15.9 14.3 33.4 14.3 52.4zm-266.9 77.1 105.7-158.3c2.7-4.2 3.5-8.8 2.6-13.7-1-4.9-3.5-8.8-7.7-11.4-4.2-2.7-8.8-3.6-13.7-2.9-5 .8-9 3.2-12 7.4l-93.1 140-42.9-42.8c-3.8-3.8-8.2-5.6-13.1-5.4-5 .2-9.3 2-13.1 5.4-3.4 3.4-5.1 7.7-5.1 12.9 0 5.1 1.7 9.4 5.1 12.9l58.9 58.9 2.9 2.3c3.4 2.3 6.9 3.4 10.3 3.4 6.7-.1 11.8-2.9 15.2-8.7z"\n                                fill="#1da1f2"></path>\n                        </svg></span><span class="is-issue-text">·</span><span class="is-issue-date">${r[t].updated_at}</span><span class="is-issue-label"\n                        style="background-color: ${r[t].labels.color}; color: #f6f8fa;">${r[t].labels.name}</span></div>\n                <div class="is-issue-body markdown-body">\n                    ${r[t].body}\n                </div>\n            </div></div>`;$(".is-container").html(e),$(".page").text(o+" / "+i),1!=u&&1==o?$(".next").show():o==i&&1!=o?$(".next").hide():o<u&&$(".next").show(),o>1?$(".prev").show():$(".prev").hide()}function s(e){var t={name:"XiaoKang",color:"#ffc107"};return e.length&&(t.name=e[0].name,t.color="#"+e[0].color),t}function n(e){return marked(e)}function a(e){var t=new Date(e);return t.format("yyyy-MM-dd hh:mm:ss")}var r=[],o=1,i=1,l=3,c="antmoe",p="speak",u=0;$("body").append('<meta name="referrer" content="no-referrer" />'),e(o,c,p).then(()=>t()),$(".prev").click(function(s){s.preventDefault(),o-=1,e(o,c,p).then(()=>t())}),$(".next").click(function(s){s.preventDefault(),o+=1,e(o,c,p).then(()=>t())}),Date.prototype.format=function(e){var t={"M+":this.getMonth()+1,"d+":this.getDate(),"h+":this.getHours(),"m+":this.getMinutes(),"s+":this.getSeconds(),"q+":Math.floor((this.getMonth()+3)/3),S:this.getMilliseconds()};for(var s in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(this.getFullYear()+"").substr(4-RegExp.$1.length))),t)new RegExp("("+s+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?t[s]:("00"+t[s]).substr((""+t[s]).length)));return e}});</script>]]></content:encoded>
      
      
      
      
      <comments>https://www.antmoe.com/posts/80526a9f/#post-comment</comments>
      
    </item>
    
    <item>
      <title>规范JavaScript命名</title>
      <link>https://www.antmoe.com/posts/8ae081ab/</link>
      <guid>https://www.antmoe.com/posts/8ae081ab/</guid>
      <pubDate>Tue, 08 Mar 2022 14:02:47 GMT</pubDate>
      
        
        
          
          
      <description></description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="驼峰命名法"><a class="markdownIt-Anchor" href="#驼峰命名法"></a> 驼峰命名法</h2><p>驼峰命名法按照第一个字母是否大写分为：</p><ol><li><p><strong>Pascal Case 大驼峰式命名法</strong>：首字母大写</p><p><code>StudentInfo</code>、<code>UserInfo</code>、<code>ProductInfo</code></p></li><li><p><strong>Camel Case 小驼峰式命名法</strong>：首字母小写</p><p><code>studentInfo</code>、<code>userInfo</code>、<code>productInfo</code></p></li></ol><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2><ul><li><p>命名方法：小驼峰式命名法</p></li><li><p>命名规范：前缀应当是名词。(函数的名字前缀为动词，以此区分变量和函数)</p></li><li><p>命名建议：尽量在变量名字中体现所属类型，如:length、count等表示数字类型；而包含name、title表示为字符串类型。</p></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 好的命名方式</span><span class="token keyword">var</span> maxCount <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">var</span> tableTitle <span class="token operator">=</span> <span class="token string">'LoginTable'</span><span class="token punctuation">;</span> <span class="token comment">// 不好的命名方式</span><span class="token keyword">var</span> setCount <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">var</span> getTitle <span class="token operator">=</span> <span class="token string">'LoginTable'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><ul><li><p>命名方法：小驼峰式命名法</p></li><li><p>命名规范：前缀应当为动词。</p></li><li><p>命名建议：可使用常见动词约定</p><table><thead><tr><th style="text-align:center">动词</th><th style="text-align:center">含义</th><th style="text-align:center">返回值</th></tr></thead><tbody><tr><td style="text-align:center"><code>can</code></td><td style="text-align:center">判断是否可执行某个动作(权限)</td><td style="text-align:center">函数返回一个布尔值。true：可执行；false：不可执行</td></tr><tr><td style="text-align:center"><code>has</code></td><td style="text-align:center">判断是否含有某个值</td><td style="text-align:center">函数返回一个布尔值。true：含有此值；false：不含有此值</td></tr><tr><td style="text-align:center"><code>is</code></td><td style="text-align:center">判断是否为某个值</td><td style="text-align:center">函数返回一个布尔值。true：为某个值；false：不为某个值</td></tr><tr><td style="text-align:center"><code>get</code></td><td style="text-align:center">获取某个值</td><td style="text-align:center">函数返回一个非布尔值</td></tr><tr><td style="text-align:center"><code>set</code></td><td style="text-align:center">设置某个值</td><td style="text-align:center">无返回值、返回是否设置成功或者返回链式对象</td></tr><tr><td style="text-align:center"><code>load</code></td><td style="text-align:center">加载某些数据</td><td style="text-align:center">无返回值或者返回是否加载完成的结果</td></tr></tbody></table></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 是否可阅读</span><span class="token keyword">function</span> <span class="token function">canRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 获取名称</span><span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h2><ul><li><p>命名方法：名称全部大写。</p></li><li><p>命名规范：使用大写字母和下划线来组合命名，下划线用以分割单词。</p></li><li><p>命名建议：无</p></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token constant">MAX_COUNT</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token constant">URL</span> <span class="token operator">=</span> <span class="token string">'http://www.baidu.com'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h2><ul><li><p>命名方法：大驼峰式命名法，首字母大写。</p></li><li><p>命名规范：前缀为名称。</p></li><li><p>命名建议：无。</p></li><li><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">var</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="类的成员"><a class="markdownIt-Anchor" href="#类的成员"></a> 类的成员</h2><p>① 公共属性和方法：跟变量和函数的命名一样。</p><p>② 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> _name <span class="token operator">=</span> name<span class="token punctuation">;</span> <span class="token comment">// 私有成员</span>     <span class="token comment">// 公共方法</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> _name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 公共方式</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">setName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        _name <span class="token operator">=</span> value<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>st<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">'jerry'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// => jerry：输出_name私有变量的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2><ol><li><a href="https://www.cnblogs.com/polk6/p/4660195.html">JavaScript开发规范</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://www.antmoe.com/categories/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/">编码规范</category>
      
      <category domain="https://www.antmoe.com/categories/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/JavaScript/">JavaScript</category>
      
      
      <category domain="https://www.antmoe.com/tags/%E6%89%8B%E5%86%8C%E6%9F%A5%E8%AF%A2/">手册查询</category>
      
      <category domain="https://www.antmoe.com/tags/%E5%91%BD%E5%90%8D/">命名</category>
      
      
      <comments>https://www.antmoe.com/posts/8ae081ab/#post-comment</comments>
      
    </item>
    
    <item>
      <title>规范JavaScript注释</title>
      <link>https://www.antmoe.com/posts/424fc09d/</link>
      <guid>https://www.antmoe.com/posts/424fc09d/</guid>
      <pubDate>Tue, 08 Mar 2022 14:02:47 GMT</pubDate>
      
        
        
          
          
      <description></description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="行内注释"><a class="markdownIt-Anchor" href="#行内注释"></a> 行内注释</h2><ol><li><p>显示一个解释的评论</p><p><code>// 用来显示一个解释的评论</code></p></li><li><p>显示表达式的结果</p><p><code>// -&gt; 用来显示表达式的结果</code></p></li><li><p>显示 console 的输出结果</p><p><code>// &gt;用来显示 console 的输出结果</code></p></li></ol><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 测试函数</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hello World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// >Hello World!</span>    <span class="token keyword">return</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// ->5</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="snote idea yellow"><p>//(双斜线)与代码之间保留一个空格，并且//(双斜线)与注释文字之间保留一个空格。</p></div><h2 id="单行注释"><a class="markdownIt-Anchor" href="#单行注释"></a> 单行注释</h2><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 调用了一个函数；1)单独在一行</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="snote idea yellow"><p>单独一行：//(双斜线)与注释文字之间保留一个空格。</p></div><h2 id="普通多行注释"><a class="markdownIt-Anchor" href="#普通多行注释"></a> 普通多行注释</h2><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** 代码执行到这里后会调用setTitle()函数* setTitle()：设置title的值*/</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="snote idea yellow"><p>若开始<code>/*</code>和结束<code>*/</code>都在一行，推荐采用单行注释。若至少三行注释时，第一行为<code>/*</code>，最后行为<code>*/</code>，其他行以<code>*</code>开始，并且注释文字与<code>*</code>保留一个空格。</p></div><h2 id="函数多行注释"><a class="markdownIt-Anchor" href="#函数多行注释"></a> 函数多行注释</h2><p>函数(方法)注释也是多行注释的一种，但是包含了特殊的注释要求，参照JSDoc。</p><p>以下字段并不是全部，全部请参考<a href="https://www.html.cn/doc/jsdoc/index.html">JSDoc中文文档</a>或<a href="https://jsdoc.zcopy.site/">JSDoc中文文档</a></p><div class="snote info"><p>常用注释关键字</p></div><table><thead><tr><th style="text-align:center">注释名</th><th style="text-align:center">语法</th><th style="text-align:center">含义</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">@param</td><td style="text-align:center"><code>@param 参数名 &#123;参数类型&#125; 描述信息</code></td><td style="text-align:center">描述参数的信息</td><td style="text-align:center"><code>@param name &#123;String&#125; 传入名称</code></td></tr><tr><td style="text-align:center">@return</td><td style="text-align:center"><code>@return &#123;返回类型&#125; 描述信息</code></td><td style="text-align:center">描述返回值的信息</td><td style="text-align:center"><code>@return &#123;Boolean&#125; true:可执行;false:不可执行</code></td></tr><tr><td style="text-align:center">@author</td><td style="text-align:center"><code>@author 作者信息 [附属信息：如邮箱、日期]</code></td><td style="text-align:center">描述此函数作者的信息</td><td style="text-align:center"><code>@author 张三 2015/07/21</code></td></tr><tr><td style="text-align:center">@version</td><td style="text-align:center"><code>@version XX.XX.XX</code></td><td style="text-align:center">描述此函数的版本号</td><td style="text-align:center"><code>@version 1.0.3</code></td></tr><tr><td style="text-align:center">@example</td><td style="text-align:center"><code>@example 示例代码</code></td><td style="text-align:center">演示函数的使用</td><td style="text-align:center"><code>@example setTitle(‘测试’)</code></td></tr></tbody></table><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*** 合并Grid的行* @param grid &#123;Ext.Grid.Panel&#125; 需要合并的Grid* @param cols &#123;Array&#125; 需要合并列的Index(序号)数组；从0开始计数，序号也包含。* @param isAllSome &#123;Boolean&#125; ：是否2个tr的cols必须完成一样才能进行合并。true：完成一样；false(默认)：不完全一样* @return void* @author polk6 2015/07/21 * @example* _________________                             _________________* |  年龄 |  姓名 |                             |  年龄 |  姓名 |* -----------------      mergeCells(grid,[0])   -----------------* |  18   |  张三 |              =>             |       |  张三 |* -----------------                             -  18   ---------* |  18   |  王五 |                             |       |  王五 |* -----------------                             -----------------*/</span><span class="token keyword">function</span> <span class="token function">mergeCells</span><span class="token punctuation">(</span><span class="token parameter">grid<span class="token operator">:</span> Ext<span class="token punctuation">.</span>Grid<span class="token punctuation">.</span>Panel<span class="token punctuation">,</span> cols<span class="token operator">:</span> Number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> isAllSome<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Do Something</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文档注释"><a class="markdownIt-Anchor" href="#文档注释"></a> 文档注释</h2><p>文档注释将会以预定格式出现在API文档中。它以“/\**”开头，以“*/”结束，其间的每一行均以“*”开头（均与开始符的第一个“*”对齐），且注释内容与“*”间留一个空格。</p><p>文档注释必须包含一个或多个注释标签。</p><ol><li><p>@module。声明模块</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 模块说明 * @module 模块名 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * Core模块提供最基础、最核心的接口 * @module Core */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>@class。声明类</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 类说明 * @class 类名 * @constructor */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>@class必须搭配@constructor或@static使用，分别标记非静态类与静态类。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 节点集合类 * @class NodeList * @constructor * @param &#123;ArrayLike&lt;Element>&#125; nodes 初始化节点 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>@method。声明函数或类方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 方法说明 * @method 方法名 * @for 所属类名 * @param &#123;参数类型&#125; 参数名 参数说明 * @return &#123;返回值类型&#125; 返回值说明 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没有指定@for时，表示此函数为全局或模块顶层函数。当函数为静态函数时，必须添加@static；当函数有参数时，必须使用@param；当函数有返回值时，必须使用@return。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 返回当前集合中指定位置的元素 * @method * @for NodeList * @param &#123;Number&#125; [i=0] 位置下标。如果为负数，则从集合的最后一个元素开始倒数 * @return &#123;Element&#125; 指定元素 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>@param。声明函数参数，必须与@method搭配使用。</p></li><li><p>@property。声明类属性</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 属性说明 * @property &#123;属性类型&#125; 属性名 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h2><div class="snote success"><p>应该做的</p></div><ol><li><p>总是在单行注释符后留一个空格。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// this is comment</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>总是在多行注释的结束符前留一个空格（使星号对齐）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*                              */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>如果某段代码有功能未实现，或者有待完善，必须添加“TODO”标记，“TODO”前后应留一个空格。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// TODO 未处理IE6-8的兼容性</span><span class="token keyword">function</span> <span class="token function">setOpacity</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    node<span class="token punctuation">.</span>style<span class="token punctuation">.</span>opacity <span class="token operator">=</span> val<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><div class="snote error"><p>不该做的</p></div><ol><li><p>不要把注释写在多行注释的开始符、结束符所在行。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/* start                             end */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*here is line 1here is line 2 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>不要编写无意义的注释。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 初始化value变量为0</span><span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="注释示例"><a class="markdownIt-Anchor" href="#注释示例"></a> 注释示例</h2><p><font color=red>参数和返回值类型Type：string、boolean、number、object、array、function</font></p><h3 id="基本方法块注释"><a class="markdownIt-Anchor" href="#基本方法块注释"></a> 基本方法块注释</h3><p>如果描述不能描述清楚，添加例子来描述。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data 目标对象 * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本方法块注释-注释过长时"><a class="markdownIt-Anchor" href="#基本方法块注释-注释过长时"></a> 基本方法块注释-注释过长时</h3><p>如果需要折行则在文本中使用<code>&lt;br/&gt;</code>标签</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data 目标对象&lt;br/> * 例： *  &#123; *      target:手机号 *  &#125; * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本方法块注释-参数可选"><a class="markdownIt-Anchor" href="#基本方法块注释-参数可选"></a> 基本方法块注释-参数可选</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; [data] 目标对象 * 例： *  &#123; *      target:手机号 *  &#125; * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本方法块注释-带默认值"><a class="markdownIt-Anchor" href="#基本方法块注释-带默认值"></a> 基本方法块注释-带默认值</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data=&#123;&#125; 目标对象 * 例： *  &#123; *      target:手机号 *  &#125; * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方法块注释特殊参数"><a class="markdownIt-Anchor" href="#方法块注释特殊参数"></a> 方法块注释特殊参数</h3><p>如果描述不能描述清楚，添加例子来描述。<br />如果方法中有异常处理，标记异常处理注释</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @param &#123;Type&#125; data 目标对象 * @returns &#123;Type&#125; 运营商名称 * @desc 根据目标对象获取运营商 * @throws &#123;string&#125; 抛出'Error'异常 * @example * add(1, 2);    // 返回3 */</span><span class="token keyword">function</span> <span class="token function">matchedNumber</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'返回对象'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果有返回值增加@returns 如果没有省略此属性</p><h3 id="文件注释"><a class="markdownIt-Anchor" href="#文件注释"></a> 文件注释</h3><p>在文件头部增加文件注释</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @file LBS控制器 * @author limingle * @copyright Synway SFE * @createDate 2017-10-16 09:40:11 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="变量注释"><a class="markdownIt-Anchor" href="#变量注释"></a> 变量注释</h3><p>将关键的变量进行特殊注释，生成到文档中</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @var &#123;object&#125; * @desc 变量定义 * @property &#123;string&#125; a 属性a * @property &#123;string&#125; b 属性b */</span><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    a<span class="token operator">:</span> <span class="token string">'a'</span><span class="token punctuation">,</span>    b<span class="token operator">:</span> <span class="token string">'b'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常量注释"><a class="markdownIt-Anchor" href="#常量注释"></a> 常量注释</h3><p>将关键常量进行特殊注释，生成到文档中，如果有默认值增加<code>@default</code>属性</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @constant &#123;string&#125; * @default #000 * @desc 常量定义 */</span><span class="token keyword">const</span> <span class="token constant">COLOR_WHITE</span> <span class="token operator">=</span> <span class="token string">'#fff'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="枚举注释"><a class="markdownIt-Anchor" href="#枚举注释"></a> 枚举注释</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @enum &#123;number&#125; * @desc cgi常见的返回码 */</span><span class="token keyword">var</span> <span class="token constant">RETCODE</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @desc 未登录     */</span>    <span class="token constant">NOT_LOGIN</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>    <span class="token comment">/**     * @desc 参数错误     */</span>    <span class="token constant">PARAM_ERROR</span><span class="token operator">:</span> <span class="token number">100001</span><span class="token punctuation">,</span>    <span class="token comment">/**     * @type &#123;string&#125;     * @desc 未知错误     */</span>    <span class="token constant">UNKOWN_ERROR</span><span class="token operator">:</span> <span class="token string">'unkown'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="类的注释"><a class="markdownIt-Anchor" href="#类的注释"></a> 类的注释</h3><p>默认情况先一个function就是一个类，ES6中使用Class来表示一个类<br />我们项目中使用class.js来实现类，在我们项目中使用类注释时需要在<code>@class</code>后边增加类名，不然jsdoc无法自动识别类名</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @class * @classdesc 这是对myClass类的描述 * @desc 这是对myClass类的构造函数的描述 */</span><span class="token keyword">function</span> <span class="token function">myClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @class LBSControllerCom * @classdesc LBS控制类 * @desc 初始化ws */</span><span class="token keyword">var</span> LBSControllerCom <span class="token operator">=</span> Com<span class="token punctuation">.</span><span class="token function">extends</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="类的属性"><a class="markdownIt-Anchor" href="#类的属性"></a> 类的属性</h3><p>类的属性和变量都会生成到jsdoc文档的Member模块中，在类中使用属性标识</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> LBSControllerCom <span class="token operator">=</span> Com<span class="token punctuation">.</span><span class="token function">extends</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @member &#123;string&#125;     * @desc 这样标识类的属性     */</span>    foo1 <span class="token operator">:</span> <span class="token string">'a'</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="webstorm的live-templates"><a class="markdownIt-Anchor" href="#webstorm的live-templates"></a> webstorm的live Templates</h2><ol><li><p>desc</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @description:  * @author: xiaokang * @time: $date$ */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/42bd121ee3c44d531177dfc073ada52a.png" alt="image-20200625174405983" /></p></li><li><p>fun</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @func * @desc 函数的描述 * @param &#123;参数1的类型&#125; 参数名 参数描述 * @param &#123;参数1的类型&#125; 参数名=1 默认值参数 * @param &#123;参数1的类型&#125; [参数名] 可选参数 * @returns &#123;Type&#125; 函数返回值的描述 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @func * @desc 这个函数用于测试 * @param &#123;string&#125; a 第一个参数 * @param &#123;number&#125; b=1 第二个参数 * @param &#123;number&#125; [c=2] 可选参数 * @returns &#123;boolean&#125; 返回值 */</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/251606e4bd49bfb72cb0fdeffa40046d.png" alt="image-20200625175556046" /></p></li><li><p>method</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @method * @desc 根据目标对象获取运营商 * @param &#123;参数1的类型&#125; 参数名 参数描述 * @param &#123;参数1的类型&#125; 参数名=1 默认值参数 * @param &#123;参数1的类型&#125; [参数名] 可选参数 * @returns &#123;Type&#125; 函数返回值的描述 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @class * @classdesc 这是对myClass类的描述 */</span><span class="token keyword">function</span> <span class="token function">myClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * @method * @desc myClass方法的描述 * @param &#123;string&#125; a - 参数a */</span>myClass<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'xiaokang'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/c5f05bac75d5748678784836d9b85f4d.png" alt="image-20200625175943579" /></p></li><li><p>vari</p><pre class="line-numbers language-javas" data-language="javas"><code class="language-javas">&#x2F;** * @var &#123;object&#125; * @desc 变量定义 * @property &#123;string&#125; a 属性a * @property &#123;string&#125; b 属性b *&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><span class="inline-tag green">示例</span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @var foo * @desc 变量定义 * @property &#123;string&#125; a 属性a * @property &#123;string&#125; b 属性b */</span><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    a<span class="token operator">:</span><span class="token string">'a'</span><span class="token punctuation">,</span>    b<span class="token operator">:</span><span class="token string">'b'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/25/7a545f7cc38ade7038245d2736aeaa9f.png" alt="image-20200625175042098" /></p></li></ol><h2 id="文章参考"><a class="markdownIt-Anchor" href="#文章参考"></a> 文章参考</h2><ol><li><a href="https://juejin.im/entry/599d433cf265da24797b5c66">JavaScript 开发规范（一）： 命名与注释规范详解</a></li><li><a href="https://github.com/sivan/javascript-style-guide/blob/master/es5/README.md">《Airbnb JavaScript Style Guide 中文版》</a></li><li><a href="https://www.cnblogs.com/chris-oil/p/4067415.html">js/javascript代码注释规范与示例</a></li><li><a href="https://blog.csdn.net/lianlin21212411/article/details/78530913">Javascript注释规范</a></li><li><a href="https://github.com/Yuri4ever/jsdoc">jsdoc</a></li><li><a href="https://xiaokang.me/jsdoc/">小康的jsdoc</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://www.antmoe.com/categories/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/">编码规范</category>
      
      <category domain="https://www.antmoe.com/categories/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/JavaScript/">JavaScript</category>
      
      
      <category domain="https://www.antmoe.com/tags/%E6%89%8B%E5%86%8C%E6%9F%A5%E8%AF%A2/">手册查询</category>
      
      <category domain="https://www.antmoe.com/tags/%E6%B3%A8%E9%87%8A/">注释</category>
      
      
      <comments>https://www.antmoe.com/posts/424fc09d/#post-comment</comments>
      
    </item>
    
  </channel>
</rss>