{"title":"HTTP协议基础及发展历史","slug":"日常学习/技术相关/HTTP协议与网络编程/5. HTTP协议基础及发展历史","date":"2020-08-12T02:20:01.000Z","updated":"2022-02-21T13:24:30.860Z","comments":true,"path":"api/articles/日常学习/技术相关/HTTP协议与网络编程/5. HTTP协议基础及发展历史.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/08/12/af83366c73f48.png","https://tva1.sinaimg.cn/large/832afe33ly1g8u7gnm82cg20k00p0wsm.gif","https://files.alexhchu.com/2020/08/12/fc3e3d7e65487.png","https://files.alexhchu.com/2020/08/12/ad90a807a46d3.png"],"content":"<h2 id=\"经典五层模型介绍\"><a class=\"markdownIt-Anchor\" href=\"#经典五层模型介绍\"></a> 经典五层模型介绍</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/12/af83366c73f48.png\" alt=\"image-20200812102304972\" /></p>\n<h3 id=\"第三层\"><a class=\"markdownIt-Anchor\" href=\"#第三层\"></a> 第三层</h3>\n<ol>\n<li>\n<p>物理层</p>\n<p>定义物理设备如何传输数据</p>\n</li>\n<li>\n<p>数据链路层</p>\n<p>在通信的实体间建立数据链路连接</p>\n</li>\n<li>\n<p>网络层</p>\n<p>数据在节点之间传输创建逻辑链路</p>\n</li>\n</ol>\n<h3 id=\"传输层\"><a class=\"markdownIt-Anchor\" href=\"#传输层\"></a> 传输层</h3>\n<p>向用户提供可靠的端到端（End-to-End）服务</p>\n<p>传输层向高层屏蔽了下层数据通信的细节</p>\n<h3 id=\"应用层\"><a class=\"markdownIt-Anchor\" href=\"#应用层\"></a> 应用层</h3>\n<p>为应用软件提供了很多服务，构建与TCP协议之上。屏蔽了网络传输相关细节</p>\n<h2 id=\"http协议的发展历史\"><a class=\"markdownIt-Anchor\" href=\"#http协议的发展历史\"></a> HTTP协议的发展历史</h2>\n<h3 id=\"http09\"><a class=\"markdownIt-Anchor\" href=\"#http09\"></a> HTTP/0.9</h3>\n<ul>\n<li>只有一个命令GET</li>\n<li>没有HEADER等描述数据的信息</li>\n<li>服务器发送完毕，就关闭TCP连接</li>\n</ul>\n<h3 id=\"http10\"><a class=\"markdownIt-Anchor\" href=\"#http10\"></a> HTTP/1.0</h3>\n<ul>\n<li>增加了很多命令</li>\n<li>增加status code和header</li>\n<li>多字符集支持、多部分发送、权限、缓存等</li>\n</ul>\n<h3 id=\"http11\"><a class=\"markdownIt-Anchor\" href=\"#http11\"></a> HTTP/1.1</h3>\n<ul>\n<li>持久连接</li>\n<li>pipeline</li>\n<li>增加了host和其他一些命令</li>\n</ul>\n<h3 id=\"http2\"><a class=\"markdownIt-Anchor\" href=\"#http2\"></a> HTTP2</h3>\n<ul>\n<li>所有数据以二进制传输</li>\n<li>同一个连接里面发送多个请求不在需要按照顺序来</li>\n<li>头信息压缩以及推送提高效率的功能</li>\n</ul>\n<h2 id=\"三次握手\"><a class=\"markdownIt-Anchor\" href=\"#三次握手\"></a> 三次握手</h2>\n<p>过程：张三招手–李四点头微笑–李四招手–张三点头微笑 。其中李四连续进行了2个动作，先是点头微笑(回复对方)，然后再次招手(寻求确认)，实际上可以将这两个动作合一，招手的同时点头和微笑(<strong>syn+ack</strong>)。于是四个动作就简化成了三个动作，张三招手–李四点头微笑并招手–张三点头微笑。这就是三次握手的本质，中间的一次动作是两个动作的合并。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/832afe33ly1g8u7gnm82cg20k00p0wsm.gif\" alt=\"\" /></p>\n<blockquote>\n<p>图的解释：</p>\n<ol>\n<li><code>client</code>端发送<code>syn</code>字段，请求连接</li>\n<li><code>server</code>端回复<code>ack</code>、<code>syn</code>字段字段确定与之连接</li>\n<li><code>client</code>接到确认后进入<code>established</code>已建立状态，并发送<code>ack</code>字段确认对方的连接</li>\n</ol>\n</blockquote>\n<h2 id=\"uri-url-urn\"><a class=\"markdownIt-Anchor\" href=\"#uri-url-urn\"></a> URI、URL、URN</h2>\n<h3 id=\"uri\"><a class=\"markdownIt-Anchor\" href=\"#uri\"></a> URI</h3>\n<p>Uniform Resource Identifier ：统一资源标识符</p>\n<p>用来唯一标识互联网上的信息资源，包括URL和URN</p>\n<h3 id=\"url\"><a class=\"markdownIt-Anchor\" href=\"#url\"></a> URL</h3>\n<p>Uniform Resource Locator：统一资源定位器</p>\n<p><code>http://user:pass@host.com:80/path?query=string#hash</code>，此类格式的都叫URL，比如ftp协议</p>\n<h3 id=\"urn\"><a class=\"markdownIt-Anchor\" href=\"#urn\"></a> URN</h3>\n<p>永久统一资源定位符，资源移动之后还能被找到。但目前还没有非常成熟的使用方案</p>\n<h2 id=\"http报文格式\"><a class=\"markdownIt-Anchor\" href=\"#http报文格式\"></a> HTTP报文格式</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/12/fc3e3d7e65487.png\" alt=\"image-20200812113153236\" /></p>\n<h3 id=\"http方法\"><a class=\"markdownIt-Anchor\" href=\"#http方法\"></a> HTTP方法</h3>\n<p>用来定义对于资源的操作，常用的操作有GET、POST等。</p>\n<h3 id=\"http-code\"><a class=\"markdownIt-Anchor\" href=\"#http-code\"></a> HTTP CODE</h3>\n<p>定义服务器对请求的处理结果，各个区间的CODE有各自的语义。好的HTTP服务可以通过CODE判断结果。</p>\n<h2 id=\"使用nodejs实现一个最简单的服务器\"><a class=\"markdownIt-Anchor\" href=\"#使用nodejs实现一个最简单的服务器\"></a> 使用nodejs实现一个最简单的服务器</h2>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhttp\n  <span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"request come\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/12/ad90a807a46d3.png\" alt=\"image-20200812114753588\" /></p>\n","more":"<h2 id=\"经典五层模型介绍\"><a class=\"markdownIt-Anchor\" href=\"#经典五层模型介绍\"></a> 经典五层模型介绍</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/12/af83366c73f48.png\" alt=\"image-20200812102304972\" /></p>\n<h3 id=\"第三层\"><a class=\"markdownIt-Anchor\" href=\"#第三层\"></a> 第三层</h3>\n<ol>\n<li>\n<p>物理层</p>\n<p>定义物理设备如何传输数据</p>\n</li>\n<li>\n<p>数据链路层</p>\n<p>在通信的实体间建立数据链路连接</p>\n</li>\n<li>\n<p>网络层</p>\n<p>数据在节点之间传输创建逻辑链路</p>\n</li>\n</ol>\n<h3 id=\"传输层\"><a class=\"markdownIt-Anchor\" href=\"#传输层\"></a> 传输层</h3>\n<p>向用户提供可靠的端到端（End-to-End）服务</p>\n<p>传输层向高层屏蔽了下层数据通信的细节</p>\n<h3 id=\"应用层\"><a class=\"markdownIt-Anchor\" href=\"#应用层\"></a> 应用层</h3>\n<p>为应用软件提供了很多服务，构建与TCP协议之上。屏蔽了网络传输相关细节</p>\n<h2 id=\"http协议的发展历史\"><a class=\"markdownIt-Anchor\" href=\"#http协议的发展历史\"></a> HTTP协议的发展历史</h2>\n<h3 id=\"http09\"><a class=\"markdownIt-Anchor\" href=\"#http09\"></a> HTTP/0.9</h3>\n<ul>\n<li>只有一个命令GET</li>\n<li>没有HEADER等描述数据的信息</li>\n<li>服务器发送完毕，就关闭TCP连接</li>\n</ul>\n<h3 id=\"http10\"><a class=\"markdownIt-Anchor\" href=\"#http10\"></a> HTTP/1.0</h3>\n<ul>\n<li>增加了很多命令</li>\n<li>增加status code和header</li>\n<li>多字符集支持、多部分发送、权限、缓存等</li>\n</ul>\n<h3 id=\"http11\"><a class=\"markdownIt-Anchor\" href=\"#http11\"></a> HTTP/1.1</h3>\n<ul>\n<li>持久连接</li>\n<li>pipeline</li>\n<li>增加了host和其他一些命令</li>\n</ul>\n<h3 id=\"http2\"><a class=\"markdownIt-Anchor\" href=\"#http2\"></a> HTTP2</h3>\n<ul>\n<li>所有数据以二进制传输</li>\n<li>同一个连接里面发送多个请求不在需要按照顺序来</li>\n<li>头信息压缩以及推送提高效率的功能</li>\n</ul>\n<h2 id=\"三次握手\"><a class=\"markdownIt-Anchor\" href=\"#三次握手\"></a> 三次握手</h2>\n<p>过程：张三招手–李四点头微笑–李四招手–张三点头微笑 。其中李四连续进行了2个动作，先是点头微笑(回复对方)，然后再次招手(寻求确认)，实际上可以将这两个动作合一，招手的同时点头和微笑(<strong>syn+ack</strong>)。于是四个动作就简化成了三个动作，张三招手–李四点头微笑并招手–张三点头微笑。这就是三次握手的本质，中间的一次动作是两个动作的合并。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/832afe33ly1g8u7gnm82cg20k00p0wsm.gif\" alt=\"\" /></p>\n<blockquote>\n<p>图的解释：</p>\n<ol>\n<li><code>client</code>端发送<code>syn</code>字段，请求连接</li>\n<li><code>server</code>端回复<code>ack</code>、<code>syn</code>字段字段确定与之连接</li>\n<li><code>client</code>接到确认后进入<code>established</code>已建立状态，并发送<code>ack</code>字段确认对方的连接</li>\n</ol>\n</blockquote>\n<h2 id=\"uri-url-urn\"><a class=\"markdownIt-Anchor\" href=\"#uri-url-urn\"></a> URI、URL、URN</h2>\n<h3 id=\"uri\"><a class=\"markdownIt-Anchor\" href=\"#uri\"></a> URI</h3>\n<p>Uniform Resource Identifier ：统一资源标识符</p>\n<p>用来唯一标识互联网上的信息资源，包括URL和URN</p>\n<h3 id=\"url\"><a class=\"markdownIt-Anchor\" href=\"#url\"></a> URL</h3>\n<p>Uniform Resource Locator：统一资源定位器</p>\n<p><code>http://user:pass@host.com:80/path?query=string#hash</code>，此类格式的都叫URL，比如ftp协议</p>\n<h3 id=\"urn\"><a class=\"markdownIt-Anchor\" href=\"#urn\"></a> URN</h3>\n<p>永久统一资源定位符，资源移动之后还能被找到。但目前还没有非常成熟的使用方案</p>\n<h2 id=\"http报文格式\"><a class=\"markdownIt-Anchor\" href=\"#http报文格式\"></a> HTTP报文格式</h2>\n<p><img src=\"https://files.alexhchu.com/2020/08/12/fc3e3d7e65487.png\" alt=\"image-20200812113153236\" /></p>\n<h3 id=\"http方法\"><a class=\"markdownIt-Anchor\" href=\"#http方法\"></a> HTTP方法</h3>\n<p>用来定义对于资源的操作，常用的操作有GET、POST等。</p>\n<h3 id=\"http-code\"><a class=\"markdownIt-Anchor\" href=\"#http-code\"></a> HTTP CODE</h3>\n<p>定义服务器对请求的处理结果，各个区间的CODE有各自的语义。好的HTTP服务可以通过CODE判断结果。</p>\n<h2 id=\"使用nodejs实现一个最简单的服务器\"><a class=\"markdownIt-Anchor\" href=\"#使用nodejs实现一个最简单的服务器\"></a> 使用nodejs实现一个最简单的服务器</h2>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhttp\n  <span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"request come\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.alexhchu.com/2020/08/12/ad90a807a46d3.png\" alt=\"image-20200812114753588\" /></p>\n","categories":[{"name":"HTTP网络协议","path":"api/categories/HTTP网络协议.json"}],"tags":[{"name":"HTTP","path":"api/tags/HTTP.json"},{"name":"网络编程","path":"api/tags/网络编程.json"}]}