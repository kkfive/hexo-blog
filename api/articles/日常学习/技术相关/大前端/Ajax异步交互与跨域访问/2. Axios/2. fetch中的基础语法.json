{"title":"二、fetch中的基础语法","slug":"日常学习/技术相关/大前端/Ajax异步交互与跨域访问/2. Axios/2. fetch中的基础语法","date":"2020-08-23T11:56:01.000Z","updated":"2022-02-21T05:08:50.406Z","comments":true,"path":"api/articles/日常学习/技术相关/大前端/Ajax异步交互与跨域访问/2. Axios/2. fetch中的基础语法.json","excerpt":null,"covers":["https://files.alexhchu.com/2020/08/25/853e9251e6fbc.png"],"content":"<p>参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\">https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch</a></p>\n<h2 id=\"fetch概念\"><a class=\"markdownIt-Anchor\" href=\"#fetch概念\"></a> fetch概念</h2>\n<p>fetch不是Ajax，它诞生的目的是为了代替Ajax，它是js中内置的API。</p>\n<p>基于fetch可以实现客户端和服务端的信息通信</p>\n<p>由于fetch是2018年提出，因此存在浏览器兼容问题。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://v1.hitokoto.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://v1.hitokoto.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n            body<span class=\"token operator\">:</span> <span class=\"token string\">'c=b'</span><span class=\"token punctuation\">,</span>\n            headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'x-www-form-urlcoded'</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            credentials<span class=\"token operator\">:</span> <span class=\"token string\">'include'</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"注意问题\"><a class=\"markdownIt-Anchor\" href=\"#注意问题\"></a> 注意问题</h2>\n<ul>\n<li>GET/HEAD等请求不能设置body</li>\n<li>不管服务器返回的状态是多少，fetch都不认为是失败。并且会执行then方法。</li>\n</ul>\n<h2 id=\"返回结果\"><a class=\"markdownIt-Anchor\" href=\"#返回结果\"></a> 返回结果</h2>\n<p>通过回调函数并不能直接获得响应结果。其返回结果为一个对象。</p>\n<ul>\n<li>\n<p>headers</p>\n<p>包含响应头信息</p>\n</li>\n<li>\n<p>redirected</p>\n<p>是否重定向</p>\n</li>\n<li>\n<p>status</p>\n<p>响应码</p>\n</li>\n<li>\n<p>statusText</p>\n<p>响应文本</p>\n</li>\n<li>\n<p>type</p>\n<p>basic/cors</p>\n</li>\n<li>\n<p>url</p>\n<p>请求地址</p>\n</li>\n</ul>\n<p><img src=\"https://files.alexhchu.com/2020/08/25/853e9251e6fbc.png\" alt=\"image-20200823203137211\" /></p>\n<p>通过其提供的方法获取真正数据。</p>\n","more":"<p>参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\">https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch</a></p>\n<h2 id=\"fetch概念\"><a class=\"markdownIt-Anchor\" href=\"#fetch概念\"></a> fetch概念</h2>\n<p>fetch不是Ajax，它诞生的目的是为了代替Ajax，它是js中内置的API。</p>\n<p>基于fetch可以实现客户端和服务端的信息通信</p>\n<p>由于fetch是2018年提出，因此存在浏览器兼容问题。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://v1.hitokoto.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://v1.hitokoto.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n            body<span class=\"token operator\">:</span> <span class=\"token string\">'c=b'</span><span class=\"token punctuation\">,</span>\n            headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'x-www-form-urlcoded'</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            credentials<span class=\"token operator\">:</span> <span class=\"token string\">'include'</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"注意问题\"><a class=\"markdownIt-Anchor\" href=\"#注意问题\"></a> 注意问题</h2>\n<ul>\n<li>GET/HEAD等请求不能设置body</li>\n<li>不管服务器返回的状态是多少，fetch都不认为是失败。并且会执行then方法。</li>\n</ul>\n<h2 id=\"返回结果\"><a class=\"markdownIt-Anchor\" href=\"#返回结果\"></a> 返回结果</h2>\n<p>通过回调函数并不能直接获得响应结果。其返回结果为一个对象。</p>\n<ul>\n<li>\n<p>headers</p>\n<p>包含响应头信息</p>\n</li>\n<li>\n<p>redirected</p>\n<p>是否重定向</p>\n</li>\n<li>\n<p>status</p>\n<p>响应码</p>\n</li>\n<li>\n<p>statusText</p>\n<p>响应文本</p>\n</li>\n<li>\n<p>type</p>\n<p>basic/cors</p>\n</li>\n<li>\n<p>url</p>\n<p>请求地址</p>\n</li>\n</ul>\n<p><img src=\"https://files.alexhchu.com/2020/08/25/853e9251e6fbc.png\" alt=\"image-20200823203137211\" /></p>\n<p>通过其提供的方法获取真正数据。</p>\n","categories":[{"name":"大前端","path":"api/categories/大前端.json"},{"name":"Ajax异步交互与跨域访问","path":"api/categories/Ajax异步交互与跨域访问.json"},{"name":"Axios","path":"api/categories/Axios.json"}],"tags":[{"name":"fetch","path":"api/tags/fetch.json"}]}