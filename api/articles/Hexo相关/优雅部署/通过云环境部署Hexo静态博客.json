{"title":"通过云环境部署Hexo静态博客","slug":"Hexo相关/优雅部署/通过云环境部署Hexo静态博客","date":"2020-02-08T10:13:57.000Z","updated":"2022-02-21T07:18:57.041Z","comments":true,"path":"api/articles/Hexo相关/优雅部署/通过云环境部署Hexo静态博客.json","excerpt":null,"covers":["https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2k1hrj300v00v0pq.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbk1iwinatj300x011a9t.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp65mp1fmj30mf09yt8v.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp6kb1mooj30yl0ow3zx.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp6kb05msj3081059t8k.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp71nzelyj307x08vjre.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp71o21q5j30zb0fy3zj.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7le5npwj31go0p8di9.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7o020i9j30qe0jggmw.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2jr8xj300v00w0sh.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7qtwbgfj30fi02574e.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7stkwfrj309q02hq2y.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7u3dunyg30k70h3qf8.gif","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7z8hq5mj31h80qbt9r.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7y9kxi2g30kd0h4dpx.gif","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7z8hhw6j31a40do74z.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp85sa76zj318q0k3t9w.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp878bu5kj31dk0c5t9j.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8btv3lpj314g0h9my9.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2ghicj300v00t0oy.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8exxvkxj30qk0gnaak.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8fgyskjj31em0oo765.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8h62bj4j30ok0icdho.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8jsejhsj31940pwgob.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8mc0akxj314w0pwtbv.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8qu2bsbg315f09jdhq.gif","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8rcg4l9j30pj023747.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8v6phyfj30mp09zjs0.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8xfds56g30wu0a41b2.gif","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8yst86cj30ca0gajro.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp8zjrbllj30e701dglk.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp91qbxpkj311k0pdjtw.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp99m9l83j30k60a5751.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9byripij31aj0ks0ui.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g281y0j300v00s0rx.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9jqqf3hg30kz074wfb.gif","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9ln7w65g30jo0a83zk.gif","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9ngjfuug30v60a1dii.gif","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9nv4ojyj31f70jv3zw.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp7at308uj30nt0f6mxn.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9vhm7tbj30ig02gweg.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9wgskxxj30kj03k3z7.jpg","https://tva1.sinaimg.cn/large/005B3XPgly1gbp9xghv78j30gm04t74v.jpg"],"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>新型冠状病毒好可怕，出门还得带口罩<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2k1hrj300v00v0pq.jpg\" alt=\"口罩-小康博客\" /></p>\n<p>建议在阅读本教程前先学会如何使用hexo。<font color=red><strong>此教程不是零基础学会hexo系列。</strong></font></p>\n<ol>\n<li>\n<p>我为什么要出这份教程？</p>\n<p>首先说明，我自己也是才转到静态博客不久。今天应该是第八天。当初迟迟没有转到静态博客的主要原因是因为发博客不方便。毕竟hexo是本地的。但是一次偶然间，我发现了云环境（其实就是一个网页版的vscode），但其提供服务环境（Ubuntu、node等）。于是我突发奇想，试试能不能通过这个来实现在线写博客。最后成功了，因为我觉得很简单。<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1iwinatj300x011a9t.jpg\" alt=\"脸红-小康博客\" /></p>\n</li>\n<li>\n<p>实现云部署需要准备什么。</p>\n<p>必须：</p>\n<ul>\n<li>\n<p>git的基本知识</p>\n<p>我认为这一点是必须的，不然不好操作。</p>\n</li>\n<li>\n<p>两个git仓库</p>\n<p>coding，码云，GitHub等均可以。</p>\n</li>\n</ul>\n<p>非必须：</p>\n<ul>\n<li>\n<p>密钥</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"your_email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里不写详细教程了。总之生成完之后你的用户目录里会出现一个.ssh的隐藏文件（如果看不到，请打开查看隐藏的设置）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp65mp1fmj30mf09yt8v.jpg\" alt=\"QQ截图20200208182813.png\" /></p>\n<p>其中<code>.pub</code>结尾的就是你的公钥了。这个是我们一会儿需要用到的。</p>\n<p>如果使用这种方式，无法使用hexo自动部署。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h2>\n<p>首先我们来捋一下思路。</p>\n<ol>\n<li>既然我们要部署静态博客，那么就需要将<code>public</code>目录上传。（当然，<code>hexo d</code>会帮我我们做这件事情）所以我们这时就需要一个仓库。为了方便我管他叫<font color=red><strong>仓库1</strong></font></li>\n<li>那我们想做的还有在线写博客，那么就需要将博客的全部源代码上传，这时我们就又需要一个仓库。我管他叫<font color=red><strong>仓库2</strong></font></li>\n</ol>\n<p>既然明白了两个仓库的作用，那我们就可以开始了。</p>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\"></a> 开始</h2>\n<p>这里我使用<code>coding</code>，新建两个仓库。个人版与团队版都一样。</p>\n<p>创建两个项目，我这里一个叫page代表仓库1一个叫home代表仓库2</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp6kb1mooj30yl0ow3zx.jpg\" alt=\"1.png\" /></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp6kb05msj3081059t8k.jpg\" alt=\"2.png\" /><br />\n然后我们为了方便添加公钥，如果上一步没有生成公钥那么认证的时候可以使用账号密码。（将公钥文件右键用文本文档打开，复制里边的内容即可）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp71nzelyj307x08vjre.jpg\" alt=\"3.png\" /><br />\n<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp71o21q5j30zb0fy3zj.jpg\" alt=\"4.png\" /></p>\n<h2 id=\"1-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#1-配置文件\"></a> 1. 配置文件</h2>\n<p>此步骤是为了方便演示，正常情况下你已经可以通过这个命令部署了。所以如果已经配置了的小伙伴无需新建仓库，来执行此步骤。<font color=red><strong>保留原来的即可。并跳过此步骤看下一个步骤</strong></font></p>\n<p>这里我将我曾经的博客下载下来作为演示，首先将根目录的配置文件中的配置添加上我们的仓库。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> git@e.coding.net<span class=\"token punctuation\">:</span>imtzk/page.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>安装插件，这样才可以使用<code>hexo d</code>的自动部署</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save hexo-deployer-git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后我们<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>测试下是否能够自动部署。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7le5npwj31go0p8di9.jpg\" alt=\"6.png\" /></p>\n<p>可以看到 成功部署了</p>\n<h2 id=\"2-上传源文件\"><a class=\"markdownIt-Anchor\" href=\"#2-上传源文件\"></a> 2. 上传源文件</h2>\n<p>我们上传我们的博客源码到我们的第二个仓库。</p>\n<p>那么执行的操作是：</p>\n<ol>\n<li>\n<p>在博客目录打开命令行工具</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7o020i9j30qe0jggmw.jpg\" alt=\"7.png\" /></p>\n<p>命令行工具自行斟酌，使用git的bash也可以。不过我在这里推荐一款<code>cmder</code>的工具。很好用，我很喜欢<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2jr8xj300v00w0sh.jpg\" alt=\"-小康博客\" /></p>\n</li>\n<li>\n<p>首先输入命令<code>git init</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7qtwbgfj30fi02574e.jpg\" alt=\"8.png\" /></p>\n</li>\n<li>\n<p>然后执行添加文件的命令<code>git add .</code></p>\n<p>这里的<code>.</code>代表添加此目录所有文件，但默认不会添加<code>public</code>和<code>moudles</code>等目录。你也不需要担心，因为这些都是程序生成的。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7stkwfrj309q02hq2y.jpg\" alt=\"9.png\" /></p>\n</li>\n<li>\n<p>接下来是提交修改命令<code>git commit -m '第一次提交'</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7u3dunyg30k70h3qf8.gif\" alt=\"gif-1\" /></p>\n</li>\n<li>\n<p>接下来我们添加远程的仓库</p>\n<p>进入项目，点击代码仓库就可以看到我们的项目地址了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7z8hq5mj31h80qbt9r.jpg\" alt=\"10.png\" /></p>\n<p>因为我已经添加过公钥了，所以我们直接用ssh的方式链接。输入以下命令即可上传到远程仓库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin 你的地址\n<span class=\"token function\">git</span> push -u origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7y9kxi2g30kd0h4dpx.gif\" alt=\"git-2.gif\" /></p>\n</li>\n<li>\n<p>检查一下</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7z8hhw6j31a40do74z.jpg\" alt=\"11.png\" /></p>\n<p>我已经成功将博客源代码传到了第二个仓库。</p>\n</li>\n</ol>\n<h2 id=\"3-使用云环境\"><a class=\"markdownIt-Anchor\" href=\"#3-使用云环境\"></a> 3. 使用云环境</h2>\n<h3 id=\"写文章\"><a class=\"markdownIt-Anchor\" href=\"#写文章\"></a> 写文章</h3>\n<p>为什么使用coding呢？它的优势就来了，它可以直接点进去云环境，如果使用其他平台需要进入腾讯开发者平台。大家自行百度，这里不提供链接了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp85sa76zj318q0k3t9w.jpg\" alt=\"12.png\" /></p>\n<p>进入云环境后先别急着创建项目，我们先点设置，将公钥黏贴到我们的coding中。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp878bu5kj31dk0c5t9j.jpg\" alt=\"13.png\" /></p>\n<p>这一步和开始我们做的那个一样。这里就不演示了。</p>\n<p>将公钥添加到coding后，我们开始创建项目。</p>\n<ol>\n<li>\n<p>新建工作空间</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8btv3lpj314g0h9my9.jpg\" alt=\"14.png\" /></p>\n<p>如图所示，环境选择<code>node.js</code>，当然选服务器或者<code>Ubuntu</code>也可以，至于怎么配置自行百度。<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2ghicj300v00t0oy.jpg\" alt=\"-小康博客\" />这里强烈不建议非<code>node.js</code>环境。</p>\n<p>代码来源选择仓库，仓库的地址就是我们第二个仓库的地址。</p>\n</li>\n<li>\n<p>创建</p>\n<p>创建完成后，我们进入工作空间。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8exxvkxj30qk0gnaak.jpg\" alt=\"15.png\" /></p>\n</li>\n<li>\n<p>初始化环境</p>\n<p>等上一步加载完之后，就会出现这个界面。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8fgyskjj31em0oo765.jpg\" alt=\"16.png\" /></p>\n<p>如果你的界面打开之后是英文的，那么点击左边倒数第二个按钮，然后卸载掉<code>Chinese...</code>这个插件，然后在重装一下就好了。（重装后需要重新进入环境，右下角有提示。）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8h62bj4j30ok0icdho.jpg\" alt=\"17.png\" /></p>\n<p>等待一会儿，我们的项目也就克隆了过来。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8jsejhsj31940pwgob.jpg\" alt=\"18.png\" /></p>\n<p>如果迟迟不出现，那么点击工具栏的终端-&gt;新建终端-&gt;输出。就可以看到进度了。如果出现错误应该就是你没有加公钥的问题了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8mc0akxj314w0pwtbv.jpg\" alt=\"19.png\" /></p>\n</li>\n<li>\n<p>给cloud studio安装hexo</p>\n<p>点击工具栏的终端-&gt;新建终端-&gt;下边点击终端。输入一下两个命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g hexo-cli\nhexo <span class=\"token function\">install</span> hexo --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8qu2bsbg315f09jdhq.gif\" alt=\"gif-3.gif\" /></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8rcg4l9j30pj023747.jpg\" alt=\"20.png\" /></p>\n<p>等待安装完成即可。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8v6phyfj30mp09zjs0.jpg\" alt=\"21.png\" /></p>\n<p>不出意外，看到上面的提示 说明安装完成了，可以运行一下命令<code>hexo g</code>测试是否生成了文章。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8xfds56g30wu0a41b2.gif\" alt=\"git-4.gif\" /></p>\n<p>然后我们可以看到左侧，已经生成了<code>public</code>目录，并且终端也没有报错。（如果报错，说明你的文件有问题，检查一下主题文件是否存在。）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8yst86cj30ca0gajro.jpg\" alt=\"22.png\" /></p>\n</li>\n<li>\n<p>用cloud studio写第一篇文章</p>\n<p>在终端中输入命令<code>hexo new 文章名</code>来创建文章</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8zjrbllj30e701dglk.jpg\" alt=\"23.png\" /></p>\n<p>然后打开<code>/source/_posts</code>就可以看到你刚刚创建的文章了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp91qbxpkj311k0pdjtw.jpg\" alt=\"24.png\" /></p>\n<p>写完文章后，（这个里边也是<code>ctrl+s</code>保存文章哦）</p>\n<p>我们设置一下我们的git标识 也就是邮箱和名字。这是git必须要求设置的。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"you@example.com\"</span>\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"Your Name\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来我们在终端输入hexo发布三连<code>hexo cl&amp;&amp;hexo g &amp;&amp; hexo d</code>的命令。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp99m9l83j30k60a5751.jpg\" alt=\"25.png\" /></p>\n<p>这是已经发布成功了。</p>\n</li>\n<li>\n<p>查看文章</p>\n<p>上一步我们已经发布完成了。接下来打开看一下。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9byripij31aj0ks0ui.jpg\" alt=\"26.png\" /></p>\n<p>可以看到我们刚刚上传了，因为coding需要实名，而我还没有实名认证，因此不演示界面了。</p>\n</li>\n<li>\n<p>结束</p>\n<p>此时我们就解决了在线写文章的问题了。</p>\n</li>\n</ol>\n<h3 id=\"同步文章到仓库\"><a class=\"markdownIt-Anchor\" href=\"#同步文章到仓库\"></a> 同步文章到仓库</h3>\n<p>为什么会有这一步？其实很简单，你写的文章都在你的云环境中，并没有同步到你的第二个仓库里（是不是忘了还有这个仓库？<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g281y0j300v00s0rx.jpg\" alt=\"-小康博客\" />）接下来我们就将代码同步到第二个仓库里。</p>\n<ol>\n<li>\n<p>添加代码<code>git add .</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9jqqf3hg30kz074wfb.gif\" alt=\"git-5.gif\" /></p>\n</li>\n<li>\n<p>然后提交<code>git commit -m 'cloud提交'</code></p>\n<p>引号里边的内容根据自己写。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9ln7w65g30jo0a83zk.gif\" alt=\"git-6.gif\" /></p>\n</li>\n<li>\n<p>提交代码到远程仓库<code>git push origin master</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9ngjfuug30v60a1dii.gif\" alt=\"git-7.gif\" /></p>\n<p>提交完后可以看到代码仓库的提交记录</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9nv4ojyj31f70jv3zw.jpg\" alt=\"27.png\" /></p>\n</li>\n</ol>\n<h2 id=\"4-克隆到本地\"><a class=\"markdownIt-Anchor\" href=\"#4-克隆到本地\"></a> 4. 克隆到本地</h2>\n<p>也就是本地编辑，那么第一步需要克隆项目到本地。</p>\n<p><code>git clone 你的项目地址</code></p>\n<p>注意这里的项目地址指的是仓库2，也就是博客全部文件的那个仓库。</p>\n<p>克隆完之后，在此目录打开命令行工具，<code>npm install hexo --save</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7at308uj30nt0f6mxn.jpg\" alt=\"5.png\" /></p>\n<p>等待安装完成后，就可以正常的操作了。也就是你平时你怎么用，克隆回来还是怎么用。</p>\n<h3 id=\"上传\"><a class=\"markdownIt-Anchor\" href=\"#上传\"></a> 上传</h3>\n<p>这里讲一下如何将本地的文件同步到第二个仓库里。</p>\n<ol>\n<li>\n<p>将项目克隆到本地，也就是上面文字介绍的。这里不演示了。</p>\n</li>\n<li>\n<p>同样的我新建一篇文章，并且编辑。(这里跳过了部署的过程，当然你可以部署完后在同步)</p>\n</li>\n<li>\n<p>添加文件<code>git add .</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9vhm7tbj30ig02gweg.jpg\" alt=\"28.png\" /></p>\n</li>\n<li>\n<p>提交修改<code>git commit -m '本地修改'</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9wgskxxj30kj03k3z7.jpg\" alt=\"29.png\" /></p>\n</li>\n<li>\n<p>推送到远端<code>git push origin master</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9xghv78j30gm04t74v.jpg\" alt=\"30.png\" /></p>\n</li>\n</ol>\n<p>至此，基本上就完成了大部分操作了。</p>\n<h2 id=\"5-其他问题\"><a class=\"markdownIt-Anchor\" href=\"#5-其他问题\"></a> 5. 其他问题</h2>\n<p>在日常使用的工程中，可能会遇到这种情况</p>\n<blockquote>\n<p>本地代码推送到了仓库，使用<code>cloud studio</code>发表了两个文章，在使用本地的代码无法推送了。或者是本地推送了几次，<code>cloud studio</code>无法推送了。</p>\n</blockquote>\n<p>这样的原因很简单，是因为你当前的版本与服务器的版本不一致造成的。这里涉及到git协同工作的问题了。</p>\n<p>如果又能力的小伙伴可以使用<code>git pull</code>把最新的提交拉去下来。</p>\n<p>当然我相信大多数小伙伴是不太会操作的。那解决方法也很简单，删掉以前的文件（或云环境），重新clone（创建一个云环境）一下就好了。</p>\n<p>当然删除之前记得备份一下仓库里没有的文章或修改的配置。</p>\n<p>所以 强烈建议大家每次发表完文章，同步一下自己的修改到第二个仓库。</p>\n<p>最后，如果我的文章对你有帮助，那么你可以点下边的赞赏按钮，请作者喝杯咖啡哦！</p>\n<p>如果图片失效请在下方留言，或联系作者。</p>\n<center><font color=red size=5><b>原创不易，所有文字及图片都是我自己一个一个弄得。</b></font></center>\n<center><font color=red size=5><b>搬砖党请尊重一下作者，转载请标明出处。</b></font></center>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>新型冠状病毒好可怕，出门还得带口罩<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2k1hrj300v00v0pq.jpg\" alt=\"口罩-小康博客\" /></p>\n<p>建议在阅读本教程前先学会如何使用hexo。<font color=red><strong>此教程不是零基础学会hexo系列。</strong></font></p>\n<ol>\n<li>\n<p>我为什么要出这份教程？</p>\n<p>首先说明，我自己也是才转到静态博客不久。今天应该是第八天。当初迟迟没有转到静态博客的主要原因是因为发博客不方便。毕竟hexo是本地的。但是一次偶然间，我发现了云环境（其实就是一个网页版的vscode），但其提供服务环境（Ubuntu、node等）。于是我突发奇想，试试能不能通过这个来实现在线写博客。最后成功了，因为我觉得很简单。<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1iwinatj300x011a9t.jpg\" alt=\"脸红-小康博客\" /></p>\n</li>\n<li>\n<p>实现云部署需要准备什么。</p>\n<p>必须：</p>\n<ul>\n<li>\n<p>git的基本知识</p>\n<p>我认为这一点是必须的，不然不好操作。</p>\n</li>\n<li>\n<p>两个git仓库</p>\n<p>coding，码云，GitHub等均可以。</p>\n</li>\n</ul>\n<p>非必须：</p>\n<ul>\n<li>\n<p>密钥</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"your_email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里不写详细教程了。总之生成完之后你的用户目录里会出现一个.ssh的隐藏文件（如果看不到，请打开查看隐藏的设置）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp65mp1fmj30mf09yt8v.jpg\" alt=\"QQ截图20200208182813.png\" /></p>\n<p>其中<code>.pub</code>结尾的就是你的公钥了。这个是我们一会儿需要用到的。</p>\n<p>如果使用这种方式，无法使用hexo自动部署。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h2>\n<p>首先我们来捋一下思路。</p>\n<ol>\n<li>既然我们要部署静态博客，那么就需要将<code>public</code>目录上传。（当然，<code>hexo d</code>会帮我我们做这件事情）所以我们这时就需要一个仓库。为了方便我管他叫<font color=red><strong>仓库1</strong></font></li>\n<li>那我们想做的还有在线写博客，那么就需要将博客的全部源代码上传，这时我们就又需要一个仓库。我管他叫<font color=red><strong>仓库2</strong></font></li>\n</ol>\n<p>既然明白了两个仓库的作用，那我们就可以开始了。</p>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\"></a> 开始</h2>\n<p>这里我使用<code>coding</code>，新建两个仓库。个人版与团队版都一样。</p>\n<p>创建两个项目，我这里一个叫page代表仓库1一个叫home代表仓库2</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp6kb1mooj30yl0ow3zx.jpg\" alt=\"1.png\" /></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp6kb05msj3081059t8k.jpg\" alt=\"2.png\" /><br />\n然后我们为了方便添加公钥，如果上一步没有生成公钥那么认证的时候可以使用账号密码。（将公钥文件右键用文本文档打开，复制里边的内容即可）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp71nzelyj307x08vjre.jpg\" alt=\"3.png\" /><br />\n<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp71o21q5j30zb0fy3zj.jpg\" alt=\"4.png\" /></p>\n<h2 id=\"1-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#1-配置文件\"></a> 1. 配置文件</h2>\n<p>此步骤是为了方便演示，正常情况下你已经可以通过这个命令部署了。所以如果已经配置了的小伙伴无需新建仓库，来执行此步骤。<font color=red><strong>保留原来的即可。并跳过此步骤看下一个步骤</strong></font></p>\n<p>这里我将我曾经的博客下载下来作为演示，首先将根目录的配置文件中的配置添加上我们的仓库。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> git@e.coding.net<span class=\"token punctuation\">:</span>imtzk/page.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>安装插件，这样才可以使用<code>hexo d</code>的自动部署</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save hexo-deployer-git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后我们<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>测试下是否能够自动部署。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7le5npwj31go0p8di9.jpg\" alt=\"6.png\" /></p>\n<p>可以看到 成功部署了</p>\n<h2 id=\"2-上传源文件\"><a class=\"markdownIt-Anchor\" href=\"#2-上传源文件\"></a> 2. 上传源文件</h2>\n<p>我们上传我们的博客源码到我们的第二个仓库。</p>\n<p>那么执行的操作是：</p>\n<ol>\n<li>\n<p>在博客目录打开命令行工具</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7o020i9j30qe0jggmw.jpg\" alt=\"7.png\" /></p>\n<p>命令行工具自行斟酌，使用git的bash也可以。不过我在这里推荐一款<code>cmder</code>的工具。很好用，我很喜欢<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2jr8xj300v00w0sh.jpg\" alt=\"-小康博客\" /></p>\n</li>\n<li>\n<p>首先输入命令<code>git init</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7qtwbgfj30fi02574e.jpg\" alt=\"8.png\" /></p>\n</li>\n<li>\n<p>然后执行添加文件的命令<code>git add .</code></p>\n<p>这里的<code>.</code>代表添加此目录所有文件，但默认不会添加<code>public</code>和<code>moudles</code>等目录。你也不需要担心，因为这些都是程序生成的。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7stkwfrj309q02hq2y.jpg\" alt=\"9.png\" /></p>\n</li>\n<li>\n<p>接下来是提交修改命令<code>git commit -m '第一次提交'</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7u3dunyg30k70h3qf8.gif\" alt=\"gif-1\" /></p>\n</li>\n<li>\n<p>接下来我们添加远程的仓库</p>\n<p>进入项目，点击代码仓库就可以看到我们的项目地址了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7z8hq5mj31h80qbt9r.jpg\" alt=\"10.png\" /></p>\n<p>因为我已经添加过公钥了，所以我们直接用ssh的方式链接。输入以下命令即可上传到远程仓库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin 你的地址\n<span class=\"token function\">git</span> push -u origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7y9kxi2g30kd0h4dpx.gif\" alt=\"git-2.gif\" /></p>\n</li>\n<li>\n<p>检查一下</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7z8hhw6j31a40do74z.jpg\" alt=\"11.png\" /></p>\n<p>我已经成功将博客源代码传到了第二个仓库。</p>\n</li>\n</ol>\n<h2 id=\"3-使用云环境\"><a class=\"markdownIt-Anchor\" href=\"#3-使用云环境\"></a> 3. 使用云环境</h2>\n<h3 id=\"写文章\"><a class=\"markdownIt-Anchor\" href=\"#写文章\"></a> 写文章</h3>\n<p>为什么使用coding呢？它的优势就来了，它可以直接点进去云环境，如果使用其他平台需要进入腾讯开发者平台。大家自行百度，这里不提供链接了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp85sa76zj318q0k3t9w.jpg\" alt=\"12.png\" /></p>\n<p>进入云环境后先别急着创建项目，我们先点设置，将公钥黏贴到我们的coding中。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp878bu5kj31dk0c5t9j.jpg\" alt=\"13.png\" /></p>\n<p>这一步和开始我们做的那个一样。这里就不演示了。</p>\n<p>将公钥添加到coding后，我们开始创建项目。</p>\n<ol>\n<li>\n<p>新建工作空间</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8btv3lpj314g0h9my9.jpg\" alt=\"14.png\" /></p>\n<p>如图所示，环境选择<code>node.js</code>，当然选服务器或者<code>Ubuntu</code>也可以，至于怎么配置自行百度。<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g2ghicj300v00t0oy.jpg\" alt=\"-小康博客\" />这里强烈不建议非<code>node.js</code>环境。</p>\n<p>代码来源选择仓库，仓库的地址就是我们第二个仓库的地址。</p>\n</li>\n<li>\n<p>创建</p>\n<p>创建完成后，我们进入工作空间。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8exxvkxj30qk0gnaak.jpg\" alt=\"15.png\" /></p>\n</li>\n<li>\n<p>初始化环境</p>\n<p>等上一步加载完之后，就会出现这个界面。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8fgyskjj31em0oo765.jpg\" alt=\"16.png\" /></p>\n<p>如果你的界面打开之后是英文的，那么点击左边倒数第二个按钮，然后卸载掉<code>Chinese...</code>这个插件，然后在重装一下就好了。（重装后需要重新进入环境，右下角有提示。）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8h62bj4j30ok0icdho.jpg\" alt=\"17.png\" /></p>\n<p>等待一会儿，我们的项目也就克隆了过来。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8jsejhsj31940pwgob.jpg\" alt=\"18.png\" /></p>\n<p>如果迟迟不出现，那么点击工具栏的终端-&gt;新建终端-&gt;输出。就可以看到进度了。如果出现错误应该就是你没有加公钥的问题了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8mc0akxj314w0pwtbv.jpg\" alt=\"19.png\" /></p>\n</li>\n<li>\n<p>给cloud studio安装hexo</p>\n<p>点击工具栏的终端-&gt;新建终端-&gt;下边点击终端。输入一下两个命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g hexo-cli\nhexo <span class=\"token function\">install</span> hexo --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8qu2bsbg315f09jdhq.gif\" alt=\"gif-3.gif\" /></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8rcg4l9j30pj023747.jpg\" alt=\"20.png\" /></p>\n<p>等待安装完成即可。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8v6phyfj30mp09zjs0.jpg\" alt=\"21.png\" /></p>\n<p>不出意外，看到上面的提示 说明安装完成了，可以运行一下命令<code>hexo g</code>测试是否生成了文章。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8xfds56g30wu0a41b2.gif\" alt=\"git-4.gif\" /></p>\n<p>然后我们可以看到左侧，已经生成了<code>public</code>目录，并且终端也没有报错。（如果报错，说明你的文件有问题，检查一下主题文件是否存在。）</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8yst86cj30ca0gajro.jpg\" alt=\"22.png\" /></p>\n</li>\n<li>\n<p>用cloud studio写第一篇文章</p>\n<p>在终端中输入命令<code>hexo new 文章名</code>来创建文章</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp8zjrbllj30e701dglk.jpg\" alt=\"23.png\" /></p>\n<p>然后打开<code>/source/_posts</code>就可以看到你刚刚创建的文章了。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp91qbxpkj311k0pdjtw.jpg\" alt=\"24.png\" /></p>\n<p>写完文章后，（这个里边也是<code>ctrl+s</code>保存文章哦）</p>\n<p>我们设置一下我们的git标识 也就是邮箱和名字。这是git必须要求设置的。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"you@example.com\"</span>\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"Your Name\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来我们在终端输入hexo发布三连<code>hexo cl&amp;&amp;hexo g &amp;&amp; hexo d</code>的命令。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp99m9l83j30k60a5751.jpg\" alt=\"25.png\" /></p>\n<p>这是已经发布成功了。</p>\n</li>\n<li>\n<p>查看文章</p>\n<p>上一步我们已经发布完成了。接下来打开看一下。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9byripij31aj0ks0ui.jpg\" alt=\"26.png\" /></p>\n<p>可以看到我们刚刚上传了，因为coding需要实名，而我还没有实名认证，因此不演示界面了。</p>\n</li>\n<li>\n<p>结束</p>\n<p>此时我们就解决了在线写文章的问题了。</p>\n</li>\n</ol>\n<h3 id=\"同步文章到仓库\"><a class=\"markdownIt-Anchor\" href=\"#同步文章到仓库\"></a> 同步文章到仓库</h3>\n<p>为什么会有这一步？其实很简单，你写的文章都在你的云环境中，并没有同步到你的第二个仓库里（是不是忘了还有这个仓库？<img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbk1g281y0j300v00s0rx.jpg\" alt=\"-小康博客\" />）接下来我们就将代码同步到第二个仓库里。</p>\n<ol>\n<li>\n<p>添加代码<code>git add .</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9jqqf3hg30kz074wfb.gif\" alt=\"git-5.gif\" /></p>\n</li>\n<li>\n<p>然后提交<code>git commit -m 'cloud提交'</code></p>\n<p>引号里边的内容根据自己写。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9ln7w65g30jo0a83zk.gif\" alt=\"git-6.gif\" /></p>\n</li>\n<li>\n<p>提交代码到远程仓库<code>git push origin master</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9ngjfuug30v60a1dii.gif\" alt=\"git-7.gif\" /></p>\n<p>提交完后可以看到代码仓库的提交记录</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9nv4ojyj31f70jv3zw.jpg\" alt=\"27.png\" /></p>\n</li>\n</ol>\n<h2 id=\"4-克隆到本地\"><a class=\"markdownIt-Anchor\" href=\"#4-克隆到本地\"></a> 4. 克隆到本地</h2>\n<p>也就是本地编辑，那么第一步需要克隆项目到本地。</p>\n<p><code>git clone 你的项目地址</code></p>\n<p>注意这里的项目地址指的是仓库2，也就是博客全部文件的那个仓库。</p>\n<p>克隆完之后，在此目录打开命令行工具，<code>npm install hexo --save</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp7at308uj30nt0f6mxn.jpg\" alt=\"5.png\" /></p>\n<p>等待安装完成后，就可以正常的操作了。也就是你平时你怎么用，克隆回来还是怎么用。</p>\n<h3 id=\"上传\"><a class=\"markdownIt-Anchor\" href=\"#上传\"></a> 上传</h3>\n<p>这里讲一下如何将本地的文件同步到第二个仓库里。</p>\n<ol>\n<li>\n<p>将项目克隆到本地，也就是上面文字介绍的。这里不演示了。</p>\n</li>\n<li>\n<p>同样的我新建一篇文章，并且编辑。(这里跳过了部署的过程，当然你可以部署完后在同步)</p>\n</li>\n<li>\n<p>添加文件<code>git add .</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9vhm7tbj30ig02gweg.jpg\" alt=\"28.png\" /></p>\n</li>\n<li>\n<p>提交修改<code>git commit -m '本地修改'</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9wgskxxj30kj03k3z7.jpg\" alt=\"29.png\" /></p>\n</li>\n<li>\n<p>推送到远端<code>git push origin master</code></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbp9xghv78j30gm04t74v.jpg\" alt=\"30.png\" /></p>\n</li>\n</ol>\n<p>至此，基本上就完成了大部分操作了。</p>\n<h2 id=\"5-其他问题\"><a class=\"markdownIt-Anchor\" href=\"#5-其他问题\"></a> 5. 其他问题</h2>\n<p>在日常使用的工程中，可能会遇到这种情况</p>\n<blockquote>\n<p>本地代码推送到了仓库，使用<code>cloud studio</code>发表了两个文章，在使用本地的代码无法推送了。或者是本地推送了几次，<code>cloud studio</code>无法推送了。</p>\n</blockquote>\n<p>这样的原因很简单，是因为你当前的版本与服务器的版本不一致造成的。这里涉及到git协同工作的问题了。</p>\n<p>如果又能力的小伙伴可以使用<code>git pull</code>把最新的提交拉去下来。</p>\n<p>当然我相信大多数小伙伴是不太会操作的。那解决方法也很简单，删掉以前的文件（或云环境），重新clone（创建一个云环境）一下就好了。</p>\n<p>当然删除之前记得备份一下仓库里没有的文章或修改的配置。</p>\n<p>所以 强烈建议大家每次发表完文章，同步一下自己的修改到第二个仓库。</p>\n<p>最后，如果我的文章对你有帮助，那么你可以点下边的赞赏按钮，请作者喝杯咖啡哦！</p>\n<p>如果图片失效请在下方留言，或联系作者。</p>\n<center><font color=red size=5><b>原创不易，所有文字及图片都是我自己一个一个弄得。</b></font></center>\n<center><font color=red size=5><b>搬砖党请尊重一下作者，转载请标明出处。</b></font></center>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"优雅部署","path":"api/categories/优雅部署.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"配置环境","path":"api/tags/配置环境.json"}]}