{"title":"5、谷粒后台用户、角色管理组件","slug":"日常学习/技术相关/React/尚硅谷/项目实战/5、谷粒后台用户、角色管理组件","date":"2020-11-19T07:10:26.000Z","updated":"2022-02-21T05:08:50.402Z","comments":true,"path":"api/articles/日常学习/技术相关/React/尚硅谷/项目实战/5、谷粒后台用户、角色管理组件.json","excerpt":null,"covers":["https://rmt.ladydaily.com/fetch/tzk/storage/20201119224254.png?w=1280&amp;fmt=jpg"],"content":"<h2 id=\"基本布局\"><a class=\"markdownIt-Anchor\" href=\"#基本布局\"></a> 基本布局</h2>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token operator\">&lt;</span>Table\n    bordered\n    rowKey<span class=\"token operator\">=</span><span class=\"token string\">'_id'</span>\n    dataSource<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>roles<span class=\"token punctuation\">&#125;</span>\n    columns<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">&#125;</span>\n    pagination<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> defaultPageSize<span class=\"token operator\">:</span> <span class=\"token constant\">PAGE_SIZE</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    rowSelection<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'radio'</span><span class=\"token punctuation\">,</span>\n            selectedRowKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>role<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">onSelect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">role</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 选择某个radio时回调</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                        role\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    onRow<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onRow<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>通过<code>rowSelection</code>指定表格为<code>radio</code>类型。<code>onRow</code>为点击行时的回调函数。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">onRow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">role</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 点击行</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'row onClick()'</span><span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// alert('点击行')</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                role\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"树形结构\"><a class=\"markdownIt-Anchor\" href=\"#树形结构\"></a> 树形结构</h2>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201119224254.png?w=1280&amp;fmt=jpg\" alt=\"image-20201119224247690\" /></p>\n<p>在AntD4中通过使用<code>treeData</code>来指定树中的数据</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Tree</span>\n      <span class=\"token attr-name\">checkable</span>\n      <span class=\"token attr-name\">defaultExpandAll</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;true&#125;</span>\n      <span class=\"token attr-name\">checkedKeys</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;checkedKeys&#125;</span>\n      <span class=\"token attr-name\">onCheck</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;this.onCheck&#125;</span>\n      <span class=\"token attr-name\">treeData</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;this.treeNodes&#125;</span>\n      <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token function-variable function\">getTreeNodes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">menuList</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'平台'</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'all'</span><span class=\"token punctuation\">,</span> children<span class=\"token operator\">:</span> menuList <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>得到最新状态，通过在生命周期<code>getDerivedStateFromProps</code>返回需要设置的状态。（<code>componentWillReceiveProps</code>即将废弃）</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>role <span class=\"token operator\">!==</span> prevState<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 将上一个状态的值改编为点击的状态</span>\n      prevState<span class=\"token punctuation\">.</span>checkedKeys <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>menus\n      prevState<span class=\"token punctuation\">.</span>role <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">.</span>role\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        checkedKeys<span class=\"token operator\">:</span> prevState<span class=\"token punctuation\">.</span>checkedKeys\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>大体思路如下：</p>\n<ol>\n<li>\n<p>当每次点击一行数据时，都会触发父组件<code>onRow</code>事件。而在这个组件中进行了重新为<code>role</code>对象赋值的操作。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">onRow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">role</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 点击行</span>\n            <span class=\"token comment\">// console.log('row onClick()', role)</span>\n            <span class=\"token comment\">// alert('点击行')</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                role\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>因此，他也会重新将role对象传递给子组件</p>\n</li>\n<li>\n<p>子组件由于具有<code>getDerivedStateFromProps</code>生命周期，因此每次接收到新数据都会触发该生命周期。</p>\n<p>此时，在此生命周期就可以进行判断。当传入对象与当前<code>state</code>记录的对象不一致时则更新数据。将自身记录的对象替换为新传入的对象。（选中的<code>Keys</code>也是替换）</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 判断传入对象与当前记录的对象是否是同一个对象</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>role <span class=\"token operator\">!==</span> prevState<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 将刚传入的值赋值给已保存的值</span>\n      checkedKeys<span class=\"token operator\">:</span> nextProps<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>menus<span class=\"token punctuation\">,</span>\n      role<span class=\"token operator\">:</span> nextProps<span class=\"token punctuation\">.</span>role\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n","more":"<h2 id=\"基本布局\"><a class=\"markdownIt-Anchor\" href=\"#基本布局\"></a> 基本布局</h2>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token operator\">&lt;</span>Table\n    bordered\n    rowKey<span class=\"token operator\">=</span><span class=\"token string\">'_id'</span>\n    dataSource<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>roles<span class=\"token punctuation\">&#125;</span>\n    columns<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">&#125;</span>\n    pagination<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> defaultPageSize<span class=\"token operator\">:</span> <span class=\"token constant\">PAGE_SIZE</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    rowSelection<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'radio'</span><span class=\"token punctuation\">,</span>\n            selectedRowKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>role<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">onSelect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">role</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 选择某个radio时回调</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                        role\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    onRow<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onRow<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>通过<code>rowSelection</code>指定表格为<code>radio</code>类型。<code>onRow</code>为点击行时的回调函数。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">onRow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">role</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 点击行</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'row onClick()'</span><span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// alert('点击行')</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                role\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"树形结构\"><a class=\"markdownIt-Anchor\" href=\"#树形结构\"></a> 树形结构</h2>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201119224254.png?w=1280&amp;fmt=jpg\" alt=\"image-20201119224247690\" /></p>\n<p>在AntD4中通过使用<code>treeData</code>来指定树中的数据</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Tree</span>\n      <span class=\"token attr-name\">checkable</span>\n      <span class=\"token attr-name\">defaultExpandAll</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;true&#125;</span>\n      <span class=\"token attr-name\">checkedKeys</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;checkedKeys&#125;</span>\n      <span class=\"token attr-name\">onCheck</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;this.onCheck&#125;</span>\n      <span class=\"token attr-name\">treeData</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;this.treeNodes&#125;</span>\n      <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token function-variable function\">getTreeNodes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">menuList</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'平台'</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'all'</span><span class=\"token punctuation\">,</span> children<span class=\"token operator\">:</span> menuList <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>得到最新状态，通过在生命周期<code>getDerivedStateFromProps</code>返回需要设置的状态。（<code>componentWillReceiveProps</code>即将废弃）</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>role <span class=\"token operator\">!==</span> prevState<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 将上一个状态的值改编为点击的状态</span>\n      prevState<span class=\"token punctuation\">.</span>checkedKeys <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>menus\n      prevState<span class=\"token punctuation\">.</span>role <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">.</span>role\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        checkedKeys<span class=\"token operator\">:</span> prevState<span class=\"token punctuation\">.</span>checkedKeys\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>大体思路如下：</p>\n<ol>\n<li>\n<p>当每次点击一行数据时，都会触发父组件<code>onRow</code>事件。而在这个组件中进行了重新为<code>role</code>对象赋值的操作。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">onRow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">role</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 点击行</span>\n            <span class=\"token comment\">// console.log('row onClick()', role)</span>\n            <span class=\"token comment\">// alert('点击行')</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                role\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>因此，他也会重新将role对象传递给子组件</p>\n</li>\n<li>\n<p>子组件由于具有<code>getDerivedStateFromProps</code>生命周期，因此每次接收到新数据都会触发该生命周期。</p>\n<p>此时，在此生命周期就可以进行判断。当传入对象与当前<code>state</code>记录的对象不一致时则更新数据。将自身记录的对象替换为新传入的对象。（选中的<code>Keys</code>也是替换）</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 判断传入对象与当前记录的对象是否是同一个对象</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>role <span class=\"token operator\">!==</span> prevState<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 将刚传入的值赋值给已保存的值</span>\n      checkedKeys<span class=\"token operator\">:</span> nextProps<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>menus<span class=\"token punctuation\">,</span>\n      role<span class=\"token operator\">:</span> nextProps<span class=\"token punctuation\">.</span>role\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n","categories":[{"name":"React","path":"api/categories/React.json"},{"name":"尚硅谷","path":"api/categories/尚硅谷.json"}],"tags":[{"name":"React","path":"api/tags/React.json"}]}