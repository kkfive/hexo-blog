{"title":"三、NodeJs链接MogoDB云数据库","slug":"日常学习/技术相关/RESTful API/慕课网/仿知乎后台设计/3. NodeJs链接MogoDB云数据库","date":"2020-11-23T02:58:26.000Z","updated":"2022-02-21T04:45:27.392Z","comments":true,"path":"api/articles/日常学习/技术相关/RESTful API/慕课网/仿知乎后台设计/3. NodeJs链接MogoDB云数据库.json","excerpt":null,"covers":["https://rmt.ladydaily.com/fetch/tzk/storage/20201123111151.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201123111210.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201123111417.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201123111553.png?w=1280&amp;fmt=jpg"],"content":"<h2 id=\"mongodb使用云数据库\"><a class=\"markdownIt-Anchor\" href=\"#mongodb使用云数据库\"></a> MongoDB使用云数据库</h2>\n<ol>\n<li>\n<p>注册用户</p>\n</li>\n<li>\n<p>创建数据库</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111151.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111151143\" /></p>\n</li>\n<li>\n<p>添加用户</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111210.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111210206\" /></p>\n</li>\n<li>\n<p>设置白名单地址</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111417.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111417055\" /></p>\n</li>\n<li>\n<p>链接数据库</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111553.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111552893\" /></p>\n</li>\n</ol>\n<h2 id=\"使用数据库\"><a class=\"markdownIt-Anchor\" href=\"#使用数据库\"></a> 使用数据库</h2>\n<ol>\n<li>\n<p>安装mongoose</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> mogoose<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>链接数据库</p>\n<ul>\n<li>\n<p>复制上一步的字符串，并替换掉其中的数据。例如<code>&lt;password&gt;</code>和<code>&lt;dbname&gt;</code></p>\n</li>\n<li>\n<p>在入口文件链接数据库</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 通过配置文件导入链接字符串</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> connectionStr <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./config'</span><span class=\"token punctuation\">)</span>\n\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>connectionStr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> useUnifiedTopology<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> useNewUrlParser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'链接成功了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>创建用户模型</p>\n<p>新建一个<code>schema</code>文件夹，在这个文件中写我们的数据库模型。例如user</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> Schema<span class=\"token punctuation\">,</span> model <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> mongoose\n\n<span class=\"token keyword\">const</span> userSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 生成模型</span>\nmodel<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User'</span><span class=\"token punctuation\">,</span> userSchema<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>实现增删改查</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/users'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UserCtl</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">find</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'用户不存在'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> user\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">create</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">verifyParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> user\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">update</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">verifyParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndUpdate</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'修改的用户ID不存在'</span><span class=\"token punctuation\">)</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> user\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">delete</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndRemove</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'删除的用户ID不存在'</span><span class=\"token punctuation\">)</span>\n        ctx<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">204</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserCtl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n","more":"<h2 id=\"mongodb使用云数据库\"><a class=\"markdownIt-Anchor\" href=\"#mongodb使用云数据库\"></a> MongoDB使用云数据库</h2>\n<ol>\n<li>\n<p>注册用户</p>\n</li>\n<li>\n<p>创建数据库</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111151.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111151143\" /></p>\n</li>\n<li>\n<p>添加用户</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111210.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111210206\" /></p>\n</li>\n<li>\n<p>设置白名单地址</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111417.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111417055\" /></p>\n</li>\n<li>\n<p>链接数据库</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201123111553.png?w=1280&amp;fmt=jpg\" alt=\"image-20201123111552893\" /></p>\n</li>\n</ol>\n<h2 id=\"使用数据库\"><a class=\"markdownIt-Anchor\" href=\"#使用数据库\"></a> 使用数据库</h2>\n<ol>\n<li>\n<p>安装mongoose</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> mogoose<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>链接数据库</p>\n<ul>\n<li>\n<p>复制上一步的字符串，并替换掉其中的数据。例如<code>&lt;password&gt;</code>和<code>&lt;dbname&gt;</code></p>\n</li>\n<li>\n<p>在入口文件链接数据库</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 通过配置文件导入链接字符串</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> connectionStr <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./config'</span><span class=\"token punctuation\">)</span>\n\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>connectionStr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> useUnifiedTopology<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> useNewUrlParser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'链接成功了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>创建用户模型</p>\n<p>新建一个<code>schema</code>文件夹，在这个文件中写我们的数据库模型。例如user</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> Schema<span class=\"token punctuation\">,</span> model <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> mongoose\n\n<span class=\"token keyword\">const</span> userSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 生成模型</span>\nmodel<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User'</span><span class=\"token punctuation\">,</span> userSchema<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>实现增删改查</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/users'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UserCtl</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">find</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'用户不存在'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> user\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">create</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">verifyParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> user\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">update</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">verifyParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndUpdate</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'修改的用户ID不存在'</span><span class=\"token punctuation\">)</span>\n        ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> user\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">delete</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndRemove</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'删除的用户ID不存在'</span><span class=\"token punctuation\">)</span>\n        ctx<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">204</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserCtl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n","categories":[{"name":"慕课网","path":"api/categories/慕课网.json"},{"name":"RESTful api","path":"api/categories/RESTful api.json"}],"tags":[{"name":"RESTful api","path":"api/tags/RESTful api.json"}]}