{"title":"03JavaScript运算符","slug":"日常学习/技术相关/大前端/JavaScript学习/基础部分/03JavaScript运算符","date":"2020-04-01T06:06:58.000Z","updated":"2022-02-21T07:18:57.057Z","comments":true,"path":"api/articles/日常学习/技术相关/大前端/JavaScript学习/基础部分/03JavaScript运算符.json","excerpt":null,"covers":null,"content":"<h2 id=\"基本运算\"><a class=\"markdownIt-Anchor\" href=\"#基本运算\"></a> 基本运算</h2>\n<p>基本运算包括<strong>加减乘除</strong>。</p>\n<ol>\n<li>\n<p>当数字与任意字符串都相加时相当于字符串拼接</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"100\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 100100</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 100test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>当数字与一个字符串类型的数字相减时就返回正确的结果，与非数字的字符串相见返回NAN</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 90</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为NaN</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>乘法、除法与减法类似。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 NaN</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 1000</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 NaN</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 10</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>由此可以得到：<strong>加法运算时，无论字符串是什么都会进行拼接；而减法、除法、乘法则会尽力转换字符串为number类型，如果无法转换结果为NaN，否则返回运算结果。</strong></p>\n<h2 id=\"取余运算\"><a class=\"markdownIt-Anchor\" href=\"#取余运算\"></a> 取余运算</h2>\n<p>当左边的操作数位正数时，那么结果也为整数</p>\n<p>当左边的操作数位负数时，那么结果也为负数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 -1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 -1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"自增运算\"><a class=\"markdownIt-Anchor\" href=\"#自增运算\"></a> 自增运算</h2>\n<p>自增(自减)运算结果的确定其实很简单，因为<code>n++</code>是<code>n=n+1</code>的简写，所以当加号在后边的时候<code>n++</code>那么返回的是n，也就是直接返回结果在计算。反之，当<code>++n</code>时返回的就是运算结果。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> result1 <span class=\"token operator\">=</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//result 的值为n的值 因为加号在后边，所以返回n而不是返回运算后的值</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// result1为100 n为101</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//result 的值为n运算后的结果 因为加号在前边，所以返回n运算的结果</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// result为101 n为101</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"全等与不等运算\"><a class=\"markdownIt-Anchor\" href=\"#全等与不等运算\"></a> 全等与不等运算</h2>\n<ul>\n<li>\n<p>判断是否为NaN</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//NaN</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>只判断值而不判断类型</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 只判断值是否相等 相等返回true 不等返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n<span class=\"token comment\">// 只判断值是否不等于 不等于返回true 等于返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>即判断值也判断类型</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 判断值与类型是否全相同 全相同返回true 不全相同返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\n<span class=\"token comment\">// 判断值与类型是否不相同 不相同返回true 相同返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">!==</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"逻辑运算符\"><a class=\"markdownIt-Anchor\" href=\"#逻辑运算符\"></a> 逻辑运算符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">案例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">逻辑与运算符（<code>&amp;&amp;</code>）</td>\n<td style=\"text-align:center\">如果左边操作数转换为 boolean 类型的值为 false，则返回左边操作数，否则返回右边操作数</td>\n<td style=\"text-align:center\"><code>true &amp;&amp; false</code> 的结果为 false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">逻辑或运算符（<code>||</code>）</td>\n<td style=\"text-align:center\">如果左边操作数转换为 boolean 类型的值为 true，则返回左边操作数，否则返回右边操作数</td>\n<td style=\"text-align:center\"><code>false || true</code> 的结果为 true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">逻辑非运算符（<code>!</code>）</td>\n<td style=\"text-align:center\">将操作数转换为 boolean 类型的值，如果为 true 的话则返回 false，否则返回 true</td>\n<td style=\"text-align:center\"><code>!true</code> 的结果为 false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"赋值运算符\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算符\"></a> 赋值运算符</h2>\n<p>赋值运算符中<code>a=a+1</code>可以简写为<code>a+=1</code>。</p>\n<blockquote>\n<p>简写与不简写的区别：简写的执行效率高于不简写</p>\n</blockquote>\n<h2 id=\"条件运算符与条件语句\"><a class=\"markdownIt-Anchor\" href=\"#条件运算符与条件语句\"></a> 条件运算符与条件语句</h2>\n<p>条件运算符即<code>condition ? exprIfTrue : exprIfFalse</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token operator\">?</span> <span class=\"token string\">'成年人'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'未成年人'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 成年人</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在JavaScript中：</p>\n<ul>\n<li>条件语句和条件运算符可以相互改写</li>\n<li>运算符的执行优先级别高于语句的</li>\n<li>条件运算符的效率更高</li>\n</ul>\n<p>在<code>if-else</code>里<code>if-else</code>结构优于层级嵌套。</p>\n<p>在switch语句中，<code>default</code>不一定写在末尾。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"人工\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 结果为 人工</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"基本运算\"><a class=\"markdownIt-Anchor\" href=\"#基本运算\"></a> 基本运算</h2>\n<p>基本运算包括<strong>加减乘除</strong>。</p>\n<ol>\n<li>\n<p>当数字与任意字符串都相加时相当于字符串拼接</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"100\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 100100</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 100test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>当数字与一个字符串类型的数字相减时就返回正确的结果，与非数字的字符串相见返回NAN</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 90</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为NaN</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>乘法、除法与减法类似。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 NaN</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 1000</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 NaN</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 10</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>由此可以得到：<strong>加法运算时，无论字符串是什么都会进行拼接；而减法、除法、乘法则会尽力转换字符串为number类型，如果无法转换结果为NaN，否则返回运算结果。</strong></p>\n<h2 id=\"取余运算\"><a class=\"markdownIt-Anchor\" href=\"#取余运算\"></a> 取余运算</h2>\n<p>当左边的操作数位正数时，那么结果也为整数</p>\n<p>当左边的操作数位负数时，那么结果也为负数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 -1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为 -1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"自增运算\"><a class=\"markdownIt-Anchor\" href=\"#自增运算\"></a> 自增运算</h2>\n<p>自增(自减)运算结果的确定其实很简单，因为<code>n++</code>是<code>n=n+1</code>的简写，所以当加号在后边的时候<code>n++</code>那么返回的是n，也就是直接返回结果在计算。反之，当<code>++n</code>时返回的就是运算结果。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> result1 <span class=\"token operator\">=</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//result 的值为n的值 因为加号在后边，所以返回n而不是返回运算后的值</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// result1为100 n为101</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//result 的值为n运算后的结果 因为加号在前边，所以返回n运算的结果</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// result为101 n为101</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"全等与不等运算\"><a class=\"markdownIt-Anchor\" href=\"#全等与不等运算\"></a> 全等与不等运算</h2>\n<ul>\n<li>\n<p>判断是否为NaN</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//NaN</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>只判断值而不判断类型</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 只判断值是否相等 相等返回true 不等返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n<span class=\"token comment\">// 只判断值是否不等于 不等于返回true 等于返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>即判断值也判断类型</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 判断值与类型是否全相同 全相同返回true 不全相同返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\n<span class=\"token comment\">// 判断值与类型是否不相同 不相同返回true 相同返回false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">!==</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"逻辑运算符\"><a class=\"markdownIt-Anchor\" href=\"#逻辑运算符\"></a> 逻辑运算符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">案例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">逻辑与运算符（<code>&amp;&amp;</code>）</td>\n<td style=\"text-align:center\">如果左边操作数转换为 boolean 类型的值为 false，则返回左边操作数，否则返回右边操作数</td>\n<td style=\"text-align:center\"><code>true &amp;&amp; false</code> 的结果为 false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">逻辑或运算符（<code>||</code>）</td>\n<td style=\"text-align:center\">如果左边操作数转换为 boolean 类型的值为 true，则返回左边操作数，否则返回右边操作数</td>\n<td style=\"text-align:center\"><code>false || true</code> 的结果为 true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">逻辑非运算符（<code>!</code>）</td>\n<td style=\"text-align:center\">将操作数转换为 boolean 类型的值，如果为 true 的话则返回 false，否则返回 true</td>\n<td style=\"text-align:center\"><code>!true</code> 的结果为 false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"赋值运算符\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算符\"></a> 赋值运算符</h2>\n<p>赋值运算符中<code>a=a+1</code>可以简写为<code>a+=1</code>。</p>\n<blockquote>\n<p>简写与不简写的区别：简写的执行效率高于不简写</p>\n</blockquote>\n<h2 id=\"条件运算符与条件语句\"><a class=\"markdownIt-Anchor\" href=\"#条件运算符与条件语句\"></a> 条件运算符与条件语句</h2>\n<p>条件运算符即<code>condition ? exprIfTrue : exprIfFalse</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token operator\">?</span> <span class=\"token string\">'成年人'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'未成年人'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 成年人</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在JavaScript中：</p>\n<ul>\n<li>条件语句和条件运算符可以相互改写</li>\n<li>运算符的执行优先级别高于语句的</li>\n<li>条件运算符的效率更高</li>\n</ul>\n<p>在<code>if-else</code>里<code>if-else</code>结构优于层级嵌套。</p>\n<p>在switch语句中，<code>default</code>不一定写在末尾。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"人工\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 结果为 人工</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"大前端","path":"api/categories/大前端.json"},{"name":"JavaScript笔记","path":"api/categories/JavaScript笔记.json"}],"tags":[{"name":"大前端","path":"api/tags/大前端.json"},{"name":"笔记","path":"api/tags/笔记.json"},{"name":"JavaScript","path":"api/tags/JavaScript.json"}]}