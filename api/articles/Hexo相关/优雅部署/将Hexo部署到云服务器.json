{"title":"将Hexo部署到云服务器","slug":"Hexo相关/优雅部署/将Hexo部署到云服务器","date":"2020-05-20T12:48:00.000Z","updated":"2022-02-21T06:22:27.456Z","comments":true,"path":"api/articles/Hexo相关/优雅部署/将Hexo部署到云服务器.json","excerpt":null,"covers":["https://file.acs.pw/picGo/2021/3/27/de251f0f871c01507f2bc292917bc420.png","https://file.acs.pw/picGo/2021/3/27/b430e2ffaa75db48c34a446f6584fd81.png","https://file.acs.pw/picGo/2021/3/27/0668382e36ef0e687a6f9efe43a0f94e.png","https://file.acs.pw/picGo/2021/3/27/2212cfcdb4de9aeb0ee089d51606f776.png","https://file.acs.pw/picGo/2021/3/27/9bb08f709dcf522cf365e40ea0e0f752.png","https://file.acs.pw/picGo/2021/3/27/fbdfbb86f93020ecdafaa9c8aea359b3.png","https://file.acs.pw/picGo/2021/3/27/1e51ea1f28dddc4157fc362213841d83.png","https://file.acs.pw/picGo/2021/3/27/4da6bec68f9a80a43f161b099ad28a0a.png","https://file.acs.pw/picGo/2021/3/27/abcae5bea72fafd4ed2dad8d1ce0018c.png","https://file.acs.pw/picGo/2021/3/27/411a6b4e96b3aa2732d465a661a9c56a.png","https://file.acs.pw/picGo/2021/3/27/52da95cff516898b457be1e0e654a956.png","https://file.acs.pw/picGo/2021/3/27/7eaf5c19d14602abc4f80fc5562f2c6a.jpeg","https://file.acs.pw/picGo/2021/3/27/9e6de78253717fd1e3cb1ab45c57018a.png","https://file.acs.pw/picGo/2021/2/27/4ee8ed340343e6d5b82db27657dfd308.png","https://file.acs.pw/picGo/2021/3/27/81643eaef96277bc6dd3c7a8e30d8759.png","https://file.acs.pw/picGo/2021/3/27/b55191d7d90e5a3f66595e86223a30e2.png","https://file.acs.pw/picGo/2021/3/27/0d3b13695dc9c3c9fcb638836236a837.png","https://file.acs.pw/picGo/2021/3/27/58d4ac2252bf2890ec848e045e086bd7.png","https://file.acs.pw/picGo/2021/3/27/23cb64080f8891b59c570d455be9ade2.png","https://file.acs.pw/pigGo/2021/03/27/20210327114033.png","https://file.acs.pw/pigGo/2021/03/27/20210327145311.png"],"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<blockquote>\n<p>2021年03月27日重新更新此篇文章，至于为什么，大概因为昨天晚上vercel网络出现了波动，导致我的cdn无法进行回源，最终导致博客打不开。因此决定将博客同时部署到服务器做cdn的回源途径。<em>多一份部署多一份保障</em>🤭</p>\n</blockquote>\n<h2 id=\"快速开始\"><a class=\"markdownIt-Anchor\" href=\"#快速开始\"></a> 快速开始</h2>\n<blockquote>\n<p><strong>全程图文预警</strong></p>\n<p>上一次部署使用的方式是宿主机安装nginx开启静态服务器的方式，这次为了方便，决定使用<code>docker</code>+<code>docker-compose</code>的方式进行安装nginx。</p>\n</blockquote>\n<div class=\"note warning flat\"><p>本次教程使用的服务器环境为<strong>阿里轻量云+CentOS 7.6</strong></p>\n</div>\n<h2 id=\"安装git如果有则不需要安装\"><a class=\"markdownIt-Anchor\" href=\"#安装git如果有则不需要安装\"></a> 安装git（如果有则不需要安装）</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel -y\nyum <span class=\"token function\">install</span> -y <span class=\"token function\">git</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>安装完成后通过<code>git --version</code>命令即可查看git当前版本，即代表成功。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/de251f0f871c01507f2bc292917bc420.png\" alt=\"image-20210327101301179\" /></p>\n<h2 id=\"创建裸露仓库\"><a class=\"markdownIt-Anchor\" href=\"#创建裸露仓库\"></a> 创建裸露仓库</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 创建用户\n<span class=\"token function\">useradd</span> <span class=\"token function\">git</span>\n\n// 设置密码\n<span class=\"token function\">passwd</span> <span class=\"token function\">git</span> \n\n// 切换用户\n<span class=\"token function\">su</span> <span class=\"token function\">git</span> \n\n// 进入git用户的家目录\n<span class=\"token builtin class-name\">cd</span> /home/git/\n\n// 项目存在的真实目录（当然你可以创建在其他地方）\n<span class=\"token function\">mkdir</span> -p projects/hexo_blog \n\n// 创建文件夹\n<span class=\"token function\">mkdir</span> repos <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> repos\n\n// 创建一个裸露的仓库\n<span class=\"token function\">git</span> init --bare hexo_blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/b430e2ffaa75db48c34a446f6584fd81.png\" alt=\"image-20210327101624787\" /></p>\n<h2 id=\"写入钩子\"><a class=\"markdownIt-Anchor\" href=\"#写入钩子\"></a> 写入钩子</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> hexo_blog.git/hooks\n// 创建 hook 钩子函数，输入了内容如下\n<span class=\"token function\">vi</span> post-receive <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>输入以下的命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!&#x2F;bin&#x2F;sh\ngit --work-tree&#x3D;&#x2F;home&#x2F;git&#x2F;projects&#x2F;hexo_blog --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;repos&#x2F;hexo_blog.git checkout -f<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>写入后添加可执行权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 为刚才的文件添加可执行的权限\n<span class=\"token function\">chmod</span> +x post-receive\n// 退出到 root 登录\n<span class=\"token builtin class-name\">exit</span> \n// 添加权限\n<span class=\"token function\">chown</span> -R git:git /home/git/repos/hexo_blog.git <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"测试能否正常clone\"><a class=\"markdownIt-Anchor\" href=\"#测试能否正常clone\"></a> 测试能否正常clone</h2>\n<p>在自己电脑上找一个空的文件夹输入如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@server_ip:/home/git/repos/hexo_blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/0668382e36ef0e687a6f9efe43a0f94e.png\" alt=\"image-20210327102246035\" /></p>\n<p>正常情况下会出现上图的情况，即代表成功了。</p>\n<h2 id=\"建立ssh关系实现免密\"><a class=\"markdownIt-Anchor\" href=\"#建立ssh关系实现免密\"></a> 建立SSH关系，实现免密</h2>\n<ol>\n<li>\n<p>新建一个ssh证书，专门用于git推送使用。（你也可以直接使用你的id_rsa（如果存在））</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"这里换上你的邮箱\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>按提示操作即可。注意如果你曾经有证书，记得重命名，不然会覆盖你以前的证书。</p>\n</blockquote>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/2212cfcdb4de9aeb0ee089d51606f776.png\" alt=\"image-20210327102824405\" /></p>\n</li>\n<li>\n<p>手动设置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 切换到git用户\n<span class=\"token function\">su</span> <span class=\"token function\">git</span>\n//进入家目录，如果没有.ssh目录，那么需要创建。如果存在直接进入即可\n<span class=\"token builtin class-name\">cd</span> ~\n//创建.ssh目录\n<span class=\"token function\">mkdir</span> .ssh\n// 赋予权限\n<span class=\"token function\">chmod</span> <span class=\"token number\">700</span> .ssh/\n// 进入.ssh目录\n<span class=\"token builtin class-name\">cd</span> .ssh\n// 编辑一个名为authorized_keys的文件，并写入公钥<span class=\"token punctuation\">(</span>git_rsa.pub<span class=\"token punctuation\">)</span>内容\n<span class=\"token function\">vi</span> authorized_keys\n// 添加完成后赋予权限\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> authorized_keys<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/9bb08f709dcf522cf365e40ea0e0f752.png\" alt=\"image-20210327103047351\" /></p>\n</li>\n<li>\n<p>测试</p>\n<p>如果你生成的证书没有按照默认流程（图片示例），那么需要你将你的证书移动到<code>C:\\Users\\dream\\.ssh</code>目录，然后在<code>config</code>文件新增如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 服务器认证\nHost 你的服务ip\n    HostName 你的服务ip\n    IdentityFile ~\\\\.ssh\\\\私钥名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/fbdfbb86f93020ecdafaa9c8aea359b3.png\" alt=\"image-20210327103710656\" /></p>\n<blockquote>\n<p>如果你按照默认流程了，那么不需要此操作。</p>\n</blockquote>\n<p>都配置完毕后输入<code>ssh git@服务器ip</code>如果能够免密登录即代表成功了，如果不能请用脑子在仔细看一遍这一部分的教程。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/1e51ea1f28dddc4157fc362213841d83.png\" alt=\"image-20210327103901579\" /></p>\n</li>\n</ol>\n<h2 id=\"禁用git用户的shell权限\"><a class=\"markdownIt-Anchor\" href=\"#禁用git用户的shell权限\"></a> 禁用git用户的shell权限</h2>\n<p>我测试安装完后自带了<code>git-shell</code>，通过<code>which git-shell</code>命令查看是否能显示出路径，如果不能则需要手动添加。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/4da6bec68f9a80a43f161b099ad28a0a.png\" alt=\"image-20210327104350613\" /></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 如果不是root用户请切换至root用户\n<span class=\"token function\">su</span> root\n// 查看 git-shell 是否在登录方式里面\n<span class=\"token function\">cat</span> /etc/shells \n// 查看是否安装\n<span class=\"token function\">which</span> git-shell \n// 添加上2步显示出来的路劲，通常在 /usr/bin/git-shell<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>修改 <code>/etc/passwd</code> 中的权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 将原来的\ngit:x:1001:1001::/home/git:/bin/bash\n\n// 修改为\ngit:x:1001:1001::/home/git:/bin/git-shell<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"hexo配置\"><a class=\"markdownIt-Anchor\" href=\"#hexo配置\"></a> hexo配置</h2>\n<p>在配置文件添加上你的git，<em>每个人的配置可能不同</em>，图片仅供参考。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/abcae5bea72fafd4ed2dad8d1ce0018c.png\" alt=\"image-20210327104911059\" /></p>\n<p>示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deploy:\n  - type: baidu_url_submitter <span class=\"token comment\"># 百度</span>\n  - type: baidu_xz_url_submitter <span class=\"token comment\"># 百度熊掌号</span>\n  - type: <span class=\"token function\">git</span>\n    repository:\n      server: git@server_ip:/home/git/repos/hexo_blog.git\n    branch: master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>配置完成后运行一次<code>hexo d</code>命令，看是否能成功推送。（使用此命令推送需要本地id_rsa私钥对用的公钥在服务器上，如果你按照我的流程重命名了，那么不会成功的！）</p>\n<p>手动测试</p>\n<ol>\n<li>\n<p>进入<code>public</code>目录</p>\n</li>\n<li>\n<p>初始化仓库</p>\n</li>\n<li>\n<p>命令三连</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'update'</span>\n<span class=\"token function\">git</span> push --force --all git@server_ip:/home/git/repos/hexo_blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/411a6b4e96b3aa2732d465a661a9c56a.png\" alt=\"image-20210327105822053\" /></p>\n</li>\n<li>\n<p>此时服务器中已经存在了文件</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/52da95cff516898b457be1e0e654a956.png\" alt=\"image-20210327110317070\" /></p>\n</li>\n</ol>\n<div class=\"note danger flat\"><p>虽然现在很麻烦，但是后面我会介绍通过持续集成实现自动化构建并上传。那时你只需要push上你的源代码即可。</p>\n</div>\n<h2 id=\"安装docker\"><a class=\"markdownIt-Anchor\" href=\"#安装docker\"></a> 安装Docker</h2>\n<ol>\n<li>\n<p>安装docker</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -fsSL get.docker.com -o get-docker.sh\n<span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> get-docker.sh --mirror Aliyun<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/7eaf5c19d14602abc4f80fc5562f2c6a.jpeg\" alt=\"image-20210327095433092\" /></p>\n</li>\n<li>\n<p>启动docker服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> docker\n<span class=\"token function\">sudo</span> systemctl start docker<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>推荐操作</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">groupadd</span> docker\n<span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG docker <span class=\"token environment constant\">$USER</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/9e6de78253717fd1e3cb1ab45c57018a.png\" alt=\"image-20210327095647687\" /></p>\n</li>\n<li>\n<p>使用阿里云镜像加速（非大陆机器可忽略）</p>\n<ol>\n<li>\n<p>登录<a href=\"https://cr.console.aliyun.com/?spm=5176.12818093.custom--ali--widget-home-product-recent.dre1.1c8316d0Tujp2R\">阿里容器镜像服务</a></p>\n</li>\n<li>\n<p>查看加速地址</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/2/27/4ee8ed340343e6d5b82db27657dfd308.png\" alt=\"image-20210227190110321\" /></p>\n</li>\n<li>\n<p>设置加速服务</p>\n<ul>\n<li>\n<p>创建目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p /etc/docker<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>创建文件并写入内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/docker/daemon.json <span class=\"token operator\">&lt;&lt;-</span><span class=\"token string\">'EOF'\n&#123;\n  \"registry-mirrors\": [\"https://lz2nib3q.mirror.aliyuncs.com\"]\n&#125;\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>重新加载及重启Docker服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl daemon-reload\n<span class=\"token function\">sudo</span> systemctl restart docker<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>查看镜像地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dokcer info<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/81643eaef96277bc6dd3c7a8e30d8759.png\" alt=\"image-20210327100102166\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"安装docker-compose\"><a class=\"markdownIt-Anchor\" href=\"#安装docker-compose\"></a> 安装docker-compose</h2>\n<p>由于国内机器直接下载GitHub的资源速度很慢。因此使用手动下载的方式。</p>\n<ol>\n<li>\n<p>进入<a href=\"https://github.com/docker/compose/releases\">GitHub</a>进行下载<code>docker-compose-Linux-x86_64</code></p>\n</li>\n<li>\n<p>将文件上传到 <code>/usr/local/bin/</code> 目录，并改名为 <code>docker-compose</code></p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/b55191d7d90e5a3f66595e86223a30e2.png\" alt=\"image-20210327100914341\" /></p>\n</li>\n<li>\n<p>赋予权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>测试</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose -v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/0d3b13695dc9c3c9fcb638836236a837.png\" alt=\"image-20210327100958402\" /></p>\n</li>\n</ol>\n<h2 id=\"配置nginx\"><a class=\"markdownIt-Anchor\" href=\"#配置nginx\"></a> 配置nginx</h2>\n<p>既然我们安装了docker，那么我们的配置将会很简单。</p>\n<ol>\n<li>\n<p>下载<a href=\"https://tzk.lanzous.com/b06mr4hfc\">蓝奏云</a>文件，密码（ak1m）</p>\n</li>\n<li>\n<p>将文件解压，并按照你自己的信息进行编辑</p>\n<ul>\n<li>\n<p>ssl目录</p>\n<p>存放你的网站证书，可以到腾讯云、阿里云、freessl等平台进行申请。</p>\n</li>\n<li>\n<p>nginx目录</p>\n<p>此目录存在nginx的相关配置，请按照注释修改相关配置</p>\n</li>\n</ul>\n</li>\n<li>\n<p>服务器上传这些文件（不是压缩包）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~\n<span class=\"token function\">mkdir</span> blog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/58d4ac2252bf2890ec848e045e086bd7.png\" alt=\"image-20210327113346229\" /></p>\n</li>\n<li>\n<p>运行<code>docker-compose up -d</code>命令启动服务。然后使用<code>docker-compose ps</code>命令查看服务是否正确运行。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/23cb64080f8891b59c570d455be9ade2.png\" alt=\"image-20210327113622914\" /></p>\n</li>\n<li>\n<p>dns解析。</p>\n<p><img src=\"https://file.acs.pw/pigGo/2021/03/27/20210327114033.png\" alt=\"image-20210327113645222\" /></p>\n</li>\n</ol>\n<h2 id=\"通过coding自动部署\"><a class=\"markdownIt-Anchor\" href=\"#通过coding自动部署\"></a> 通过coding自动部署</h2>\n<p>通过coding部署需要将我们的私钥放到环境变量里，但是coding的环境变量不会自动解析换行符，因此我们需要手动解析一下（也就是将换行变成<code>\\n</code>）。然后将其填入coding的环境变量。</p>\n<p>简陋的在线转换地址：<a href=\"https://kkfive.gitee.io/tools/\">gitee Pages</a></p>\n<p><img src=\"https://file.acs.pw/pigGo/2021/03/27/20210327145311.png\" alt=\"image-20210327145311021\" /></p>\n<p>在执行上传命令之前添加如下命令即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p ~/.ssh/\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;HEXO_DEPLOY_PRIVATE_KEY&#125;</span>\"</span> <span class=\"token operator\">></span> ~/.ssh/id_rsa \n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> ~/.ssh/id_rsa\n<span class=\"token function\">cat</span> ~/.ssh/id_rsa\nssh-keyscan 你的服务器ip地址 <span class=\"token operator\">>></span> ~/.ssh/known_hosts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"通过github-actions自动部署\"><a class=\"markdownIt-Anchor\" href=\"#通过github-actions自动部署\"></a> 通过GitHub Actions自动部署</h2>\n<p>GitHub的密钥支持换行符，不需要进行转化，直接粘贴即可。新加一个名称为 <code>HEXO_DEPLOY_PRIVATE_KEY</code>的<code>Secrets</code></p>\n<p>在进行上传操作时执行如下步骤：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Deploy Private Key\n  <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">HEXO_DEPLOY_PRIVATE_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.HEXO_DEPLOY_PRIVATE_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    mkdir -p ~/.ssh/\n    echo \"$HEXO_DEPLOY_PRIVATE_KEY\" > ~/.ssh/id_rsa \n    chmod 600 ~/.ssh/id_rsa\n    ssh-keyscan 服务器ip >> ~/.ssh/known_hosts</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<blockquote>\n<p>2021年03月27日重新更新此篇文章，至于为什么，大概因为昨天晚上vercel网络出现了波动，导致我的cdn无法进行回源，最终导致博客打不开。因此决定将博客同时部署到服务器做cdn的回源途径。<em>多一份部署多一份保障</em>🤭</p>\n</blockquote>\n<h2 id=\"快速开始\"><a class=\"markdownIt-Anchor\" href=\"#快速开始\"></a> 快速开始</h2>\n<blockquote>\n<p><strong>全程图文预警</strong></p>\n<p>上一次部署使用的方式是宿主机安装nginx开启静态服务器的方式，这次为了方便，决定使用<code>docker</code>+<code>docker-compose</code>的方式进行安装nginx。</p>\n</blockquote>\n<div class=\"note warning flat\"><p>本次教程使用的服务器环境为<strong>阿里轻量云+CentOS 7.6</strong></p>\n</div>\n<h2 id=\"安装git如果有则不需要安装\"><a class=\"markdownIt-Anchor\" href=\"#安装git如果有则不需要安装\"></a> 安装git（如果有则不需要安装）</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel -y\nyum <span class=\"token function\">install</span> -y <span class=\"token function\">git</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>安装完成后通过<code>git --version</code>命令即可查看git当前版本，即代表成功。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/de251f0f871c01507f2bc292917bc420.png\" alt=\"image-20210327101301179\" /></p>\n<h2 id=\"创建裸露仓库\"><a class=\"markdownIt-Anchor\" href=\"#创建裸露仓库\"></a> 创建裸露仓库</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 创建用户\n<span class=\"token function\">useradd</span> <span class=\"token function\">git</span>\n\n// 设置密码\n<span class=\"token function\">passwd</span> <span class=\"token function\">git</span> \n\n// 切换用户\n<span class=\"token function\">su</span> <span class=\"token function\">git</span> \n\n// 进入git用户的家目录\n<span class=\"token builtin class-name\">cd</span> /home/git/\n\n// 项目存在的真实目录（当然你可以创建在其他地方）\n<span class=\"token function\">mkdir</span> -p projects/hexo_blog \n\n// 创建文件夹\n<span class=\"token function\">mkdir</span> repos <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> repos\n\n// 创建一个裸露的仓库\n<span class=\"token function\">git</span> init --bare hexo_blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/b430e2ffaa75db48c34a446f6584fd81.png\" alt=\"image-20210327101624787\" /></p>\n<h2 id=\"写入钩子\"><a class=\"markdownIt-Anchor\" href=\"#写入钩子\"></a> 写入钩子</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> hexo_blog.git/hooks\n// 创建 hook 钩子函数，输入了内容如下\n<span class=\"token function\">vi</span> post-receive <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>输入以下的命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!&#x2F;bin&#x2F;sh\ngit --work-tree&#x3D;&#x2F;home&#x2F;git&#x2F;projects&#x2F;hexo_blog --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;repos&#x2F;hexo_blog.git checkout -f<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>写入后添加可执行权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 为刚才的文件添加可执行的权限\n<span class=\"token function\">chmod</span> +x post-receive\n// 退出到 root 登录\n<span class=\"token builtin class-name\">exit</span> \n// 添加权限\n<span class=\"token function\">chown</span> -R git:git /home/git/repos/hexo_blog.git <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"测试能否正常clone\"><a class=\"markdownIt-Anchor\" href=\"#测试能否正常clone\"></a> 测试能否正常clone</h2>\n<p>在自己电脑上找一个空的文件夹输入如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@server_ip:/home/git/repos/hexo_blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/0668382e36ef0e687a6f9efe43a0f94e.png\" alt=\"image-20210327102246035\" /></p>\n<p>正常情况下会出现上图的情况，即代表成功了。</p>\n<h2 id=\"建立ssh关系实现免密\"><a class=\"markdownIt-Anchor\" href=\"#建立ssh关系实现免密\"></a> 建立SSH关系，实现免密</h2>\n<ol>\n<li>\n<p>新建一个ssh证书，专门用于git推送使用。（你也可以直接使用你的id_rsa（如果存在））</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"这里换上你的邮箱\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>按提示操作即可。注意如果你曾经有证书，记得重命名，不然会覆盖你以前的证书。</p>\n</blockquote>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/2212cfcdb4de9aeb0ee089d51606f776.png\" alt=\"image-20210327102824405\" /></p>\n</li>\n<li>\n<p>手动设置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 切换到git用户\n<span class=\"token function\">su</span> <span class=\"token function\">git</span>\n//进入家目录，如果没有.ssh目录，那么需要创建。如果存在直接进入即可\n<span class=\"token builtin class-name\">cd</span> ~\n//创建.ssh目录\n<span class=\"token function\">mkdir</span> .ssh\n// 赋予权限\n<span class=\"token function\">chmod</span> <span class=\"token number\">700</span> .ssh/\n// 进入.ssh目录\n<span class=\"token builtin class-name\">cd</span> .ssh\n// 编辑一个名为authorized_keys的文件，并写入公钥<span class=\"token punctuation\">(</span>git_rsa.pub<span class=\"token punctuation\">)</span>内容\n<span class=\"token function\">vi</span> authorized_keys\n// 添加完成后赋予权限\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> authorized_keys<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/9bb08f709dcf522cf365e40ea0e0f752.png\" alt=\"image-20210327103047351\" /></p>\n</li>\n<li>\n<p>测试</p>\n<p>如果你生成的证书没有按照默认流程（图片示例），那么需要你将你的证书移动到<code>C:\\Users\\dream\\.ssh</code>目录，然后在<code>config</code>文件新增如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 服务器认证\nHost 你的服务ip\n    HostName 你的服务ip\n    IdentityFile ~\\\\.ssh\\\\私钥名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/fbdfbb86f93020ecdafaa9c8aea359b3.png\" alt=\"image-20210327103710656\" /></p>\n<blockquote>\n<p>如果你按照默认流程了，那么不需要此操作。</p>\n</blockquote>\n<p>都配置完毕后输入<code>ssh git@服务器ip</code>如果能够免密登录即代表成功了，如果不能请用脑子在仔细看一遍这一部分的教程。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/1e51ea1f28dddc4157fc362213841d83.png\" alt=\"image-20210327103901579\" /></p>\n</li>\n</ol>\n<h2 id=\"禁用git用户的shell权限\"><a class=\"markdownIt-Anchor\" href=\"#禁用git用户的shell权限\"></a> 禁用git用户的shell权限</h2>\n<p>我测试安装完后自带了<code>git-shell</code>，通过<code>which git-shell</code>命令查看是否能显示出路径，如果不能则需要手动添加。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/4da6bec68f9a80a43f161b099ad28a0a.png\" alt=\"image-20210327104350613\" /></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 如果不是root用户请切换至root用户\n<span class=\"token function\">su</span> root\n// 查看 git-shell 是否在登录方式里面\n<span class=\"token function\">cat</span> /etc/shells \n// 查看是否安装\n<span class=\"token function\">which</span> git-shell \n// 添加上2步显示出来的路劲，通常在 /usr/bin/git-shell<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>修改 <code>/etc/passwd</code> 中的权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 将原来的\ngit:x:1001:1001::/home/git:/bin/bash\n\n// 修改为\ngit:x:1001:1001::/home/git:/bin/git-shell<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"hexo配置\"><a class=\"markdownIt-Anchor\" href=\"#hexo配置\"></a> hexo配置</h2>\n<p>在配置文件添加上你的git，<em>每个人的配置可能不同</em>，图片仅供参考。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/abcae5bea72fafd4ed2dad8d1ce0018c.png\" alt=\"image-20210327104911059\" /></p>\n<p>示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deploy:\n  - type: baidu_url_submitter <span class=\"token comment\"># 百度</span>\n  - type: baidu_xz_url_submitter <span class=\"token comment\"># 百度熊掌号</span>\n  - type: <span class=\"token function\">git</span>\n    repository:\n      server: git@server_ip:/home/git/repos/hexo_blog.git\n    branch: master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>配置完成后运行一次<code>hexo d</code>命令，看是否能成功推送。（使用此命令推送需要本地id_rsa私钥对用的公钥在服务器上，如果你按照我的流程重命名了，那么不会成功的！）</p>\n<p>手动测试</p>\n<ol>\n<li>\n<p>进入<code>public</code>目录</p>\n</li>\n<li>\n<p>初始化仓库</p>\n</li>\n<li>\n<p>命令三连</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'update'</span>\n<span class=\"token function\">git</span> push --force --all git@server_ip:/home/git/repos/hexo_blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/411a6b4e96b3aa2732d465a661a9c56a.png\" alt=\"image-20210327105822053\" /></p>\n</li>\n<li>\n<p>此时服务器中已经存在了文件</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/52da95cff516898b457be1e0e654a956.png\" alt=\"image-20210327110317070\" /></p>\n</li>\n</ol>\n<div class=\"note danger flat\"><p>虽然现在很麻烦，但是后面我会介绍通过持续集成实现自动化构建并上传。那时你只需要push上你的源代码即可。</p>\n</div>\n<h2 id=\"安装docker\"><a class=\"markdownIt-Anchor\" href=\"#安装docker\"></a> 安装Docker</h2>\n<ol>\n<li>\n<p>安装docker</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -fsSL get.docker.com -o get-docker.sh\n<span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> get-docker.sh --mirror Aliyun<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/7eaf5c19d14602abc4f80fc5562f2c6a.jpeg\" alt=\"image-20210327095433092\" /></p>\n</li>\n<li>\n<p>启动docker服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> docker\n<span class=\"token function\">sudo</span> systemctl start docker<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>推荐操作</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">groupadd</span> docker\n<span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG docker <span class=\"token environment constant\">$USER</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/9e6de78253717fd1e3cb1ab45c57018a.png\" alt=\"image-20210327095647687\" /></p>\n</li>\n<li>\n<p>使用阿里云镜像加速（非大陆机器可忽略）</p>\n<ol>\n<li>\n<p>登录<a href=\"https://cr.console.aliyun.com/?spm=5176.12818093.custom--ali--widget-home-product-recent.dre1.1c8316d0Tujp2R\">阿里容器镜像服务</a></p>\n</li>\n<li>\n<p>查看加速地址</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/2/27/4ee8ed340343e6d5b82db27657dfd308.png\" alt=\"image-20210227190110321\" /></p>\n</li>\n<li>\n<p>设置加速服务</p>\n<ul>\n<li>\n<p>创建目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p /etc/docker<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>创建文件并写入内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/docker/daemon.json <span class=\"token operator\">&lt;&lt;-</span><span class=\"token string\">'EOF'\n&#123;\n  \"registry-mirrors\": [\"https://lz2nib3q.mirror.aliyuncs.com\"]\n&#125;\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>重新加载及重启Docker服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl daemon-reload\n<span class=\"token function\">sudo</span> systemctl restart docker<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>查看镜像地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dokcer info<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/81643eaef96277bc6dd3c7a8e30d8759.png\" alt=\"image-20210327100102166\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"安装docker-compose\"><a class=\"markdownIt-Anchor\" href=\"#安装docker-compose\"></a> 安装docker-compose</h2>\n<p>由于国内机器直接下载GitHub的资源速度很慢。因此使用手动下载的方式。</p>\n<ol>\n<li>\n<p>进入<a href=\"https://github.com/docker/compose/releases\">GitHub</a>进行下载<code>docker-compose-Linux-x86_64</code></p>\n</li>\n<li>\n<p>将文件上传到 <code>/usr/local/bin/</code> 目录，并改名为 <code>docker-compose</code></p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/b55191d7d90e5a3f66595e86223a30e2.png\" alt=\"image-20210327100914341\" /></p>\n</li>\n<li>\n<p>赋予权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>测试</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose -v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/0d3b13695dc9c3c9fcb638836236a837.png\" alt=\"image-20210327100958402\" /></p>\n</li>\n</ol>\n<h2 id=\"配置nginx\"><a class=\"markdownIt-Anchor\" href=\"#配置nginx\"></a> 配置nginx</h2>\n<p>既然我们安装了docker，那么我们的配置将会很简单。</p>\n<ol>\n<li>\n<p>下载<a href=\"https://tzk.lanzous.com/b06mr4hfc\">蓝奏云</a>文件，密码（ak1m）</p>\n</li>\n<li>\n<p>将文件解压，并按照你自己的信息进行编辑</p>\n<ul>\n<li>\n<p>ssl目录</p>\n<p>存放你的网站证书，可以到腾讯云、阿里云、freessl等平台进行申请。</p>\n</li>\n<li>\n<p>nginx目录</p>\n<p>此目录存在nginx的相关配置，请按照注释修改相关配置</p>\n</li>\n</ul>\n</li>\n<li>\n<p>服务器上传这些文件（不是压缩包）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~\n<span class=\"token function\">mkdir</span> blog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/58d4ac2252bf2890ec848e045e086bd7.png\" alt=\"image-20210327113346229\" /></p>\n</li>\n<li>\n<p>运行<code>docker-compose up -d</code>命令启动服务。然后使用<code>docker-compose ps</code>命令查看服务是否正确运行。</p>\n<p><img src=\"https://file.acs.pw/picGo/2021/3/27/23cb64080f8891b59c570d455be9ade2.png\" alt=\"image-20210327113622914\" /></p>\n</li>\n<li>\n<p>dns解析。</p>\n<p><img src=\"https://file.acs.pw/pigGo/2021/03/27/20210327114033.png\" alt=\"image-20210327113645222\" /></p>\n</li>\n</ol>\n<h2 id=\"通过coding自动部署\"><a class=\"markdownIt-Anchor\" href=\"#通过coding自动部署\"></a> 通过coding自动部署</h2>\n<p>通过coding部署需要将我们的私钥放到环境变量里，但是coding的环境变量不会自动解析换行符，因此我们需要手动解析一下（也就是将换行变成<code>\\n</code>）。然后将其填入coding的环境变量。</p>\n<p>简陋的在线转换地址：<a href=\"https://kkfive.gitee.io/tools/\">gitee Pages</a></p>\n<p><img src=\"https://file.acs.pw/pigGo/2021/03/27/20210327145311.png\" alt=\"image-20210327145311021\" /></p>\n<p>在执行上传命令之前添加如下命令即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p ~/.ssh/\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;HEXO_DEPLOY_PRIVATE_KEY&#125;</span>\"</span> <span class=\"token operator\">></span> ~/.ssh/id_rsa \n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> ~/.ssh/id_rsa\n<span class=\"token function\">cat</span> ~/.ssh/id_rsa\nssh-keyscan 你的服务器ip地址 <span class=\"token operator\">>></span> ~/.ssh/known_hosts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"通过github-actions自动部署\"><a class=\"markdownIt-Anchor\" href=\"#通过github-actions自动部署\"></a> 通过GitHub Actions自动部署</h2>\n<p>GitHub的密钥支持换行符，不需要进行转化，直接粘贴即可。新加一个名称为 <code>HEXO_DEPLOY_PRIVATE_KEY</code>的<code>Secrets</code></p>\n<p>在进行上传操作时执行如下步骤：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Deploy Private Key\n  <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">HEXO_DEPLOY_PRIVATE_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> secrets.HEXO_DEPLOY_PRIVATE_KEY <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    mkdir -p ~/.ssh/\n    echo \"$HEXO_DEPLOY_PRIVATE_KEY\" > ~/.ssh/id_rsa \n    chmod 600 ~/.ssh/id_rsa\n    ssh-keyscan 服务器ip >> ~/.ssh/known_hosts</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"优雅部署","path":"api/categories/优雅部署.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"配置环境","path":"api/tags/配置环境.json"}]}