{"title":"1、项目初始化登录功能开发","slug":"日常学习/技术相关/Vue/黑马程序员/电商管理系统/1、项目初始化登录功能开发","date":"2020-11-07T01:30:25.000Z","updated":"2022-02-21T13:24:30.868Z","comments":true,"path":"api/articles/日常学习/技术相关/Vue/黑马程序员/电商管理系统/1、项目初始化登录功能开发.json","excerpt":null,"covers":["https://rmt.ladydaily.com/fetch/tzk/storage/20201104104003.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201104171933.png?w=1280&amp;fmt=jpg"],"content":"<p>项目仓库：<a href=\"https://github.com/changeclass/vue-shop\">https://github.com/changeclass/vue-shop</a></p>\n<h2 id=\"项目初始化\"><a class=\"markdownIt-Anchor\" href=\"#项目初始化\"></a> 项目初始化</h2>\n<ol>\n<li>\n<p>安装脚手架</p>\n</li>\n<li>\n<p>通过VUE脚手架创建项目</p>\n</li>\n<li>\n<p>安装Element-ui组件库、</p>\n<p>添加插件处安装</p>\n</li>\n<li>\n<p>配置axios库</p>\n<p>安装依赖处安装</p>\n</li>\n<li>\n<p>将项目托管在GitHub中</p>\n</li>\n<li>\n<p>后台配置</p>\n<ul>\n<li>MySQL</li>\n<li>Node.js</li>\n</ul>\n<p>后端API项目地址：<a href=\"https://github.com/changeclass/Tzk/tree/master/2020-11/vue-api\">https://github.com/changeclass/Tzk/tree/master/2020-11/vue-api</a></p>\n</li>\n</ol>\n<h2 id=\"登录与退出\"><a class=\"markdownIt-Anchor\" href=\"#登录与退出\"></a> 登录与退出</h2>\n<blockquote>\n<p>保持用户登录状态有两种方法：第一种：利用Cookie和Session，但这种方式存在跨域问题。第二种：利用token，这种方式可以避免跨域问题</p>\n</blockquote>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201104104003.png?w=1280&amp;fmt=jpg\" alt=\"image-20201104104003647\" /></p>\n<h3 id=\"登录页面的开发\"><a class=\"markdownIt-Anchor\" href=\"#登录页面的开发\"></a> 登录页面的开发</h3>\n<ol>\n<li>\n<p>通过子分支进行开发</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -b login<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>删除不要的组件</p>\n</li>\n<li>\n<p>创建登录组件</p>\n<ul>\n<li>\n<p>在<code>components</code>中新建一个Login.vue文件。</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n&lt;div&gt;登录组件&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style scoped&gt;\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>设置路由</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// 当访问根路径时自动跳转登录页面</span>\n  <span class=\"token punctuation\">&#123;</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    redirect<span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 登录页面的路由</span>\n  <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> Login <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>登录组件的布局</p>\n<ul>\n<li>安装<code>less-loader</code>和<code>less</code>依赖到开发依赖。</li>\n</ul>\n</li>\n<li>\n<p>表单组件的验证</p>\n<p>表单组件验证使用elementUi提供的方法<code>rules</code></p>\n<ul>\n<li>\n<p>为组件绑定<code>rules</code>，值定义在data数据里，为一个对象。通过<code>prop</code>属性为组件绑定使用那个一个规则</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form</span> <span class=\"token attr-name\">:rules</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFormRules<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">prop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        loginFormRules<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            username<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">&#123;</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'请输入账号'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">&#123;</span> min<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'长度3到10个字符'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            password<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">&#123;</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'请输入密码'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">&#123;</span> min<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'长度3到10个字符'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>表单值双向绑定</p>\n<p>双向绑定使用<code>:model</code>，其值也为一个对象，定义在data里。子组件通过<code>v-model</code>绑定data里的值。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form</span> <span class=\"token attr-name\">:model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFrom<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 用户名 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">prop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFrom.username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 密码 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">prop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFrom.password<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 这是登录表单的数据绑定对象</span>\n        loginFrom<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            username<span class=\"token operator\">:</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span>\n            password<span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>登录事件</p>\n<p>当登录后触发事件，将数据提交给后台。</p>\n<ul>\n<li>\n<p>挂在axios</p>\n<p>在入口文件导入axios库</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n<span class=\"token comment\">// 配置根路径</span>\naxios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>baseURL <span class=\"token operator\">=</span> <span class=\"token string\">'http://127.0.0.1:8888/api/private/v1/'</span>\n<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$http <span class=\"token operator\">=</span> axios<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>发送请求</p>\n<p>发送请求需要使用表单中的数据，因此可以直接获取表单进行提交。通过对<code>form</code>表单添加一个引用属性<code>ref</code>即可在方法中获取元素</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFormRef<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">login</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>loginFormRef<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">valid</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 如果valid为true则表示验证通过</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>valid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data<span class=\"token operator\">:</span> res <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$http<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loginFrom<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'登录失败'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">'登录成功'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 登录成功后的逻辑</span>\n        window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>将数据存储在sessionStorage中。</p>\n<p>调用window对象的方法即可。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>路由导航</p>\n<p>当登录成功后应该跳转home页面，但如果没有登录成功，那么应该重定向到登录页面，而不是直接打开home页面。在路由文件中为<code>route</code>对象添加逻辑</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    routes\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 路由导航守卫</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// to 将要访问的路径</span>\n    <span class=\"token comment\">// from 代表从那个路径跳转而来</span>\n    <span class=\"token comment\">// next表示一个函数，放行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 获取TOKEN</span>\n    <span class=\"token keyword\">const</span> tokenStr <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tokenStr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./login'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"退出\"><a class=\"markdownIt-Anchor\" href=\"#退出\"></a> 退出</h3>\n<p>退出的逻辑很简单，只需要调用<code>window</code>的方法，将sessionStorage里的数据清除即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">logout</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"报错或警告\"><a class=\"markdownIt-Anchor\" href=\"#报错或警告\"></a> 报错或警告</h2>\n<h3 id=\"格式化问题\"><a class=\"markdownIt-Anchor\" href=\"#格式化问题\"></a> 格式化问题</h3>\n<p>格式化后会自动将单引号转换为双引号，以及添加分号。解决方案：</p>\n<p>在项目根目录创建<code>.prettierrc</code>文件，写入如下内容：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"方法后添加空格问题\"><a class=\"markdownIt-Anchor\" href=\"#方法后添加空格问题\"></a> 方法后添加空格问题</h3>\n<p>在<code>.eslintrc.js</code>文件中添加如下规则：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'no-console'</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'no-debugger'</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'space-before-function-paren'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"vetur\"><a class=\"markdownIt-Anchor\" href=\"#vetur\"></a> Vetur</h3>\n<p>如果使用了此插件，那么建议禁用掉这个插件的格式化代码，而是使用Eslint插件的代码格式化。</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201104171933.png?w=1280&amp;fmt=jpg\" alt=\"image-20201104171933087\" /></p>\n","more":"<p>项目仓库：<a href=\"https://github.com/changeclass/vue-shop\">https://github.com/changeclass/vue-shop</a></p>\n<h2 id=\"项目初始化\"><a class=\"markdownIt-Anchor\" href=\"#项目初始化\"></a> 项目初始化</h2>\n<ol>\n<li>\n<p>安装脚手架</p>\n</li>\n<li>\n<p>通过VUE脚手架创建项目</p>\n</li>\n<li>\n<p>安装Element-ui组件库、</p>\n<p>添加插件处安装</p>\n</li>\n<li>\n<p>配置axios库</p>\n<p>安装依赖处安装</p>\n</li>\n<li>\n<p>将项目托管在GitHub中</p>\n</li>\n<li>\n<p>后台配置</p>\n<ul>\n<li>MySQL</li>\n<li>Node.js</li>\n</ul>\n<p>后端API项目地址：<a href=\"https://github.com/changeclass/Tzk/tree/master/2020-11/vue-api\">https://github.com/changeclass/Tzk/tree/master/2020-11/vue-api</a></p>\n</li>\n</ol>\n<h2 id=\"登录与退出\"><a class=\"markdownIt-Anchor\" href=\"#登录与退出\"></a> 登录与退出</h2>\n<blockquote>\n<p>保持用户登录状态有两种方法：第一种：利用Cookie和Session，但这种方式存在跨域问题。第二种：利用token，这种方式可以避免跨域问题</p>\n</blockquote>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201104104003.png?w=1280&amp;fmt=jpg\" alt=\"image-20201104104003647\" /></p>\n<h3 id=\"登录页面的开发\"><a class=\"markdownIt-Anchor\" href=\"#登录页面的开发\"></a> 登录页面的开发</h3>\n<ol>\n<li>\n<p>通过子分支进行开发</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -b login<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>删除不要的组件</p>\n</li>\n<li>\n<p>创建登录组件</p>\n<ul>\n<li>\n<p>在<code>components</code>中新建一个Login.vue文件。</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n&lt;div&gt;登录组件&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style scoped&gt;\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>设置路由</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// 当访问根路径时自动跳转登录页面</span>\n  <span class=\"token punctuation\">&#123;</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    redirect<span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 登录页面的路由</span>\n  <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> Login <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>登录组件的布局</p>\n<ul>\n<li>安装<code>less-loader</code>和<code>less</code>依赖到开发依赖。</li>\n</ul>\n</li>\n<li>\n<p>表单组件的验证</p>\n<p>表单组件验证使用elementUi提供的方法<code>rules</code></p>\n<ul>\n<li>\n<p>为组件绑定<code>rules</code>，值定义在data数据里，为一个对象。通过<code>prop</code>属性为组件绑定使用那个一个规则</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form</span> <span class=\"token attr-name\">:rules</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFormRules<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">prop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        loginFormRules<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            username<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">&#123;</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'请输入账号'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">&#123;</span> min<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'长度3到10个字符'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            password<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">&#123;</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'请输入密码'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">&#123;</span> min<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'长度3到10个字符'</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">'blur'</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>表单值双向绑定</p>\n<p>双向绑定使用<code>:model</code>，其值也为一个对象，定义在data里。子组件通过<code>v-model</code>绑定data里的值。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form</span> <span class=\"token attr-name\">:model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFrom<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 用户名 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">prop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFrom.username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 密码 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">prop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFrom.password<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 这是登录表单的数据绑定对象</span>\n        loginFrom<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            username<span class=\"token operator\">:</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span>\n            password<span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>登录事件</p>\n<p>当登录后触发事件，将数据提交给后台。</p>\n<ul>\n<li>\n<p>挂在axios</p>\n<p>在入口文件导入axios库</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n<span class=\"token comment\">// 配置根路径</span>\naxios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>baseURL <span class=\"token operator\">=</span> <span class=\"token string\">'http://127.0.0.1:8888/api/private/v1/'</span>\n<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$http <span class=\"token operator\">=</span> axios<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>发送请求</p>\n<p>发送请求需要使用表单中的数据，因此可以直接获取表单进行提交。通过对<code>form</code>表单添加一个引用属性<code>ref</code>即可在方法中获取元素</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginFormRef<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">login</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>loginFormRef<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">valid</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 如果valid为true则表示验证通过</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>valid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data<span class=\"token operator\">:</span> res <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$http<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loginFrom<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'登录失败'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">'登录成功'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 登录成功后的逻辑</span>\n        window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>将数据存储在sessionStorage中。</p>\n<p>调用window对象的方法即可。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>路由导航</p>\n<p>当登录成功后应该跳转home页面，但如果没有登录成功，那么应该重定向到登录页面，而不是直接打开home页面。在路由文件中为<code>route</code>对象添加逻辑</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    routes\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 路由导航守卫</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// to 将要访问的路径</span>\n    <span class=\"token comment\">// from 代表从那个路径跳转而来</span>\n    <span class=\"token comment\">// next表示一个函数，放行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 获取TOKEN</span>\n    <span class=\"token keyword\">const</span> tokenStr <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tokenStr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./login'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"退出\"><a class=\"markdownIt-Anchor\" href=\"#退出\"></a> 退出</h3>\n<p>退出的逻辑很简单，只需要调用<code>window</code>的方法，将sessionStorage里的数据清除即可。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">logout</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"报错或警告\"><a class=\"markdownIt-Anchor\" href=\"#报错或警告\"></a> 报错或警告</h2>\n<h3 id=\"格式化问题\"><a class=\"markdownIt-Anchor\" href=\"#格式化问题\"></a> 格式化问题</h3>\n<p>格式化后会自动将单引号转换为双引号，以及添加分号。解决方案：</p>\n<p>在项目根目录创建<code>.prettierrc</code>文件，写入如下内容：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"方法后添加空格问题\"><a class=\"markdownIt-Anchor\" href=\"#方法后添加空格问题\"></a> 方法后添加空格问题</h3>\n<p>在<code>.eslintrc.js</code>文件中添加如下规则：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'no-console'</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'no-debugger'</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'space-before-function-paren'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"vetur\"><a class=\"markdownIt-Anchor\" href=\"#vetur\"></a> Vetur</h3>\n<p>如果使用了此插件，那么建议禁用掉这个插件的格式化代码，而是使用Eslint插件的代码格式化。</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201104171933.png?w=1280&amp;fmt=jpg\" alt=\"image-20201104171933087\" /></p>\n","categories":[{"name":"Vue","path":"api/categories/Vue.json"},{"name":"黑马程序员","path":"api/categories/黑马程序员.json"}],"tags":[{"name":"Vue","path":"api/tags/Vue.json"}]}