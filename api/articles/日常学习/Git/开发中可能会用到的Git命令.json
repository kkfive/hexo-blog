{"title":"开发中GIT的常用操作","slug":"日常学习/Git/开发中可能会用到的Git命令","date":"2020-10-29T02:24:00.000Z","updated":"2022-02-21T06:22:27.464Z","comments":true,"path":"api/articles/日常学习/Git/开发中可能会用到的Git命令.json","excerpt":null,"covers":["https://rmt.ladydaily.com/fetch/tzk/storage/20201029094145.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201029095951.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201029095957.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201029104640.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201029105158.png?w=1280&amp;fmt=jpg","https://rmt.ladydaily.com/fetch/tzk/storage/20201029110641.png?w=1280&amp;fmt=jpg"],"content":"<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\"></a> 配置</h2>\n<h3 id=\"配置当前项目\"><a class=\"markdownIt-Anchor\" href=\"#配置当前项目\"></a> 配置当前项目</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config user.name <span class=\"token string\">'你的名字'</span>\n<span class=\"token function\">git</span> config user.email <span class=\"token string\">'你的邮箱'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"修改全局配置\"><a class=\"markdownIt-Anchor\" href=\"#修改全局配置\"></a> 修改全局配置</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> --global config user.name <span class=\"token string\">'你的名字'</span>\n<span class=\"token function\">git</span> --global config user.email <span class=\"token string\">'你的邮箱'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"检查配置\"><a class=\"markdownIt-Anchor\" href=\"#检查配置\"></a> 检查配置</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 打印所有config</span>\n<span class=\"token function\">git</span> config --list\n<span class=\"token comment\"># 打印指定config</span>\n<span class=\"token function\">git</span> config user.name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"仓库\"><a class=\"markdownIt-Anchor\" href=\"#仓库\"></a> 仓库</h2>\n<h3 id=\"初始化仓库\"><a class=\"markdownIt-Anchor\" href=\"#初始化仓库\"></a> 初始化仓库</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029094145.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029094138532\" /></p>\n<h3 id=\"添加工作区文件到暂存区\"><a class=\"markdownIt-Anchor\" href=\"#添加工作区文件到暂存区\"></a> 添加工作区文件到暂存区</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加单个文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token number\">1</span>.txt\n\n<span class=\"token comment\"># 添加多个文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token number\">2</span>.txt <span class=\"token number\">3</span>.txt\n\n<span class=\"token comment\"># 添加整个目录</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> ./a\n\n<span class=\"token comment\"># 添加多个目录</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> ./b ./c\n\n<span class=\"token comment\"># 添加所有文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"创建版本\"><a class=\"markdownIt-Anchor\" href=\"#创建版本\"></a> 创建版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit -m <span class=\"token string\">'xxx'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>以上命令会直接添加本次提交的备注，一般用于改动不大的情况。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>以上命令会调用出默认的编辑器去编辑信息。</p>\n</blockquote>\n<h4 id=\"修改默认的编辑器\"><a class=\"markdownIt-Anchor\" href=\"#修改默认的编辑器\"></a> 修改默认的编辑器</h4>\n<p>以vacode为例（Windows）。首先在命令行输入<code>code</code>，如果能正常出现vscode编辑器，那么直接输入以下命令即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config core.editor notepad<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果不能出现vscode编辑器，那么将VSCode目录下的<code>bin</code>目录添加到环境变量，然后运行上面的命令即可。</p>\n<blockquote>\n<p>MAC及Linux环境下配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加 vscode 编辑器 - mac</span>\n<span class=\"token comment\"># 通过 vim 打开环境变量配置文件</span>\n<span class=\"token function\">vim</span> ~/.bash_profile\n<span class=\"token comment\"># 添加环境变量</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/Applications/Visual<span class=\"token punctuation\">\\</span> Studio<span class=\"token punctuation\">\\</span> Code.app/Contents/Resources/app/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token comment\"># 保存退出</span>\n<span class=\"token builtin class-name\">source</span> ~/.bash_profile\n<span class=\"token comment\"># 测试：在终端中直接通过命令 code 调用 vscode</span>\n<span class=\"token function\">git</span> config --global core.editor <span class=\"token string\">\"code --wait\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h3 id=\"查看状态\"><a class=\"markdownIt-Anchor\" href=\"#查看状态\"></a> 查看状态</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"提交日志\"><a class=\"markdownIt-Anchor\" href=\"#提交日志\"></a> 提交日志</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 完整格式\n<span class=\"token function\">git</span> log\n// 简要格式（单行）\n<span class=\"token function\">git</span> log --oneline<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029095951.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029095951370\" /></p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029095957.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029095957852\" /></p>\n<h2 id=\"乱码\"><a class=\"markdownIt-Anchor\" href=\"#乱码\"></a> 乱码</h2>\n<h3 id=\"git-status-显示乱码\"><a class=\"markdownIt-Anchor\" href=\"#git-status-显示乱码\"></a> git status 显示乱码</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global core.quotepath <span class=\"token boolean\">false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"终端乱码\"><a class=\"markdownIt-Anchor\" href=\"#终端乱码\"></a> 终端乱码</h3>\n<p>菜单 -&gt; 设置 -&gt; 文本 -&gt; 本地 / 编码</p>\n<p>或修改配置文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[gui]  \n    encoding &#x3D; utf-8  \n    # 代码库统一使用utf-8  \n[i18n]  \n    commitencoding &#x3D; utf-8  \n    # log编码\n[svn]  \n    pathnameencoding &#x3D; utf-8  \n    # 支持中文路径\n[core]\n    quotepath &#x3D; false \n    # status引用路径不再是八进制（反过来说就是允许显示中文了）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"修复提交\"><a class=\"markdownIt-Anchor\" href=\"#修复提交\"></a> 修复提交</h2>\n<p>修复（替换上一次）提交，在不增加一个新的提交版本的情况下将新修改的代码追加到前一次的提交中</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit --amend -m 提交<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"删除\"><a class=\"markdownIt-Anchor\" href=\"#删除\"></a> 删除</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 从 git 仓库与工作区中删除指定文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> 文件\n\n<span class=\"token comment\"># 只删除 git 仓库中的文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> --cached 文件\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>rm 以后，需要 commit 这次操作，否则 rm 将保留在暂存区<code>git commit -m 修正</code></p>\n</blockquote>\n<h2 id=\"撤销重置\"><a class=\"markdownIt-Anchor\" href=\"#撤销重置\"></a> 撤销重置</h2>\n<h3 id=\"从暂存区中撤销到工作区\"><a class=\"markdownIt-Anchor\" href=\"#从暂存区中撤销到工作区\"></a> 从暂存区中撤销到工作区</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 从暂存区中撤销一个指定文件\n<span class=\"token function\">git</span> reset HEAD 文件名称\n// 从暂存区中撤销所有文件\n<span class=\"token function\">git</span> reset HEAD <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"该命令既可以用于回退版本\"><a class=\"markdownIt-Anchor\" href=\"#该命令既可以用于回退版本\"></a> 该命令既可以用于回退版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 回退到指定的 commitID 版本</span>\n<span class=\"token function\">git</span> reset --hard commitID<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"比较\"><a class=\"markdownIt-Anchor\" href=\"#比较\"></a> 比较</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 比较 工作区和暂存区</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> 文件 \n<span class=\"token comment\"># 比较 暂存区和仓库</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> --cached <span class=\"token punctuation\">[</span>commitId<span class=\"token punctuation\">]</span> 文件\n<span class=\"token comment\"># 比较 工作区和仓库</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> commitId filename\n<span class=\"token comment\"># 比较 仓库不同版本</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> commitId1 commitId2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"分支\"><a class=\"markdownIt-Anchor\" href=\"#分支\"></a> 分支</h2>\n<p>我们的开发就像是游戏的任务，默认是在主线（master）上进行开发的。许多时候，还有各种支线任务，git 支持我们创建分支来进行项目开发</p>\n<h3 id=\"查看分支\"><a class=\"markdownIt-Anchor\" href=\"#查看分支\"></a> 查看分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"创建分支\"><a class=\"markdownIt-Anchor\" href=\"#创建分支\"></a> 创建分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch 分支名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"切换分支\"><a class=\"markdownIt-Anchor\" href=\"#切换分支\"></a> 切换分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout 分支名称\n<span class=\"token comment\"># 也可以使用 checkout -b 来新建分支</span>\n<span class=\"token function\">git</span> checkout -b 分支名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"分支合并\"><a class=\"markdownIt-Anchor\" href=\"#分支合并\"></a> 分支合并</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># B 合并到 A，需要切换到 A 分支</span>\n<span class=\"token function\">git</span> merge 被合并分支\n\n<span class=\"token comment\"># 查看已经合并的分支</span>\n<span class=\"token function\">git</span> branch --merged\n<span class=\"token comment\"># 查看未合并的分支</span>\n<span class=\"token function\">git</span> branch --no-merged<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029104640.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029104640818\" /></p>\n<blockquote>\n<p>例如将pay分支的内容合并到master分支，那么先切换到master分支，然后运行<code>git merge pay</code>命令。</p>\n</blockquote>\n<h3 id=\"删除分支\"><a class=\"markdownIt-Anchor\" href=\"#删除分支\"></a> 删除分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 如果分支为未合并状态，则不允许删除</span>\n<span class=\"token function\">git</span> branch -d 分支名称\n<span class=\"token comment\"># 强制删除</span>\n<span class=\"token function\">git</span> branch -D 分支名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"合并记录\"><a class=\"markdownIt-Anchor\" href=\"#合并记录\"></a> 合并记录</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 合并 HEAD 前两个祖先记录</span>\n<span class=\"token function\">git</span> rebase -i HEAD~2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p><code>~</code>和<code>^</code>，前者表示纵向，后者表示横向。</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029105158.png?w=1280&amp;fmt=jpg\" alt=\"1566209448773\" /></p>\n</blockquote>\n<h3 id=\"rebase-操作\"><a class=\"markdownIt-Anchor\" href=\"#rebase-操作\"></a> rebase 操作</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># p, pick = use commit => 使用</span>\n<span class=\"token comment\"># r, reword = use commit, but edit the commit message => 使用，但重新编辑说明</span>\n<span class=\"token comment\"># e, edit = use commit, but stop for amending => 使用</span>\n<span class=\"token comment\"># s, squash = use commit, but meld into previous commit => 使用，但合并上一次</span>\n<span class=\"token comment\"># f, fixup = like \"squash\", but discard this commit's log message => 就像 squash 那样，但会抛弃这个 Commit 的 Commit message</span>\n<span class=\"token comment\"># x, exec = run command (the rest of the line) using shell => 执行脚本</span>\n<span class=\"token comment\"># d, drop = remove commit => 移除</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase -i HEAD~3\n<span class=\"token comment\"># 弹出编辑器，根据需要的进行修改，然后保存</span>\n<span class=\"token comment\"># 如果为 r，s 则会再次弹出编辑器，修改新的 commit message，修改之后保存</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>如果出现一些问题，可以通过 <code>git rebase --edit-todo</code> 和 <code>git rebase --continue</code> 进行重新编辑保存</p>\n</blockquote>\n<p>关于合并记录的更多实例：<a href=\"https://www.antmoe.com/posts/5fe7c05a/index.html#commit\">https://www.antmoe.com/posts/5fe7c05a/index.html#commit</a></p>\n<h2 id=\"合并冲突\"><a class=\"markdownIt-Anchor\" href=\"#合并冲突\"></a> 合并冲突</h2>\n<p>有的时候，不同的分支可能会对同一个文件内容和位置上进行操作，这样在合并的过程中就会产生冲突</p>\n<ul>\n<li>查看冲突文件</li>\n<li>修复冲突内容</li>\n<li>提交</li>\n</ul>\n<h2 id=\"标签\"><a class=\"markdownIt-Anchor\" href=\"#标签\"></a> 标签</h2>\n<p>有的时候，我们希望给某一个特定的历史提交打上一些标签</p>\n<h3 id=\"新建-tag\"><a class=\"markdownIt-Anchor\" href=\"#新建-tag\"></a> 新建 tag</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag -a v1.0.0 HEAD/commitId<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"查看-tag\"><a class=\"markdownIt-Anchor\" href=\"#查看-tag\"></a> 查看 tag</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"远程仓库\"><a class=\"markdownIt-Anchor\" href=\"#远程仓库\"></a> 远程仓库</h2>\n<h3 id=\"生成密钥\"><a class=\"markdownIt-Anchor\" href=\"#生成密钥\"></a> 生成密钥</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"i@xiaokang.me\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>生成的密钥默认在用户目录的<code>.ssh</code>文件下。</p>\n<h3 id=\"添加远程仓库\"><a class=\"markdownIt-Anchor\" href=\"#添加远程仓库\"></a> 添加远程仓库</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> 仓库别名 仓库地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"提交同步远程\"><a class=\"markdownIt-Anchor\" href=\"#提交同步远程\"></a> 提交（同步远程）</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push -u origin master\n<span class=\"token comment\"># -u 简化后续操作</span>\n<span class=\"token function\">git</span> push origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"远程分支\"><a class=\"markdownIt-Anchor\" href=\"#远程分支\"></a> 远程分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 提交到远程（分支）</span>\n<span class=\"token function\">git</span> push origin <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 远程先创建好分支然后拉取到本地</span>\n<span class=\"token function\">git</span> checkout -b <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span> origin/<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 拉取远程分支到本地</span>\n<span class=\"token function\">git</span> pull origin <span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 查看远程仓库</span>\n<span class=\"token function\">git</span> remote show origin\n\n<span class=\"token comment\"># 查看本地分支</span>\n<span class=\"token function\">git</span> branch\n\n<span class=\"token comment\"># 查看远程分支</span>\n<span class=\"token function\">git</span> branch -r\n\n<span class=\"token comment\"># 查看所有分支</span>\n<span class=\"token function\">git</span> branch -a\n\n<span class=\"token comment\"># 删除本地分支</span>\n<span class=\"token function\">git</span> branch -d <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 删除远程分支</span>\n<span class=\"token function\">git</span> push origin --delete <span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">git</span> push origin :<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 设置默认提交分支</span>\n<span class=\"token function\">git</span> branch --set-upstream-to<span class=\"token operator\">=</span>origin/<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"扩展工作流-git-work-flow\"><a class=\"markdownIt-Anchor\" href=\"#扩展工作流-git-work-flow\"></a> 扩展：工作流 - git work flow</h2>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029110641.png?w=1280&amp;fmt=jpg\" alt=\"img\" /></p>\n","more":"<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\"></a> 配置</h2>\n<h3 id=\"配置当前项目\"><a class=\"markdownIt-Anchor\" href=\"#配置当前项目\"></a> 配置当前项目</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config user.name <span class=\"token string\">'你的名字'</span>\n<span class=\"token function\">git</span> config user.email <span class=\"token string\">'你的邮箱'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"修改全局配置\"><a class=\"markdownIt-Anchor\" href=\"#修改全局配置\"></a> 修改全局配置</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> --global config user.name <span class=\"token string\">'你的名字'</span>\n<span class=\"token function\">git</span> --global config user.email <span class=\"token string\">'你的邮箱'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"检查配置\"><a class=\"markdownIt-Anchor\" href=\"#检查配置\"></a> 检查配置</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 打印所有config</span>\n<span class=\"token function\">git</span> config --list\n<span class=\"token comment\"># 打印指定config</span>\n<span class=\"token function\">git</span> config user.name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"仓库\"><a class=\"markdownIt-Anchor\" href=\"#仓库\"></a> 仓库</h2>\n<h3 id=\"初始化仓库\"><a class=\"markdownIt-Anchor\" href=\"#初始化仓库\"></a> 初始化仓库</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029094145.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029094138532\" /></p>\n<h3 id=\"添加工作区文件到暂存区\"><a class=\"markdownIt-Anchor\" href=\"#添加工作区文件到暂存区\"></a> 添加工作区文件到暂存区</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加单个文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token number\">1</span>.txt\n\n<span class=\"token comment\"># 添加多个文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token number\">2</span>.txt <span class=\"token number\">3</span>.txt\n\n<span class=\"token comment\"># 添加整个目录</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> ./a\n\n<span class=\"token comment\"># 添加多个目录</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> ./b ./c\n\n<span class=\"token comment\"># 添加所有文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"创建版本\"><a class=\"markdownIt-Anchor\" href=\"#创建版本\"></a> 创建版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit -m <span class=\"token string\">'xxx'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>以上命令会直接添加本次提交的备注，一般用于改动不大的情况。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>以上命令会调用出默认的编辑器去编辑信息。</p>\n</blockquote>\n<h4 id=\"修改默认的编辑器\"><a class=\"markdownIt-Anchor\" href=\"#修改默认的编辑器\"></a> 修改默认的编辑器</h4>\n<p>以vacode为例（Windows）。首先在命令行输入<code>code</code>，如果能正常出现vscode编辑器，那么直接输入以下命令即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config core.editor notepad<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果不能出现vscode编辑器，那么将VSCode目录下的<code>bin</code>目录添加到环境变量，然后运行上面的命令即可。</p>\n<blockquote>\n<p>MAC及Linux环境下配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加 vscode 编辑器 - mac</span>\n<span class=\"token comment\"># 通过 vim 打开环境变量配置文件</span>\n<span class=\"token function\">vim</span> ~/.bash_profile\n<span class=\"token comment\"># 添加环境变量</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/Applications/Visual<span class=\"token punctuation\">\\</span> Studio<span class=\"token punctuation\">\\</span> Code.app/Contents/Resources/app/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token comment\"># 保存退出</span>\n<span class=\"token builtin class-name\">source</span> ~/.bash_profile\n<span class=\"token comment\"># 测试：在终端中直接通过命令 code 调用 vscode</span>\n<span class=\"token function\">git</span> config --global core.editor <span class=\"token string\">\"code --wait\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h3 id=\"查看状态\"><a class=\"markdownIt-Anchor\" href=\"#查看状态\"></a> 查看状态</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"提交日志\"><a class=\"markdownIt-Anchor\" href=\"#提交日志\"></a> 提交日志</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 完整格式\n<span class=\"token function\">git</span> log\n// 简要格式（单行）\n<span class=\"token function\">git</span> log --oneline<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029095951.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029095951370\" /></p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029095957.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029095957852\" /></p>\n<h2 id=\"乱码\"><a class=\"markdownIt-Anchor\" href=\"#乱码\"></a> 乱码</h2>\n<h3 id=\"git-status-显示乱码\"><a class=\"markdownIt-Anchor\" href=\"#git-status-显示乱码\"></a> git status 显示乱码</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --global core.quotepath <span class=\"token boolean\">false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"终端乱码\"><a class=\"markdownIt-Anchor\" href=\"#终端乱码\"></a> 终端乱码</h3>\n<p>菜单 -&gt; 设置 -&gt; 文本 -&gt; 本地 / 编码</p>\n<p>或修改配置文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[gui]  \n    encoding &#x3D; utf-8  \n    # 代码库统一使用utf-8  \n[i18n]  \n    commitencoding &#x3D; utf-8  \n    # log编码\n[svn]  \n    pathnameencoding &#x3D; utf-8  \n    # 支持中文路径\n[core]\n    quotepath &#x3D; false \n    # status引用路径不再是八进制（反过来说就是允许显示中文了）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"修复提交\"><a class=\"markdownIt-Anchor\" href=\"#修复提交\"></a> 修复提交</h2>\n<p>修复（替换上一次）提交，在不增加一个新的提交版本的情况下将新修改的代码追加到前一次的提交中</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit --amend -m 提交<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"删除\"><a class=\"markdownIt-Anchor\" href=\"#删除\"></a> 删除</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 从 git 仓库与工作区中删除指定文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> 文件\n\n<span class=\"token comment\"># 只删除 git 仓库中的文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> --cached 文件\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>rm 以后，需要 commit 这次操作，否则 rm 将保留在暂存区<code>git commit -m 修正</code></p>\n</blockquote>\n<h2 id=\"撤销重置\"><a class=\"markdownIt-Anchor\" href=\"#撤销重置\"></a> 撤销重置</h2>\n<h3 id=\"从暂存区中撤销到工作区\"><a class=\"markdownIt-Anchor\" href=\"#从暂存区中撤销到工作区\"></a> 从暂存区中撤销到工作区</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 从暂存区中撤销一个指定文件\n<span class=\"token function\">git</span> reset HEAD 文件名称\n// 从暂存区中撤销所有文件\n<span class=\"token function\">git</span> reset HEAD <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"该命令既可以用于回退版本\"><a class=\"markdownIt-Anchor\" href=\"#该命令既可以用于回退版本\"></a> 该命令既可以用于回退版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 回退到指定的 commitID 版本</span>\n<span class=\"token function\">git</span> reset --hard commitID<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"比较\"><a class=\"markdownIt-Anchor\" href=\"#比较\"></a> 比较</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 比较 工作区和暂存区</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> 文件 \n<span class=\"token comment\"># 比较 暂存区和仓库</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> --cached <span class=\"token punctuation\">[</span>commitId<span class=\"token punctuation\">]</span> 文件\n<span class=\"token comment\"># 比较 工作区和仓库</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> commitId filename\n<span class=\"token comment\"># 比较 仓库不同版本</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> commitId1 commitId2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"分支\"><a class=\"markdownIt-Anchor\" href=\"#分支\"></a> 分支</h2>\n<p>我们的开发就像是游戏的任务，默认是在主线（master）上进行开发的。许多时候，还有各种支线任务，git 支持我们创建分支来进行项目开发</p>\n<h3 id=\"查看分支\"><a class=\"markdownIt-Anchor\" href=\"#查看分支\"></a> 查看分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"创建分支\"><a class=\"markdownIt-Anchor\" href=\"#创建分支\"></a> 创建分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch 分支名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"切换分支\"><a class=\"markdownIt-Anchor\" href=\"#切换分支\"></a> 切换分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout 分支名称\n<span class=\"token comment\"># 也可以使用 checkout -b 来新建分支</span>\n<span class=\"token function\">git</span> checkout -b 分支名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"分支合并\"><a class=\"markdownIt-Anchor\" href=\"#分支合并\"></a> 分支合并</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># B 合并到 A，需要切换到 A 分支</span>\n<span class=\"token function\">git</span> merge 被合并分支\n\n<span class=\"token comment\"># 查看已经合并的分支</span>\n<span class=\"token function\">git</span> branch --merged\n<span class=\"token comment\"># 查看未合并的分支</span>\n<span class=\"token function\">git</span> branch --no-merged<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029104640.png?w=1280&amp;fmt=jpg\" alt=\"image-20201029104640818\" /></p>\n<blockquote>\n<p>例如将pay分支的内容合并到master分支，那么先切换到master分支，然后运行<code>git merge pay</code>命令。</p>\n</blockquote>\n<h3 id=\"删除分支\"><a class=\"markdownIt-Anchor\" href=\"#删除分支\"></a> 删除分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 如果分支为未合并状态，则不允许删除</span>\n<span class=\"token function\">git</span> branch -d 分支名称\n<span class=\"token comment\"># 强制删除</span>\n<span class=\"token function\">git</span> branch -D 分支名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"合并记录\"><a class=\"markdownIt-Anchor\" href=\"#合并记录\"></a> 合并记录</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 合并 HEAD 前两个祖先记录</span>\n<span class=\"token function\">git</span> rebase -i HEAD~2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p><code>~</code>和<code>^</code>，前者表示纵向，后者表示横向。</p>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029105158.png?w=1280&amp;fmt=jpg\" alt=\"1566209448773\" /></p>\n</blockquote>\n<h3 id=\"rebase-操作\"><a class=\"markdownIt-Anchor\" href=\"#rebase-操作\"></a> rebase 操作</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># p, pick = use commit => 使用</span>\n<span class=\"token comment\"># r, reword = use commit, but edit the commit message => 使用，但重新编辑说明</span>\n<span class=\"token comment\"># e, edit = use commit, but stop for amending => 使用</span>\n<span class=\"token comment\"># s, squash = use commit, but meld into previous commit => 使用，但合并上一次</span>\n<span class=\"token comment\"># f, fixup = like \"squash\", but discard this commit's log message => 就像 squash 那样，但会抛弃这个 Commit 的 Commit message</span>\n<span class=\"token comment\"># x, exec = run command (the rest of the line) using shell => 执行脚本</span>\n<span class=\"token comment\"># d, drop = remove commit => 移除</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase -i HEAD~3\n<span class=\"token comment\"># 弹出编辑器，根据需要的进行修改，然后保存</span>\n<span class=\"token comment\"># 如果为 r，s 则会再次弹出编辑器，修改新的 commit message，修改之后保存</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>如果出现一些问题，可以通过 <code>git rebase --edit-todo</code> 和 <code>git rebase --continue</code> 进行重新编辑保存</p>\n</blockquote>\n<p>关于合并记录的更多实例：<a href=\"https://www.antmoe.com/posts/5fe7c05a/index.html#commit\">https://www.antmoe.com/posts/5fe7c05a/index.html#commit</a></p>\n<h2 id=\"合并冲突\"><a class=\"markdownIt-Anchor\" href=\"#合并冲突\"></a> 合并冲突</h2>\n<p>有的时候，不同的分支可能会对同一个文件内容和位置上进行操作，这样在合并的过程中就会产生冲突</p>\n<ul>\n<li>查看冲突文件</li>\n<li>修复冲突内容</li>\n<li>提交</li>\n</ul>\n<h2 id=\"标签\"><a class=\"markdownIt-Anchor\" href=\"#标签\"></a> 标签</h2>\n<p>有的时候，我们希望给某一个特定的历史提交打上一些标签</p>\n<h3 id=\"新建-tag\"><a class=\"markdownIt-Anchor\" href=\"#新建-tag\"></a> 新建 tag</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag -a v1.0.0 HEAD/commitId<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"查看-tag\"><a class=\"markdownIt-Anchor\" href=\"#查看-tag\"></a> 查看 tag</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"远程仓库\"><a class=\"markdownIt-Anchor\" href=\"#远程仓库\"></a> 远程仓库</h2>\n<h3 id=\"生成密钥\"><a class=\"markdownIt-Anchor\" href=\"#生成密钥\"></a> 生成密钥</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C <span class=\"token string\">\"i@xiaokang.me\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>生成的密钥默认在用户目录的<code>.ssh</code>文件下。</p>\n<h3 id=\"添加远程仓库\"><a class=\"markdownIt-Anchor\" href=\"#添加远程仓库\"></a> 添加远程仓库</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> 仓库别名 仓库地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"提交同步远程\"><a class=\"markdownIt-Anchor\" href=\"#提交同步远程\"></a> 提交（同步远程）</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push -u origin master\n<span class=\"token comment\"># -u 简化后续操作</span>\n<span class=\"token function\">git</span> push origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"远程分支\"><a class=\"markdownIt-Anchor\" href=\"#远程分支\"></a> 远程分支</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 提交到远程（分支）</span>\n<span class=\"token function\">git</span> push origin <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 远程先创建好分支然后拉取到本地</span>\n<span class=\"token function\">git</span> checkout -b <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span> origin/<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 拉取远程分支到本地</span>\n<span class=\"token function\">git</span> pull origin <span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 查看远程仓库</span>\n<span class=\"token function\">git</span> remote show origin\n\n<span class=\"token comment\"># 查看本地分支</span>\n<span class=\"token function\">git</span> branch\n\n<span class=\"token comment\"># 查看远程分支</span>\n<span class=\"token function\">git</span> branch -r\n\n<span class=\"token comment\"># 查看所有分支</span>\n<span class=\"token function\">git</span> branch -a\n\n<span class=\"token comment\"># 删除本地分支</span>\n<span class=\"token function\">git</span> branch -d <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 删除远程分支</span>\n<span class=\"token function\">git</span> push origin --delete <span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">git</span> push origin :<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 设置默认提交分支</span>\n<span class=\"token function\">git</span> branch --set-upstream-to<span class=\"token operator\">=</span>origin/<span class=\"token punctuation\">[</span>远程分支名称<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>本地分支名称<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"扩展工作流-git-work-flow\"><a class=\"markdownIt-Anchor\" href=\"#扩展工作流-git-work-flow\"></a> 扩展：工作流 - git work flow</h2>\n<p><img src=\"https://rmt.ladydaily.com/fetch/tzk/storage/20201029110641.png?w=1280&amp;fmt=jpg\" alt=\"img\" /></p>\n","categories":[{"name":"Git","path":"api/categories/Git.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}