{"title":"Hexo利用coding持续集成实现双部署","slug":"Hexo相关/优雅部署/Hexo利用coding持续集成实现双部署","date":"2020-03-22T14:30:00.000Z","updated":"2022-02-21T13:24:30.852Z","comments":true,"path":"api/articles/Hexo相关/优雅部署/Hexo利用coding持续集成实现双部署.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/22/20200322223919.png","https://tva1.sinaimg.cn/large/005B3XPgly1gbpzgcibu3j31ec0dqjs7.jpg"],"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>最近这一段时间一直使用的是GitHub+Actions实现双部署。因为已经了解到了coding是有访问认证的。但一直忽略了GitHub可以直接使用Token进行访问认证。</p>\n<h2 id=\"快速开始\"><a class=\"markdownIt-Anchor\" href=\"#快速开始\"></a> 快速开始</h2>\n<ol>\n<li>\n<p>获取coding的访问认证</p>\n<p>获取方法可以参考这篇文章<a href=\"https://www.antmoe.com/posts/51b0fa77/index.html\">https://www.antmoe.com/posts/51b0fa77/index.html</a></p>\n</li>\n<li>\n<p>获取GitHub的Token</p>\n<p>关于GitHub的Token介绍与获取请参考<a href=\"https://help.github.com/articles/creating-an-access-token-for-command-line-use/\">Creating a personal access token for the command line</a></p>\n<p>获取后将ssh的链接地址换成https的地址。</p>\n<p>格式为<code>https://你的token@github.com/owner/repo.git</code></p>\n</li>\n<li>\n<p>最后修改hexo的配置文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/22/20200322223919.png\" alt=\"\" /></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n    <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//你的token@github.com/owner/repo\n      <span class=\"token key atrule\">coding</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//username<span class=\"token punctuation\">:</span>password@e.coding.net/owner/repo\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中<code>baidu_url_submitter</code>与<code>baidu_xz_url_submitter</code>是我安装的百度推送插件。如果你没有安装不必填写。</p>\n<p>coding的<code>username</code>与<code>password</code>并非你的登录账户，而是访问令牌的账户和密码</p>\n</li>\n<li>\n<p>配置文件还是用上次的配置文件即可</p>\n<pre class=\"line-numbers language-Jenkinsfile\" data-language=\"Jenkinsfile\"><code class=\"language-Jenkinsfile\">pipeline &#123;\n  agent any\n  stages &#123;\n    stage(&#39;克隆项目&#39;) &#123;\n      steps &#123;\n        sh &#39;git clone https:&#x2F;&#x2F;账号:密码@地址 .&#39;\n        sh &#39;ls -a&#39;\n      &#125;\n    &#125;\n    stage(&#39;安装依赖&#39;) &#123;\n      steps &#123;\n        sh &#39;ls -a&#39;\n        sh &#39;npm install -g hexo-cli&#39;\n        sh &#39;npm install hexo --save&#39;\n      &#125;\n    &#125;\n    stage(&#39;构建发布&#39;) &#123;\n      steps &#123;\n        sh &#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39;\n      &#125;\n    &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>最后说一下脚本的思路</p>\n<ol>\n<li>\n<p>脚本会告诉coding的服务器：“我要使用node-10的环境”</p>\n</li>\n<li>\n<p>执行步骤-克隆项目</p>\n<ul>\n<li>\n<p>运行命令<code>git clone 项目地址</code></p>\n<p>既然是要对你的文件进行生成，那么这里肯定填的是你源文件的地址，而不是发布的仓库地址。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>执行步骤-安装依赖</p>\n<p>此步骤模拟你在自己电脑上初次运行hexo时需要做的</p>\n<p><code>npm install -g hexo-cli</code>和<code>npm install hexo --save</code>命令。</p>\n</li>\n<li>\n<p>执行步骤-构建发布</p>\n<p>这一步就相当于你运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>的命令。</p>\n</li>\n</ol>\n<p>当然了，这一切都是在coding的服务上运行的，所以你只管push，coding服务器会帮你完成这些操作。</p>\n</li>\n</ol>\n<h2 id=\"常见问题\"><a class=\"markdownIt-Anchor\" href=\"#常见问题\"></a> 常见问题</h2>\n<ol>\n<li>\n<p>请确保你的pages项目仓库是公开的，否则请同样配置访问密钥，并修改hexo根目录下的配置文件。</p>\n<p>如果你的pages服务在coding，并且仓库是私有的，那么请添加项目令牌。并替换博客根目录的地址。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbpzgcibu3j31ec0dqjs7.jpg\" alt=\"10.png\" /></p>\n<p>然后替换博客根目录下 配置文件中的git地址。</p>\n<p>同样的地址也是<code>https://username:password@项目地址</code></p>\n<p>假如说我的</p>\n<ul>\n<li>令牌用户名是：<code>root</code></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>\n<p>令牌密码是：<code>abcdefg</code></p>\n<ul>\n<li>项目地址是<code>https://e.coding.net/test/test.git</code></li>\n</ul>\n<p>那么在配置文件中的地址就是<code>https://root:abcdefg@e.coding.net/test/test.git</code></p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>GitHub的访问地址</p>\n<p>比如生成的token为<code>12345abc</code></p>\n<p>我的项目地址为<code>https://github.com/test/test.git</code></p>\n<p>那么配置文件(hexo的配置文件)中的deploy地址就应该为<code>https://12345abc@github.com/test/test.git</code></p>\n</li>\n</ol>\n<p>最后，如果我的文章对你有帮助，那么你可以点下边的赞赏按钮，请作者喝杯咖啡哦！</p>\n<p>如果图片失效请在下方留言，或联系作者。</p>\n<center><font color=red size=5><b>原创不易，所有文字及图片都是我自己一个一个弄得。</b></font></center>\n<center><font color=red size=5><b>搬砖党请尊重一下作者，转载请标明出处。</b></font></center>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>最近这一段时间一直使用的是GitHub+Actions实现双部署。因为已经了解到了coding是有访问认证的。但一直忽略了GitHub可以直接使用Token进行访问认证。</p>\n<h2 id=\"快速开始\"><a class=\"markdownIt-Anchor\" href=\"#快速开始\"></a> 快速开始</h2>\n<ol>\n<li>\n<p>获取coding的访问认证</p>\n<p>获取方法可以参考这篇文章<a href=\"https://www.antmoe.com/posts/51b0fa77/index.html\">https://www.antmoe.com/posts/51b0fa77/index.html</a></p>\n</li>\n<li>\n<p>获取GitHub的Token</p>\n<p>关于GitHub的Token介绍与获取请参考<a href=\"https://help.github.com/articles/creating-an-access-token-for-command-line-use/\">Creating a personal access token for the command line</a></p>\n<p>获取后将ssh的链接地址换成https的地址。</p>\n<p>格式为<code>https://你的token@github.com/owner/repo.git</code></p>\n</li>\n<li>\n<p>最后修改hexo的配置文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/22/20200322223919.png\" alt=\"\" /></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n    <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//你的token@github.com/owner/repo\n      <span class=\"token key atrule\">coding</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//username<span class=\"token punctuation\">:</span>password@e.coding.net/owner/repo\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中<code>baidu_url_submitter</code>与<code>baidu_xz_url_submitter</code>是我安装的百度推送插件。如果你没有安装不必填写。</p>\n<p>coding的<code>username</code>与<code>password</code>并非你的登录账户，而是访问令牌的账户和密码</p>\n</li>\n<li>\n<p>配置文件还是用上次的配置文件即可</p>\n<pre class=\"line-numbers language-Jenkinsfile\" data-language=\"Jenkinsfile\"><code class=\"language-Jenkinsfile\">pipeline &#123;\n  agent any\n  stages &#123;\n    stage(&#39;克隆项目&#39;) &#123;\n      steps &#123;\n        sh &#39;git clone https:&#x2F;&#x2F;账号:密码@地址 .&#39;\n        sh &#39;ls -a&#39;\n      &#125;\n    &#125;\n    stage(&#39;安装依赖&#39;) &#123;\n      steps &#123;\n        sh &#39;ls -a&#39;\n        sh &#39;npm install -g hexo-cli&#39;\n        sh &#39;npm install hexo --save&#39;\n      &#125;\n    &#125;\n    stage(&#39;构建发布&#39;) &#123;\n      steps &#123;\n        sh &#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39;\n      &#125;\n    &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>最后说一下脚本的思路</p>\n<ol>\n<li>\n<p>脚本会告诉coding的服务器：“我要使用node-10的环境”</p>\n</li>\n<li>\n<p>执行步骤-克隆项目</p>\n<ul>\n<li>\n<p>运行命令<code>git clone 项目地址</code></p>\n<p>既然是要对你的文件进行生成，那么这里肯定填的是你源文件的地址，而不是发布的仓库地址。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>执行步骤-安装依赖</p>\n<p>此步骤模拟你在自己电脑上初次运行hexo时需要做的</p>\n<p><code>npm install -g hexo-cli</code>和<code>npm install hexo --save</code>命令。</p>\n</li>\n<li>\n<p>执行步骤-构建发布</p>\n<p>这一步就相当于你运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>的命令。</p>\n</li>\n</ol>\n<p>当然了，这一切都是在coding的服务上运行的，所以你只管push，coding服务器会帮你完成这些操作。</p>\n</li>\n</ol>\n<h2 id=\"常见问题\"><a class=\"markdownIt-Anchor\" href=\"#常见问题\"></a> 常见问题</h2>\n<ol>\n<li>\n<p>请确保你的pages项目仓库是公开的，否则请同样配置访问密钥，并修改hexo根目录下的配置文件。</p>\n<p>如果你的pages服务在coding，并且仓库是私有的，那么请添加项目令牌。并替换博客根目录的地址。</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/005B3XPgly1gbpzgcibu3j31ec0dqjs7.jpg\" alt=\"10.png\" /></p>\n<p>然后替换博客根目录下 配置文件中的git地址。</p>\n<p>同样的地址也是<code>https://username:password@项目地址</code></p>\n<p>假如说我的</p>\n<ul>\n<li>令牌用户名是：<code>root</code></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>\n<p>令牌密码是：<code>abcdefg</code></p>\n<ul>\n<li>项目地址是<code>https://e.coding.net/test/test.git</code></li>\n</ul>\n<p>那么在配置文件中的地址就是<code>https://root:abcdefg@e.coding.net/test/test.git</code></p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>GitHub的访问地址</p>\n<p>比如生成的token为<code>12345abc</code></p>\n<p>我的项目地址为<code>https://github.com/test/test.git</code></p>\n<p>那么配置文件(hexo的配置文件)中的deploy地址就应该为<code>https://12345abc@github.com/test/test.git</code></p>\n</li>\n</ol>\n<p>最后，如果我的文章对你有帮助，那么你可以点下边的赞赏按钮，请作者喝杯咖啡哦！</p>\n<p>如果图片失效请在下方留言，或联系作者。</p>\n<center><font color=red size=5><b>原创不易，所有文字及图片都是我自己一个一个弄得。</b></font></center>\n<center><font color=red size=5><b>搬砖党请尊重一下作者，转载请标明出处。</b></font></center>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"},{"name":"优雅部署","path":"api/categories/优雅部署.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"配置环境","path":"api/tags/配置环境.json"}]}